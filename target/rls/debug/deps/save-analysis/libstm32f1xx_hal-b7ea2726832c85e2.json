{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1","program":"/home/martin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","stm32f1xx_hal","--edition=2018","/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"device-selected\"","--cfg","feature=\"medium\"","--cfg","feature=\"rt\"","--cfg","feature=\"stm32f103\"","-C","metadata=b7ea2726832c85e2","-C","extra-filename=-b7ea2726832c85e2","--out-dir","/home/martin/Documents/littleKidogo/lcd_mine/target/rls/debug/deps","-L","dependency=/home/martin/Documents/littleKidogo/lcd_mine/target/rls/debug/deps","--extern","as_slice=/home/martin/Documents/littleKidogo/lcd_mine/target/rls/debug/deps/libas_slice-88622c57315ac75c.rmeta","--extern","cast=/home/martin/Documents/littleKidogo/lcd_mine/target/rls/debug/deps/libcast-e6bfd4b3da1a3d41.rmeta","--extern","cortex_m=/home/martin/Documents/littleKidogo/lcd_mine/target/rls/debug/deps/libcortex_m-b23cd81ac39eeeb4.rmeta","--extern","cortex_m_rt=/home/martin/Documents/littleKidogo/lcd_mine/target/rls/debug/deps/libcortex_m_rt-8639c4fe00dac12b.rmeta","--extern","embedded_hal=/home/martin/Documents/littleKidogo/lcd_mine/target/rls/debug/deps/libembedded_hal-6a71976c9dfc3e40.rmeta","--extern","nb=/home/martin/Documents/littleKidogo/lcd_mine/target/rls/debug/deps/libnb-4407cbc26f59bc7f.rmeta","--extern","stm32f1=/home/martin/Documents/littleKidogo/lcd_mine/target/rls/debug/deps/libstm32f1-02371656d92f3780.rmeta","--extern","void=/home/martin/Documents/littleKidogo/lcd_mine/target/rls/debug/deps/libvoid-1c55bf2c14673f9d.rmeta","--cap-lints","allow","-L","/home/martin/Documents/littleKidogo/lcd_mine/target/rls/debug/build/cortex-m-rt-1ec2c44a7897cd63/out","-L","/home/martin/Documents/littleKidogo/lcd_mine/target/rls/debug/build/stm32f1-9c107949520d0438/out","--error-format=json","--sysroot","/home/martin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/martin/Documents/littleKidogo/lcd_mine/target/rls/debug/deps/libstm32f1xx_hal-b7ea2726832c85e2.rmeta"},"prelude":{"crate_id":{"name":"stm32f1xx_hal","disambiguator":[15566884963932012047,2004457750142342683]},"crate_root":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src","external_crates":[{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[18134888982608726624,15478788479473023395]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[6673302632599048863,4691371433878452070]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[11457885127507258025,479752930606968628]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","num":4,"id":{"name":"embedded_hal","disambiguator":[1733723404603366859,13277417491488495221]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","num":5,"id":{"name":"nb","disambiguator":[6483896859983235449,16227263052310822150]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","num":6,"id":{"name":"nb","disambiguator":[15016646573294218392,16914668604881173774]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","num":7,"id":{"name":"void","disambiguator":[1874610258792325706,8465425820762189222]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","num":8,"id":{"name":"stm32f1","disambiguator":[15693310859538931668,1454640426832954122]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","num":9,"id":{"name":"bare_metal","disambiguator":[14622571807497633237,14725719491189070302]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","num":10,"id":{"name":"cortex_m","disambiguator":[5572641775781783130,16814400303278323801]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","num":11,"id":{"name":"aligned","disambiguator":[15560178248178167243,5628517916079772017]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","num":12,"id":{"name":"as_slice","disambiguator":[7962664538036346720,17209828535429984889]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","num":13,"id":{"name":"generic_array","disambiguator":[9403420971370274949,4831394570897426815]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","num":14,"id":{"name":"typenum","disambiguator":[5663052881271804469,10689305434871740406]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","num":15,"id":{"name":"generic_array","disambiguator":[13594271033105460756,10852087075057108749]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","num":16,"id":{"name":"generic_array","disambiguator":[13615754849631320613,16833191283315257844]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","num":17,"id":{"name":"stable_deref_trait","disambiguator":[14991106344704181069,349672991351421683]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","num":18,"id":{"name":"volatile_register","disambiguator":[9851470546518419176,8809076239845371605]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","num":19,"id":{"name":"vcell","disambiguator":[1359348108622804234,10841178499652019573]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","num":20,"id":{"name":"cortex_m","disambiguator":[15993386692822198059,12218193311848254230]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","num":21,"id":{"name":"cortex_m_rt","disambiguator":[5020458120666752108,13217467061493951286]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","num":22,"id":{"name":"cortex_m_rt_macros","disambiguator":[16417402489593887639,16933467165490820840]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","num":23,"id":{"name":"r0","disambiguator":[11597975102663294901,17876625284489098838]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/delay.rs","num":24,"id":{"name":"cast","disambiguator":[3678555944146765367,8654092592475048973]}}],"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":0,"byte_end":5601,"line_start":1,"line_end":185,"column_start":1,"column_end":18}},"imports":[{"kind":"Use","ref_id":{"krate":8,"index":73},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":4049,"byte_end":4058,"line_start":126,"line_end":126,"column_start":18,"column_end":27},"alias_span":null,"name":"pac","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":8,"index":73},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":4279,"byte_end":4282,"line_start":133,"line_end":133,"column_start":16,"column_end":19},"alias_span":null,"name":"device","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":8,"index":73},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":4412,"byte_end":4415,"line_start":137,"line_end":137,"column_start":16,"column_end":19},"alias_span":null,"name":"stm32","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":72},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/prelude.rs","byte_start":124159,"byte_end":124178,"line_start":1,"line_end":1,"column_start":21,"column_end":40},"alias_span":null,"name":"_stm32_hal_adc_ChannelTimeSequence","value":"","parent":{"krate":0,"index":602}},{"kind":"Use","ref_id":{"krate":0,"index":151},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/prelude.rs","byte_start":124239,"byte_end":124246,"line_start":2,"line_end":2,"column_start":22,"column_end":29},"alias_span":null,"name":"_stm32_hal_afio_AfioExt","value":"","parent":{"krate":0,"index":602}},{"kind":"Use","ref_id":{"krate":0,"index":220},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/prelude.rs","byte_start":124295,"byte_end":124301,"line_start":3,"line_end":3,"column_start":21,"column_end":27},"alias_span":null,"name":"_stm32_hal_crc_CrcExt","value":"","parent":{"krate":0,"index":602}},{"kind":"Use","ref_id":{"krate":0,"index":343},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/prelude.rs","byte_start":124348,"byte_end":124359,"line_start":4,"line_end":4,"column_start":21,"column_end":32},"alias_span":null,"name":"_stm32_hal_dma_CircReadDma","value":"","parent":{"krate":0,"index":602}},{"kind":"Use","ref_id":{"krate":0,"index":289},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/prelude.rs","byte_start":124411,"byte_end":124417,"line_start":5,"line_end":5,"column_start":21,"column_end":27},"alias_span":null,"name":"_stm32_hal_dma_DmaExt","value":"","parent":{"krate":0,"index":602}},{"kind":"Use","ref_id":{"krate":0,"index":348},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/prelude.rs","byte_start":124464,"byte_end":124471,"line_start":6,"line_end":6,"column_start":21,"column_end":28},"alias_span":null,"name":"_stm32_hal_dma_ReadDma","value":"","parent":{"krate":0,"index":602}},{"kind":"Use","ref_id":{"krate":0,"index":352},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/prelude.rs","byte_start":124519,"byte_end":124527,"line_start":7,"line_end":7,"column_start":21,"column_end":29},"alias_span":null,"name":"_stm32_hal_dma_WriteDma","value":"","parent":{"krate":0,"index":602}},{"kind":"Use","ref_id":{"krate":0,"index":361},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/prelude.rs","byte_start":124578,"byte_end":124586,"line_start":8,"line_end":8,"column_start":23,"column_end":31},"alias_span":null,"name":"_stm32_hal_flash_FlashExt","value":"","parent":{"krate":0,"index":602}},{"kind":"Use","ref_id":{"krate":0,"index":376},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/prelude.rs","byte_start":124638,"byte_end":124645,"line_start":9,"line_end":9,"column_start":22,"column_end":29},"alias_span":null,"name":"_stm32_hal_gpio_GpioExt","value":"","parent":{"krate":0,"index":602}},{"kind":"Use","ref_id":{"krate":4,"index":12},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/prelude.rs","byte_start":124699,"byte_end":124706,"line_start":10,"line_end":10,"column_start":26,"column_end":33},"alias_span":null,"name":"_embedded_hal_adc_OneShot","value":"","parent":{"krate":0,"index":602}},{"kind":"Use","ref_id":{"krate":4,"index":131},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/prelude.rs","byte_start":124770,"byte_end":124787,"line_start":11,"line_end":11,"column_start":34,"column_end":51},"alias_span":null,"name":"_embedded_hal_digital_StatefulOutputPin","value":"","parent":{"krate":0,"index":602}},{"kind":"Use","ref_id":{"krate":4,"index":134},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/prelude.rs","byte_start":124865,"byte_end":124884,"line_start":12,"line_end":12,"column_start":34,"column_end":53},"alias_span":null,"name":"_embedded_hal_digital_ToggleableOutputPin","value":"","parent":{"krate":0,"index":602}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/prelude.rs","byte_start":124960,"byte_end":124961,"line_start":13,"line_end":13,"column_start":30,"column_end":31},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":602}},{"kind":"Use","ref_id":{"krate":0,"index":851},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/prelude.rs","byte_start":124983,"byte_end":124989,"line_start":14,"line_end":14,"column_start":21,"column_end":27},"alias_span":null,"name":"_stm32_hal_rcc_RccExt","value":"","parent":{"krate":0,"index":602}},{"kind":"Use","ref_id":{"krate":0,"index":1295},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/prelude.rs","byte_start":125037,"byte_end":125043,"line_start":15,"line_end":15,"column_start":22,"column_end":28},"alias_span":null,"name":"_stm32_hal_time_U32Ext","value":"","parent":{"krate":0,"index":602}},{"kind":"Use","ref_id":{"krate":4,"index":260},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":208850,"byte_end":208860,"line_start":37,"line_end":37,"column_start":27,"column_end":37},"alias_span":null,"name":"FullDuplex","value":"","parent":{"krate":0,"index":1143}},{"kind":"Use","ref_id":{"krate":4,"index":352},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":208862,"byte_end":208866,"line_start":37,"line_end":37,"column_start":39,"column_end":43},"alias_span":null,"name":"Mode","value":"","parent":{"krate":0,"index":1143}},{"kind":"Use","ref_id":{"krate":4,"index":338},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":208868,"byte_end":208873,"line_start":37,"line_end":37,"column_start":45,"column_end":50},"alias_span":null,"name":"Phase","value":"","parent":{"krate":0,"index":1143}},{"kind":"Use","ref_id":{"krate":4,"index":324},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":208875,"byte_end":208883,"line_start":37,"line_end":37,"column_start":52,"column_end":60},"alias_span":null,"name":"Polarity","value":"","parent":{"krate":0,"index":1143}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":0,"byte_end":5601,"line_start":1,"line_end":185,"column_start":1,"column_end":18},"name":"","qualname":"::","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":135},{"krate":0,"index":198},{"krate":0,"index":207},{"krate":0,"index":215},{"krate":0,"index":232},{"krate":0,"index":259},{"krate":0,"index":357},{"krate":0,"index":371},{"krate":0,"index":457},{"krate":0,"index":602},{"krate":0,"index":618},{"krate":0,"index":712},{"krate":0,"index":795},{"krate":0,"index":841},{"krate":0,"index":948},{"krate":0,"index":1003},{"krate":0,"index":1143},{"krate":0,"index":1291},{"krate":0,"index":1326},{"krate":0,"index":1439}],"decl_id":null,"docs":" # HAL for the STM32F1 family of microcontrollers","sig":null,"attributes":[{"value":"/ # HAL for the STM32F1 family of microcontrollers","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":0,"byte_end":52,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":53,"byte_end":56,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This is an implementation of the [`embedded-hal`] traits for the STM32F1 family of","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":57,"byte_end":143,"line_start":3,"line_end":3,"column_start":1,"column_end":87}},{"value":"/ microcontrollers.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":144,"byte_end":165,"line_start":4,"line_end":4,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":166,"byte_end":169,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [`embedded-hal`]: https://crates.io/crates/embedded-hal","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":170,"byte_end":229,"line_start":6,"line_end":6,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":230,"byte_end":233,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":234,"byte_end":245,"line_start":8,"line_end":8,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":246,"byte_end":249,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ## Building an application (binary crate)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":250,"byte_end":295,"line_start":10,"line_end":10,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":296,"byte_end":299,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A detailed usage guide can be found in the [README]","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":300,"byte_end":355,"line_start":12,"line_end":12,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":356,"byte_end":359,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ supported microcontrollers are:","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":360,"byte_end":395,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":396,"byte_end":399,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ - stm32f103","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":400,"byte_end":415,"line_start":16,"line_end":16,"column_start":1,"column_end":16}},{"value":"/ - stm32f101","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":416,"byte_end":431,"line_start":17,"line_end":17,"column_start":1,"column_end":16}},{"value":"/ - stm32f100","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":432,"byte_end":447,"line_start":18,"line_end":18,"column_start":1,"column_end":16}},{"value":"/ - stm32f105","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":448,"byte_end":463,"line_start":19,"line_end":19,"column_start":1,"column_end":16}},{"value":"/ - stm32f107","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":464,"byte_end":479,"line_start":20,"line_end":20,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":480,"byte_end":483,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":484,"byte_end":496,"line_start":22,"line_end":22,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":497,"byte_end":500,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This crate supports multiple microcontrollers in the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":501,"byte_end":557,"line_start":24,"line_end":24,"column_start":1,"column_end":57}},{"value":"/ stm32f1 family. Which specific microcontroller you want to build for has to be","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":558,"byte_end":640,"line_start":25,"line_end":25,"column_start":1,"column_end":83}},{"value":"/ specified with a feature, for example `stm32f103`.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":641,"byte_end":695,"line_start":26,"line_end":26,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":696,"byte_end":699,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ If no microcontroller is specified, the crate will not compile.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":700,"byte_end":767,"line_start":28,"line_end":28,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":768,"byte_end":771,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ The currently supported variants are","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":772,"byte_end":812,"line_start":30,"line_end":30,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":813,"byte_end":816,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ - `stm32f100`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":817,"byte_end":834,"line_start":32,"line_end":32,"column_start":1,"column_end":18}},{"value":"/ - `stm32f101`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":835,"byte_end":852,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ - `stm32f103`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":853,"byte_end":870,"line_start":34,"line_end":34,"column_start":1,"column_end":18}},{"value":"/ - `stm32f105`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":871,"byte_end":888,"line_start":35,"line_end":35,"column_start":1,"column_end":18}},{"value":"/ - `stm32f107`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":889,"byte_end":906,"line_start":36,"line_end":36,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":907,"byte_end":910,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ You may also need to specify the density of the device with `medium`, `high` or `xl`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":911,"byte_end":999,"line_start":38,"line_end":38,"column_start":1,"column_end":89}},{"value":"/ to enable certain peripherals. Generally the density can be determined by the 2nd character","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":1000,"byte_end":1095,"line_start":39,"line_end":39,"column_start":1,"column_end":96}},{"value":"/ after the number in the device name (i.e. For STM32F103C6U, the 6 indicates a low-density","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":1096,"byte_end":1189,"line_start":40,"line_end":40,"column_start":1,"column_end":94}},{"value":"/ device) but check the datasheet or CubeMX to be sure.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":1190,"byte_end":1247,"line_start":41,"line_end":41,"column_start":1,"column_end":58}},{"value":"/ * 4, 6 => low density, no feature required","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":1248,"byte_end":1294,"line_start":42,"line_end":42,"column_start":1,"column_end":47}},{"value":"/ * 8, B => `medium` feature","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":1295,"byte_end":1325,"line_start":43,"line_end":43,"column_start":1,"column_end":31}},{"value":"/ * C, D, E => `high` feature","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":1326,"byte_end":1357,"line_start":44,"line_end":44,"column_start":1,"column_end":32}},{"value":"/ * F, G => `xl` feature","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":1358,"byte_end":1384,"line_start":45,"line_end":45,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":1385,"byte_end":1388,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ## Commonly used setup","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":1389,"byte_end":1415,"line_start":47,"line_end":47,"column_start":1,"column_end":27}},{"value":"/ Almost all peripherals require references to some registers in `RCC` and `AFIO`. The following","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":1416,"byte_end":1514,"line_start":48,"line_end":48,"column_start":1,"column_end":99}},{"value":"/ code shows how to set up those registers","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":1515,"byte_end":1559,"line_start":49,"line_end":49,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":1560,"byte_end":1563,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":1564,"byte_end":1575,"line_start":51,"line_end":51,"column_start":1,"column_end":12}},{"value":"/ // Get access to the device specific peripherals from the peripheral access crate","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":1576,"byte_end":1661,"line_start":52,"line_end":52,"column_start":1,"column_end":86}},{"value":"/ let dp = pac::Peripherals::take().unwrap();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":1662,"byte_end":1709,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":1710,"byte_end":1713,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ // Take ownership over the raw flash and rcc devices and convert them into the corresponding","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":1714,"byte_end":1810,"line_start":55,"line_end":55,"column_start":1,"column_end":97}},{"value":"/ // HAL structs","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":1811,"byte_end":1829,"line_start":56,"line_end":56,"column_start":1,"column_end":19}},{"value":"/ let mut flash = dp.FLASH.constrain();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":1830,"byte_end":1871,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ let mut rcc = dp.RCC.constrain();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":1872,"byte_end":1909,"line_start":58,"line_end":58,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":1910,"byte_end":1913,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ // Freeze the configuration of all the clocks in the system and store the frozen frequencies in","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":1914,"byte_end":2013,"line_start":60,"line_end":60,"column_start":1,"column_end":100}},{"value":"/ // `clocks`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":2014,"byte_end":2029,"line_start":61,"line_end":61,"column_start":1,"column_end":16}},{"value":"/ let clocks = rcc.cfgr.freeze(&mut flash.acr);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":2030,"byte_end":2079,"line_start":62,"line_end":62,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":2080,"byte_end":2083,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ // Prepare the alternate function I/O registers","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":2084,"byte_end":2135,"line_start":64,"line_end":64,"column_start":1,"column_end":52}},{"value":"/ let mut afio = dp.AFIO.constrain(&mut rcc.apb2);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":2136,"byte_end":2188,"line_start":65,"line_end":65,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":2189,"byte_end":2196,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":2197,"byte_end":2200,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ ## Usage examples","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":2201,"byte_end":2222,"line_start":68,"line_end":68,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":2223,"byte_end":2226,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ See the [examples] folder.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":2227,"byte_end":2257,"line_start":70,"line_end":70,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":2258,"byte_end":2261,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ Most of the examples require the following additional dependencies","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":2262,"byte_end":2332,"line_start":72,"line_end":72,"column_start":1,"column_end":71}},{"value":"/ ```toml","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":2333,"byte_end":2344,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":2345,"byte_end":2363,"line_start":74,"line_end":74,"column_start":1,"column_end":19}},{"value":"/ embedded-hal = \"0.2.3\"","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":2364,"byte_end":2390,"line_start":75,"line_end":75,"column_start":1,"column_end":27}},{"value":"/ nb = \"0.1.2\"","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":2391,"byte_end":2407,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/ cortex-m = \"0.6.2\"","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":2408,"byte_end":2430,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/ cortex-m-rt = \"0.6.11\"","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":2431,"byte_end":2457,"line_start":78,"line_end":78,"column_start":1,"column_end":27}},{"value":"/ # Panic behaviour, see https://crates.io/keywords/panic-impl for alternatives","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":2458,"byte_end":2539,"line_start":79,"line_end":79,"column_start":1,"column_end":82}},{"value":"/ panic-halt = \"0.2.0\"","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":2540,"byte_end":2564,"line_start":80,"line_end":80,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":2565,"byte_end":2572,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":2573,"byte_end":2576,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ [examples]: https://github.com/stm32-rs/stm32f1xx-hal/tree/v0.6.1/examples","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":2577,"byte_end":2655,"line_start":83,"line_end":83,"column_start":1,"column_end":79}},{"value":"/ [README]: https://github.com/stm32-rs/stm32f1xx-hal/tree/v0.6.1","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":2656,"byte_end":2723,"line_start":84,"line_end":84,"column_start":1,"column_end":68}},{"value":"no_std","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":2725,"byte_end":2735,"line_start":86,"line_end":86,"column_start":1,"column_end":11}},{"value":"deny(intra_doc_link_resolution_failure)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":2736,"byte_end":2779,"line_start":87,"line_end":87,"column_start":1,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":8},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"adc","qualname":"::adc","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","parent":null,"children":[{"krate":0,"index":9},{"krate":0,"index":17665},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":17683},{"krate":0,"index":21},{"krate":0,"index":17685},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":39},{"krate":0,"index":41},{"krate":0,"index":1480},{"krate":0,"index":1503},{"krate":0,"index":1502},{"krate":0,"index":1500},{"krate":0,"index":1497},{"krate":0,"index":1498},{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":1505},{"krate":0,"index":1516},{"krate":0,"index":1515},{"krate":0,"index":1513},{"krate":0,"index":1510},{"krate":0,"index":1511},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":1518},{"krate":0,"index":1521},{"krate":0,"index":1524},{"krate":0,"index":1527},{"krate":0,"index":1530},{"krate":0,"index":1533},{"krate":0,"index":1536},{"krate":0,"index":1539},{"krate":0,"index":1542},{"krate":0,"index":1545},{"krate":0,"index":1548},{"krate":0,"index":1551},{"krate":0,"index":1554},{"krate":0,"index":1557},{"krate":0,"index":1560},{"krate":0,"index":1563},{"krate":0,"index":1566},{"krate":0,"index":1569},{"krate":0,"index":1572},{"krate":0,"index":1575},{"krate":0,"index":1578},{"krate":0,"index":1581},{"krate":0,"index":1584},{"krate":0,"index":1587},{"krate":0,"index":1590},{"krate":0,"index":1593},{"krate":0,"index":1596},{"krate":0,"index":1599},{"krate":0,"index":1602},{"krate":0,"index":1605},{"krate":0,"index":1608},{"krate":0,"index":1611},{"krate":0,"index":1614},{"krate":0,"index":1628},{"krate":0,"index":1626},{"krate":0,"index":1624},{"krate":0,"index":1620},{"krate":0,"index":1621},{"krate":0,"index":1618},{"krate":0,"index":58},{"krate":0,"index":1629},{"krate":0,"index":1684},{"krate":0,"index":1687},{"krate":0,"index":1692},{"krate":0,"index":1747},{"krate":0,"index":1750},{"krate":0,"index":66},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":87},{"krate":0,"index":94},{"krate":0,"index":99},{"krate":0,"index":111},{"krate":0,"index":116},{"krate":0,"index":122},{"krate":0,"index":129}],"decl_id":null,"docs":" # API for the Analog to Digital converter\n","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":4427,"byte_end":4462,"line_start":139,"line_end":139,"column_start":1,"column_end":36}},{"value":"/ # API for the Analog to Digital converter","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":5603,"byte_end":5648,"line_start":1,"line_end":1,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":37},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":6174,"byte_end":6184,"line_start":20,"line_end":20,"column_start":12,"column_end":22},"name":"Continuous","qualname":"::adc::Continuous","value":"","parent":null,"children":[],"decl_id":null,"docs":" Continuous mode\n","sig":null,"attributes":[{"value":"/ Continuous mode","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":6143,"byte_end":6162,"line_start":19,"line_end":19,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":39},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":6211,"byte_end":6215,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"name":"Scan","qualname":"::adc::Scan","value":"","parent":null,"children":[],"decl_id":null,"docs":" Scan mode\n","sig":null,"attributes":[{"value":"/ Scan mode","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":6186,"byte_end":6199,"line_start":21,"line_end":21,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":41},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":6251,"byte_end":6254,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"Adc","qualname":"::adc::Adc","value":"Adc {  }","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46}],"decl_id":null,"docs":" ADC configuration\n","sig":null,"attributes":[{"value":"/ ADC configuration","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":6218,"byte_end":6239,"line_start":24,"line_end":24,"column_start":1,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1481},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":6571,"byte_end":6574,"line_start":39,"line_end":39,"column_start":5,"column_end":8},"name":"T_1","qualname":"::adc::SampleTime::T_1","value":"SampleTime::T_1","parent":{"krate":0,"index":1480},"children":[],"decl_id":null,"docs":" 1.5 cycles sampling time\n","sig":null,"attributes":[{"value":"/ 1.5 cycles sampling time","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":6538,"byte_end":6566,"line_start":38,"line_end":38,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1483},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":6613,"byte_end":6616,"line_start":41,"line_end":41,"column_start":5,"column_end":8},"name":"T_7","qualname":"::adc::SampleTime::T_7","value":"SampleTime::T_7","parent":{"krate":0,"index":1480},"children":[],"decl_id":null,"docs":" 7.5 cycles sampling time\n","sig":null,"attributes":[{"value":"/ 7.5 cycles sampling time","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":6580,"byte_end":6608,"line_start":40,"line_end":40,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1485},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":6656,"byte_end":6660,"line_start":43,"line_end":43,"column_start":5,"column_end":9},"name":"T_13","qualname":"::adc::SampleTime::T_13","value":"SampleTime::T_13","parent":{"krate":0,"index":1480},"children":[],"decl_id":null,"docs":" 13.5 cycles sampling time\n","sig":null,"attributes":[{"value":"/ 13.5 cycles sampling time","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":6622,"byte_end":6651,"line_start":42,"line_end":42,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1487},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":6700,"byte_end":6704,"line_start":45,"line_end":45,"column_start":5,"column_end":9},"name":"T_28","qualname":"::adc::SampleTime::T_28","value":"SampleTime::T_28","parent":{"krate":0,"index":1480},"children":[],"decl_id":null,"docs":" 28.5 cycles sampling time\n","sig":null,"attributes":[{"value":"/ 28.5 cycles sampling time","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":6666,"byte_end":6695,"line_start":44,"line_end":44,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1489},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":6744,"byte_end":6748,"line_start":47,"line_end":47,"column_start":5,"column_end":9},"name":"T_41","qualname":"::adc::SampleTime::T_41","value":"SampleTime::T_41","parent":{"krate":0,"index":1480},"children":[],"decl_id":null,"docs":" 41.5 cycles sampling time\n","sig":null,"attributes":[{"value":"/ 41.5 cycles sampling time","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":6710,"byte_end":6739,"line_start":46,"line_end":46,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1491},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":6788,"byte_end":6792,"line_start":49,"line_end":49,"column_start":5,"column_end":9},"name":"T_55","qualname":"::adc::SampleTime::T_55","value":"SampleTime::T_55","parent":{"krate":0,"index":1480},"children":[],"decl_id":null,"docs":" 55.5 cycles sampling time\n","sig":null,"attributes":[{"value":"/ 55.5 cycles sampling time","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":6754,"byte_end":6783,"line_start":48,"line_end":48,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1493},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":6832,"byte_end":6836,"line_start":51,"line_end":51,"column_start":5,"column_end":9},"name":"T_71","qualname":"::adc::SampleTime::T_71","value":"SampleTime::T_71","parent":{"krate":0,"index":1480},"children":[],"decl_id":null,"docs":" 71.5 cycles sampling time\n","sig":null,"attributes":[{"value":"/ 71.5 cycles sampling time","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":6798,"byte_end":6827,"line_start":50,"line_end":50,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1495},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":6877,"byte_end":6882,"line_start":53,"line_end":53,"column_start":5,"column_end":10},"name":"T_239","qualname":"::adc::SampleTime::T_239","value":"SampleTime::T_239","parent":{"krate":0,"index":1480},"children":[],"decl_id":null,"docs":" 239.5 cycles sampling time\n","sig":null,"attributes":[{"value":"/ 239.5 cycles sampling time","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":6842,"byte_end":6872,"line_start":52,"line_end":52,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":1480},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":6521,"byte_end":6531,"line_start":37,"line_end":37,"column_start":10,"column_end":20},"name":"SampleTime","qualname":"::adc::SampleTime","value":"pub enum SampleTime {\n\n    /// 1.5 cycles sampling time\n    T_1,\n\n    /// 7.5 cycles sampling time\n    T_7,\n\n    /// 13.5 cycles sampling time\n    T_13,\n\n    /// 28.5 cycles sampling time\n    T_28,\n\n    /// 41.5 cycles sampling time\n    T_41,\n\n    /// 55.5 cycles sampling time\n    T_55,\n\n    /// 71.5 cycles sampling time\n    T_71,\n\n    /// 239.5 cycles sampling time\n    T_239,\n}","parent":null,"children":[{"krate":0,"index":1481},{"krate":0,"index":1483},{"krate":0,"index":1485},{"krate":0,"index":1487},{"krate":0,"index":1489},{"krate":0,"index":1491},{"krate":0,"index":1493},{"krate":0,"index":1495}],"decl_id":null,"docs":" ADC sampling time","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":6386,"byte_end":6416,"line_start":33,"line_end":33,"column_start":1,"column_end":31}},{"value":"/ ADC sampling time","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":6417,"byte_end":6438,"line_start":34,"line_end":34,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":6439,"byte_end":6442,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Options for the sampling time, each is T + 0.5 ADC clock cycles.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":6443,"byte_end":6511,"line_start":36,"line_end":36,"column_start":1,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1506},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":7490,"byte_end":7495,"line_start":83,"line_end":83,"column_start":5,"column_end":10},"name":"Right","qualname":"::adc::Align::Right","value":"Align::Right","parent":{"krate":0,"index":1505},"children":[],"decl_id":null,"docs":" Right alignment of output data\n","sig":null,"attributes":[{"value":"/ Right alignment of output data","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":7451,"byte_end":7485,"line_start":82,"line_end":82,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1508},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":7539,"byte_end":7543,"line_start":85,"line_end":85,"column_start":5,"column_end":9},"name":"Left","qualname":"::adc::Align::Left","value":"Align::Left","parent":{"krate":0,"index":1505},"children":[],"decl_id":null,"docs":" Left alignment of output data\n","sig":null,"attributes":[{"value":"/ Left alignment of output data","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":7501,"byte_end":7534,"line_start":84,"line_end":84,"column_start":5,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":1505},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":7439,"byte_end":7444,"line_start":81,"line_end":81,"column_start":10,"column_end":15},"name":"Align","qualname":"::adc::Align","value":"pub enum Align {\n\n    /// Right alignment of output data\n    Right,\n\n    /// Left alignment of output data\n    Left,\n}","parent":null,"children":[{"krate":0,"index":1506},{"krate":0,"index":1508}],"decl_id":null,"docs":" ADC data register alignment\n","sig":null,"attributes":[{"value":"/ ADC data register alignment","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":7398,"byte_end":7429,"line_start":80,"line_end":80,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":1614},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":9323,"byte_end":9335,"line_start":157,"line_end":157,"column_start":12,"column_end":24},"name":"StoredConfig","qualname":"::adc::StoredConfig","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stored ADC config can be restored using the `Adc::restore_cfg` method\n","sig":null,"attributes":[{"value":"/ Stored ADC config can be restored using the `Adc::restore_cfg` method","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":9188,"byte_end":9261,"line_start":155,"line_end":155,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":22379,"byte_end":22388,"line_start":455,"line_end":455,"column_start":12,"column_end":21},"name":"read_temp","qualname":"<Adc<ADC1>>::read_temp","value":"pub fn read_temp(&mut Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Temperature sensor is connected to channel 16 on ADC1. This sensor can be used\n to measure ambient temperature of the device. However note that the returned\n value is not an absolute temperature value.","sig":null,"attributes":[{"value":"/ Temperature sensor is connected to channel 16 on ADC1. This sensor can be used","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":21501,"byte_end":21583,"line_start":443,"line_end":443,"column_start":5,"column_end":87}},{"value":"/ to measure ambient temperature of the device. However note that the returned","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":21588,"byte_end":21668,"line_start":444,"line_end":444,"column_start":5,"column_end":85}},{"value":"/ value is not an absolute temperature value.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":21673,"byte_end":21720,"line_start":445,"line_end":445,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":21725,"byte_end":21728,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ In particular, according to section 11.10 from Reference Manual RM0008 Rev 20:","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":21733,"byte_end":21815,"line_start":447,"line_end":447,"column_start":5,"column_end":87}},{"value":"/ \"The temperature sensor output voltage changes linearly with temperature. The offset","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":21820,"byte_end":21908,"line_start":448,"line_end":448,"column_start":5,"column_end":93}},{"value":"/ of this line varies from chip to chip due to process variation (up to 45 °C from one","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":21913,"byte_end":22002,"line_start":449,"line_end":449,"column_start":5,"column_end":93}},{"value":"/ chip to another). The internal temperature sensor is more suited to applications","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":22007,"byte_end":22091,"line_start":450,"line_end":450,"column_start":5,"column_end":89}},{"value":"/ that detect temperature variations instead of absolute temperatures. If accurate","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":22096,"byte_end":22180,"line_start":451,"line_end":451,"column_start":5,"column_end":89}},{"value":"/ temperature readings are needed, an external temperature sensor part should be used.\"","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":22185,"byte_end":22274,"line_start":452,"line_end":452,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":22279,"byte_end":22282,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ Formula to calculate temperature value is also taken from the section 11.10.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":22287,"byte_end":22367,"line_start":454,"line_end":454,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":24233,"byte_end":24242,"line_start":497,"line_end":497,"column_start":12,"column_end":21},"name":"read_vref","qualname":"<Adc<ADC1>>::read_vref","value":"pub fn read_vref(&mut Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Internal reference voltage Vrefint is connected to channel 17 on ADC1.\n According to section 5.3.4 \"Embedded reference voltage\" from STM32F1xx\n datasheets, typical value of this reference voltage is 1200 mV.","sig":null,"attributes":[{"value":"/ Internal reference voltage Vrefint is connected to channel 17 on ADC1.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":23721,"byte_end":23795,"line_start":489,"line_end":489,"column_start":5,"column_end":79}},{"value":"/ According to section 5.3.4 \"Embedded reference voltage\" from STM32F1xx","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":23800,"byte_end":23874,"line_start":490,"line_end":490,"column_start":5,"column_end":79}},{"value":"/ datasheets, typical value of this reference voltage is 1200 mV.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":23879,"byte_end":23946,"line_start":491,"line_end":491,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":23951,"byte_end":23954,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ This value is useful when ADC readings need to be converted into voltages.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":23959,"byte_end":24037,"line_start":493,"line_end":493,"column_start":5,"column_end":83}},{"value":"/ For instance, reading from any ADC channel can be converted into voltage (mV)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":24042,"byte_end":24123,"line_start":494,"line_end":494,"column_start":5,"column_end":86}},{"value":"/ using the following formula:","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":24128,"byte_end":24160,"line_start":495,"line_end":495,"column_start":5,"column_end":37}},{"value":"/     v_chan = adc.read(chan) * 1200 / adc.read_vref()","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":24165,"byte_end":24221,"line_start":496,"line_end":496,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1630},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":24322,"byte_end":24326,"line_start":503,"line_end":503,"column_start":12,"column_end":16},"name":"adc1","qualname":"<Adc<ADC1>>::adc1","value":"pub fn adc1(ADC1, &mut APB2, Clocks) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Init a new Adc","sig":null,"attributes":[{"value":"/ Init a new Adc","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":9492,"byte_end":9510,"line_start":166,"line_end":166,"column_start":17,"column_end":35}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":9527,"byte_end":9530,"line_start":167,"line_end":167,"column_start":17,"column_end":20}},{"value":"/ Sets all configurable parameters to one-shot defaults,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":9547,"byte_end":9605,"line_start":168,"line_end":168,"column_start":17,"column_end":75}},{"value":"/ performs a boot-time calibration.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":9622,"byte_end":9659,"line_start":169,"line_end":169,"column_start":17,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1693},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":24384,"byte_end":24388,"line_start":508,"line_end":508,"column_start":12,"column_end":16},"name":"adc2","qualname":"<Adc<ADC2>>::adc2","value":"pub fn adc2(ADC2, &mut APB2, Clocks) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Init a new Adc","sig":null,"attributes":[{"value":"/ Init a new Adc","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":9492,"byte_end":9510,"line_start":166,"line_end":166,"column_start":17,"column_end":35}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":9527,"byte_end":9530,"line_start":167,"line_end":167,"column_start":17,"column_end":20}},{"value":"/ Sets all configurable parameters to one-shot defaults,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":9547,"byte_end":9605,"line_start":168,"line_end":168,"column_start":17,"column_end":75}},{"value":"/ performs a boot-time calibration.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":9622,"byte_end":9659,"line_start":169,"line_end":169,"column_start":17,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":66},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":24491,"byte_end":24501,"line_start":516,"line_end":516,"column_start":12,"column_end":22},"name":"AdcPayload","qualname":"::adc::AdcPayload","value":"AdcPayload {  }","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":72},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":24595,"byte_end":24614,"line_start":522,"line_end":522,"column_start":11,"column_end":30},"name":"ChannelTimeSequence","qualname":"::adc::ChannelTimeSequence","value":"ChannelTimeSequence","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":74}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":24677,"byte_end":24700,"line_start":524,"line_end":524,"column_start":8,"column_end":31},"name":"set_channel_sample_time","qualname":"::adc::ChannelTimeSequence::set_channel_sample_time","value":"pub fn set_channel_sample_time(&mut Self, u8, SampleTime)","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" Set ADC sampling time for particular channel\n","sig":null,"attributes":[{"value":"/ Set ADC sampling time for particular channel","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":24621,"byte_end":24669,"line_start":523,"line_end":523,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":24891,"byte_end":24911,"line_start":528,"line_end":528,"column_start":8,"column_end":28},"name":"set_regular_sequence","qualname":"::adc::ChannelTimeSequence::set_regular_sequence","value":"pub fn set_regular_sequence(&mut Self, &[u8])","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" ADC Set a Regular Channel Conversion Sequence","sig":null,"attributes":[{"value":"/ ADC Set a Regular Channel Conversion Sequence","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":24752,"byte_end":24801,"line_start":525,"line_end":525,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":24806,"byte_end":24809,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ Define a sequence of channels to be converted as a regular group.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":24814,"byte_end":24883,"line_start":527,"line_end":527,"column_start":5,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":75},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":25442,"byte_end":25453,"line_start":546,"line_end":546,"column_start":11,"column_end":22},"name":"SetChannels","qualname":"::adc::SetChannels","value":"SetChannels<PINS>: ChannelTimeSequence","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78}],"decl_id":null,"docs":" Set channel sequence and sample times for custom pins","sig":null,"attributes":[{"value":"/ Set channel sequence and sample times for custom pins","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":24944,"byte_end":25001,"line_start":531,"line_end":531,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":25002,"byte_end":25005,"line_start":532,"line_end":532,"column_start":1,"column_end":4}},{"value":"/ Example:","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":25006,"byte_end":25018,"line_start":533,"line_end":533,"column_start":1,"column_end":13}},{"value":"/ ```rust, ignore","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":25019,"byte_end":25038,"line_start":534,"line_end":534,"column_start":1,"column_end":20}},{"value":"/ pub struct AdcPins(PA0<Analog>, PA2<Analog>);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":25039,"byte_end":25088,"line_start":535,"line_end":535,"column_start":1,"column_end":50}},{"value":"/ impl SetChannels<AdcPins> for Adc<ADC1> {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":25089,"byte_end":25134,"line_start":536,"line_end":536,"column_start":1,"column_end":46}},{"value":"/     fn set_samples(&mut self) {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":25135,"byte_end":25170,"line_start":537,"line_end":537,"column_start":1,"column_end":36}},{"value":"/         self.set_channel_sample_time(0, adc::SampleTime::T_28);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":25171,"byte_end":25238,"line_start":538,"line_end":538,"column_start":1,"column_end":68}},{"value":"/         self.set_channel_sample_time(2, adc::SampleTime::T_28);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":25239,"byte_end":25306,"line_start":539,"line_end":539,"column_start":1,"column_end":68}},{"value":"/     }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":25307,"byte_end":25316,"line_start":540,"line_end":540,"column_start":1,"column_end":10}},{"value":"/     fn set_sequence(&mut self) {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":25317,"byte_end":25353,"line_start":541,"line_end":541,"column_start":1,"column_end":37}},{"value":"/         self.set_regular_sequence(&[0, 2, 0, 2]);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":25354,"byte_end":25407,"line_start":542,"line_end":542,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":25408,"byte_end":25417,"line_start":543,"line_end":543,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":25418,"byte_end":25423,"line_start":544,"line_end":544,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":25424,"byte_end":25431,"line_start":545,"line_end":545,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":25490,"byte_end":25501,"line_start":547,"line_end":547,"column_start":8,"column_end":19},"name":"set_samples","qualname":"::adc::SetChannels::set_samples","value":"pub fn set_samples(&mut Self)","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":25521,"byte_end":25533,"line_start":548,"line_end":548,"column_start":8,"column_end":20},"name":"set_sequence","qualname":"::adc::SetChannels::set_sequence","value":"pub fn set_sequence(&mut Self)","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":79},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":25558,"byte_end":25564,"line_start":551,"line_end":551,"column_start":10,"column_end":16},"name":"AdcDma","qualname":"::adc::AdcDma","value":"RxDma<AdcPayload<PINS, MODE>, C1>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":26383,"byte_end":26391,"line_start":581,"line_end":581,"column_start":12,"column_end":20},"name":"with_dma","qualname":"<Adc<ADC1>>::with_dma","value":"pub fn with_dma<PIN>(Self, PIN, C1) -> AdcDma<PIN, Continuous> where\nPIN: Channel<ADC1, ID = u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":27081,"byte_end":27094,"line_start":604,"line_end":604,"column_start":12,"column_end":25},"name":"with_scan_dma","qualname":"<Adc<ADC1>>::with_scan_dma","value":"pub fn with_scan_dma<PINS>(Self, PINS, C1) -> AdcDma<PINS, Scan> where\nSelf: SetChannels<PINS>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":28017,"byte_end":28022,"line_start":643,"line_end":643,"column_start":12,"column_end":17},"name":"split","qualname":"<AdcDma<PINS, Continuous>>::split","value":"pub fn split(Self) -> (Adc<ADC1>, PINS, C1)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":28388,"byte_end":28393,"line_start":658,"line_end":658,"column_start":12,"column_end":17},"name":"split","qualname":"<AdcDma<PINS, Scan>>::split","value":"pub fn split(Self) -> (Adc<ADC1>, PINS, C1)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":135},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"afio","qualname":"::afio","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":17727},{"krate":0,"index":149},{"krate":0,"index":17729},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":153},{"krate":0,"index":155},{"krate":0,"index":163},{"krate":0,"index":165},{"krate":0,"index":167},{"krate":0,"index":170},{"krate":0,"index":178},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":188},{"krate":0,"index":190},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":196}],"decl_id":null,"docs":" # Alternate Function I/Os\n","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":4476,"byte_end":4511,"line_start":141,"line_end":141,"column_start":1,"column_end":36}},{"value":"/ # Alternate Function I/Os","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":30939,"byte_end":30968,"line_start":1,"line_end":1,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":151},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":31144,"byte_end":31151,"line_start":12,"line_end":12,"column_start":11,"column_end":18},"name":"AfioExt","qualname":"::afio::AfioExt","value":"AfioExt","parent":null,"children":[{"krate":0,"index":152}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":31161,"byte_end":31170,"line_start":13,"line_end":13,"column_start":8,"column_end":17},"name":"constrain","qualname":"::afio::AfioExt::constrain","value":"pub fn constrain(Self, &mut APB2) -> Parts","parent":{"krate":0,"index":151},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":155},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":32036,"byte_end":32041,"line_start":45,"line_end":45,"column_start":12,"column_end":17},"name":"Parts","qualname":"::afio::Parts","value":"Parts { evcr, mapr, exticr1, exticr2, exticr3, exticr4, mapr2 }","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162}],"decl_id":null,"docs":" HAL wrapper around the AFIO registers","sig":null,"attributes":[{"value":"/ HAL wrapper around the AFIO registers","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":31709,"byte_end":31750,"line_start":36,"line_end":36,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":31751,"byte_end":31754,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Aquired by calling [constrain](trait.AfioExt.html#constrain) on the [AFIO","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":31755,"byte_end":31832,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ registers](../pac/struct.AFIO.html)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":31833,"byte_end":31872,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":31873,"byte_end":31876,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":31877,"byte_end":31888,"line_start":41,"line_end":41,"column_start":1,"column_end":12}},{"value":"/ let p = pac::Peripherals::take().unwrap();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":31889,"byte_end":31935,"line_start":42,"line_end":42,"column_start":1,"column_end":47}},{"value":"/ let mut rcc = p.RCC.constrain();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":31936,"byte_end":31972,"line_start":43,"line_end":43,"column_start":1,"column_end":37}},{"value":"/ let mut afio = p.AFIO.constrain(&mut rcc.apb2);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":31973,"byte_end":32024,"line_start":44,"line_end":44,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":156},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":32052,"byte_end":32056,"line_start":46,"line_end":46,"column_start":9,"column_end":13},"name":"evcr","qualname":"::afio::Parts::evcr","value":"afio::EVCR","parent":{"krate":0,"index":155},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":157},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":32072,"byte_end":32076,"line_start":47,"line_end":47,"column_start":9,"column_end":13},"name":"mapr","qualname":"::afio::Parts::mapr","value":"afio::MAPR","parent":{"krate":0,"index":155},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":158},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":32092,"byte_end":32099,"line_start":48,"line_end":48,"column_start":9,"column_end":16},"name":"exticr1","qualname":"::afio::Parts::exticr1","value":"afio::EXTICR1","parent":{"krate":0,"index":155},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":159},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":32118,"byte_end":32125,"line_start":49,"line_end":49,"column_start":9,"column_end":16},"name":"exticr2","qualname":"::afio::Parts::exticr2","value":"afio::EXTICR2","parent":{"krate":0,"index":155},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":160},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":32144,"byte_end":32151,"line_start":50,"line_end":50,"column_start":9,"column_end":16},"name":"exticr3","qualname":"::afio::Parts::exticr3","value":"afio::EXTICR3","parent":{"krate":0,"index":155},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":161},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":32170,"byte_end":32177,"line_start":51,"line_end":51,"column_start":9,"column_end":16},"name":"exticr4","qualname":"::afio::Parts::exticr4","value":"afio::EXTICR4","parent":{"krate":0,"index":155},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":162},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":32196,"byte_end":32201,"line_start":52,"line_end":52,"column_start":9,"column_end":14},"name":"mapr2","qualname":"::afio::Parts::mapr2","value":"afio::MAPR2","parent":{"krate":0,"index":155},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":163},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":32224,"byte_end":32228,"line_start":55,"line_end":55,"column_start":12,"column_end":16},"name":"EVCR","qualname":"::afio::EVCR","value":"EVCR {  }","parent":null,"children":[{"krate":0,"index":164}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":32269,"byte_end":32273,"line_start":60,"line_end":60,"column_start":12,"column_end":16},"name":"evcr","qualname":"<EVCR>::evcr","value":"pub fn evcr(&mut Self) -> &afio::EVCR","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":167},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":32686,"byte_end":32690,"line_start":75,"line_end":75,"column_start":12,"column_end":16},"name":"MAPR","qualname":"::afio::MAPR","value":"MAPR {  }","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":169}],"decl_id":null,"docs":" AF remap and debug I/O configuration register (MAPR)","sig":null,"attributes":[{"value":"/ AF remap and debug I/O configuration register (MAPR)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":32351,"byte_end":32407,"line_start":65,"line_end":65,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":32408,"byte_end":32411,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Aquired through the [Parts](struct.Parts.html) struct.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":32412,"byte_end":32470,"line_start":67,"line_end":67,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":32471,"byte_end":32474,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":32475,"byte_end":32486,"line_start":69,"line_end":69,"column_start":1,"column_end":12}},{"value":"/ let dp = pac::Peripherals::take().unwrap();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":32487,"byte_end":32534,"line_start":70,"line_end":70,"column_start":1,"column_end":48}},{"value":"/ let mut rcc = dp.RCC.constrain();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":32535,"byte_end":32572,"line_start":71,"line_end":71,"column_start":1,"column_end":38}},{"value":"/ let mut afio = dp.AFIO.constrain(&mut rcc.apb2);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":32573,"byte_end":32625,"line_start":72,"line_end":72,"column_start":1,"column_end":53}},{"value":"/ function_using_mapr(&mut afio.mapr);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":32626,"byte_end":32666,"line_start":73,"line_end":73,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":32667,"byte_end":32674,"line_start":74,"line_end":74,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":32842,"byte_end":32853,"line_start":85,"line_end":85,"column_start":12,"column_end":23},"name":"modify_mapr","qualname":"<MAPR>::modify_mapr","value":"pub fn modify_mapr<F>(&mut Self, F) where\nF: for<'w> FnOnce(&afio::mapr::R, &'w mut afio::mapr::W) ->\n&'w mut afio::mapr::W","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":33246,"byte_end":33258,"line_start":95,"line_end":95,"column_start":12,"column_end":24},"name":"disable_jtag","qualname":"<MAPR>::disable_jtag","value":"pub fn disable_jtag(&mut Self, PA15<Debugger>, PB3<Debugger>, PB4<Debugger>)\n-> (PA15<Input<Floating>>, PB3<Input<Floating>>, PB4<Input<Floating>>)","parent":null,"children":[],"decl_id":null,"docs":" Disables the JTAG to free up pa15, pb3 and pb4 for normal use\n","sig":null,"attributes":[{"value":"/ Disables the JTAG to free up pa15, pb3 and pb4 for normal use","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":33169,"byte_end":33234,"line_start":94,"line_end":94,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":178},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":33744,"byte_end":33751,"line_start":114,"line_end":114,"column_start":12,"column_end":19},"name":"EXTICR1","qualname":"::afio::EXTICR1","value":"EXTICR1 {  }","parent":null,"children":[{"krate":0,"index":179}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":33795,"byte_end":33802,"line_start":119,"line_end":119,"column_start":12,"column_end":19},"name":"exticr1","qualname":"<EXTICR1>::exticr1","value":"pub fn exticr1(&mut Self) -> &afio::EXTICR1","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":182},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":33897,"byte_end":33904,"line_start":124,"line_end":124,"column_start":12,"column_end":19},"name":"EXTICR2","qualname":"::afio::EXTICR2","value":"EXTICR2 {  }","parent":null,"children":[{"krate":0,"index":183}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":33948,"byte_end":33955,"line_start":129,"line_end":129,"column_start":12,"column_end":19},"name":"exticr2","qualname":"<EXTICR2>::exticr2","value":"pub fn exticr2(&mut Self) -> &afio::EXTICR2","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":186},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":34050,"byte_end":34057,"line_start":134,"line_end":134,"column_start":12,"column_end":19},"name":"EXTICR3","qualname":"::afio::EXTICR3","value":"EXTICR3 {  }","parent":null,"children":[{"krate":0,"index":187}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":34101,"byte_end":34108,"line_start":139,"line_end":139,"column_start":12,"column_end":19},"name":"exticr3","qualname":"<EXTICR3>::exticr3","value":"pub fn exticr3(&mut Self) -> &afio::EXTICR3","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":190},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":34203,"byte_end":34210,"line_start":144,"line_end":144,"column_start":12,"column_end":19},"name":"EXTICR4","qualname":"::afio::EXTICR4","value":"EXTICR4 {  }","parent":null,"children":[{"krate":0,"index":191}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":34254,"byte_end":34261,"line_start":149,"line_end":149,"column_start":12,"column_end":19},"name":"exticr4","qualname":"<EXTICR4>::exticr4","value":"pub fn exticr4(&mut Self) -> &afio::EXTICR4","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":194},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":34356,"byte_end":34361,"line_start":154,"line_end":154,"column_start":12,"column_end":17},"name":"MAPR2","qualname":"::afio::MAPR2","value":"MAPR2 {  }","parent":null,"children":[{"krate":0,"index":195}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":34403,"byte_end":34408,"line_start":159,"line_end":159,"column_start":12,"column_end":17},"name":"mapr2","qualname":"<MAPR2>::mapr2","value":"pub fn mapr2(&mut Self) -> &afio::MAPR2","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":198},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/backup_domain.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"backup_domain","qualname":"::backup_domain","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/backup_domain.rs","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":204}],"decl_id":null,"docs":"  Registers that are not reset as long as Vbat or Vdd has power.","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":4526,"byte_end":4561,"line_start":143,"line_end":143,"column_start":1,"column_end":36}},{"value":"*\n  Registers that are not reset as long as Vbat or Vdd has power.\n\n  The registers retain their values during wakes from standby mode or system resets. They also\n  retain their value when Vdd is switched off as long as V_BAT is powered.\n\n  The backup domain also contains tamper protection and writes to it must be enabled in order\n  to use the real time clock (RTC).\n\n  Write access to the backup domain is enabled in RCC using the `rcc::Rcc::BKP::constrain()`\n  function.\n\n  Only the RTC functionality is currently implemented.\n*/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/backup_domain.rs","byte_start":34488,"byte_end":35023,"line_start":1,"line_end":14,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":200},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/backup_domain.rs","byte_start":35221,"byte_end":35233,"line_start":22,"line_end":22,"column_start":12,"column_end":24},"name":"BackupDomain","qualname":"::backup_domain::BackupDomain","value":"BackupDomain {  }","parent":null,"children":[{"krate":0,"index":201}],"decl_id":null,"docs":"  The existence of this struct indicates that writing to the the backup\n  domain has been enabled. It is acquired by calling `constrain` on `rcc::Rcc::BKP`\n","sig":null,"attributes":[{"value":"*\n  The existence of this struct indicates that writing to the the backup\n  domain has been enabled. It is acquired by calling `constrain` on `rcc::Rcc::BKP`\n*/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/backup_domain.rs","byte_start":35047,"byte_end":35209,"line_start":18,"line_end":21,"column_start":1,"column_end":3}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/backup_domain.rs","byte_start":35836,"byte_end":35858,"line_start":43,"line_end":43,"column_start":12,"column_end":34},"name":"read_data_register_low","qualname":"<BackupDomain>::read_data_register_low","value":"pub fn read_data_register_low(&Self, usize) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Read a 16-bit value from one of the DR1 to DR10 registers part of the\n Backup Data Register. The register argument is a zero based index to the\n DRx registers: 0 is DR1, up to 9 for DR10. Providing a number above 9\n will panic.\n","sig":null,"attributes":[{"value":"/ Read a 16-bit value from one of the DR1 to DR10 registers part of the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/backup_domain.rs","byte_start":35572,"byte_end":35645,"line_start":39,"line_end":39,"column_start":5,"column_end":78}},{"value":"/ Backup Data Register. The register argument is a zero based index to the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/backup_domain.rs","byte_start":35650,"byte_end":35726,"line_start":40,"line_end":40,"column_start":5,"column_end":81}},{"value":"/ DRx registers: 0 is DR1, up to 9 for DR10. Providing a number above 9","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/backup_domain.rs","byte_start":35731,"byte_end":35804,"line_start":41,"line_end":41,"column_start":5,"column_end":78}},{"value":"/ will panic.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/backup_domain.rs","byte_start":35809,"byte_end":35824,"line_start":42,"line_end":42,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/backup_domain.rs","byte_start":36706,"byte_end":36729,"line_start":61,"line_end":61,"column_start":12,"column_end":35},"name":"write_data_register_low","qualname":"<BackupDomain>::write_data_register_low","value":"pub fn write_data_register_low(&Self, usize, u16)","parent":null,"children":[],"decl_id":null,"docs":" Write a 16-bit value to one of the DR1 to DR10 registers part of the\n Backup Data Register. The register argument is a zero based index to the\n DRx registers: 0 is DR1, up to 9 for DR10. Providing a number above 9\n will panic.\n","sig":null,"attributes":[{"value":"/ Write a 16-bit value to one of the DR1 to DR10 registers part of the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/backup_domain.rs","byte_start":36443,"byte_end":36515,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ Backup Data Register. The register argument is a zero based index to the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/backup_domain.rs","byte_start":36520,"byte_end":36596,"line_start":58,"line_end":58,"column_start":5,"column_end":81}},{"value":"/ DRx registers: 0 is DR1, up to 9 for DR10. Providing a number above 9","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/backup_domain.rs","byte_start":36601,"byte_end":36674,"line_start":59,"line_end":59,"column_start":5,"column_end":78}},{"value":"/ will panic.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/backup_domain.rs","byte_start":36679,"byte_end":36694,"line_start":60,"line_end":60,"column_start":5,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":207},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/bb.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bb","qualname":"::bb","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/bb.rs","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":211},{"krate":0,"index":213}],"decl_id":null,"docs":" Bit banding\n","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":4585,"byte_end":4620,"line_start":145,"line_end":145,"column_start":1,"column_end":36}},{"value":"/ Bit banding","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/bb.rs","byte_start":37334,"byte_end":37349,"line_start":1,"line_end":1,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":209},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/bb.rs","byte_start":37374,"byte_end":37379,"line_start":5,"line_end":5,"column_start":8,"column_end":13},"name":"clear","qualname":"::bb::clear","value":"pub fn clear<T>(*const T, u8)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":211},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/bb.rs","byte_start":37457,"byte_end":37460,"line_start":9,"line_end":9,"column_start":8,"column_end":11},"name":"set","qualname":"::bb::set","value":"pub fn set<T>(*const T, u8)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":213},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/bb.rs","byte_start":37537,"byte_end":37542,"line_start":13,"line_end":13,"column_start":8,"column_end":13},"name":"write","qualname":"::bb::write","value":"pub fn write<T>(*const T, u8, bool)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":215},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/crc.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"crc","qualname":"::crc","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/crc.rs","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":226}],"decl_id":null,"docs":" CRC\n","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":4633,"byte_end":4668,"line_start":147,"line_end":147,"column_start":1,"column_end":36}},{"value":"/ CRC","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/crc.rs","byte_start":37887,"byte_end":37894,"line_start":1,"line_end":1,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":220},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/crc.rs","byte_start":38011,"byte_end":38017,"line_start":7,"line_end":7,"column_start":11,"column_end":17},"name":"CrcExt","qualname":"::crc::CrcExt","value":"CrcExt","parent":null,"children":[{"krate":0,"index":221}],"decl_id":null,"docs":" Extension trait to constrain the CRC peripheral\n","sig":null,"attributes":[{"value":"/ Extension trait to constrain the CRC peripheral","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/crc.rs","byte_start":37949,"byte_end":38000,"line_start":6,"line_end":6,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/crc.rs","byte_start":38108,"byte_end":38111,"line_start":9,"line_end":9,"column_start":8,"column_end":11},"name":"new","qualname":"::crc::CrcExt::new","value":"pub fn new(Self, &mut AHB) -> Crc","parent":{"krate":0,"index":220},"children":[],"decl_id":null,"docs":" Constrains the CRC peripheral to play nicely with the other abstractions\n","sig":null,"attributes":[{"value":"/ Constrains the CRC peripheral to play nicely with the other abstractions","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/crc.rs","byte_start":38024,"byte_end":38100,"line_start":8,"line_end":8,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":224},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/crc.rs","byte_start":38310,"byte_end":38313,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"Crc","qualname":"::crc::Crc","value":"Crc {  }","parent":null,"children":[{"krate":0,"index":225}],"decl_id":null,"docs":" Constrained CRC peripheral\n","sig":null,"attributes":[{"value":"/ Constrained CRC peripheral","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/crc.rs","byte_start":38268,"byte_end":38298,"line_start":19,"line_end":19,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/crc.rs","byte_start":38355,"byte_end":38359,"line_start":25,"line_end":25,"column_start":12,"column_end":16},"name":"read","qualname":"<Crc>::read","value":"pub fn read(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/crc.rs","byte_start":38428,"byte_end":38433,"line_start":29,"line_end":29,"column_start":12,"column_end":17},"name":"write","qualname":"<Crc>::write","value":"pub fn write(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/crc.rs","byte_start":38523,"byte_end":38528,"line_start":33,"line_end":33,"column_start":12,"column_end":17},"name":"reset","qualname":"<Crc>::reset","value":"pub fn reset(&Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":232},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/delay.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"delay","qualname":"::delay","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/delay.rs","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":243},{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":255},{"krate":0,"index":257}],"decl_id":null,"docs":" # Delays\n","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":4682,"byte_end":4717,"line_start":149,"line_end":149,"column_start":1,"column_end":36}},{"value":"/ # Delays","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/delay.rs","byte_start":38786,"byte_end":38798,"line_start":1,"line_end":1,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":240},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/delay.rs","byte_start":39031,"byte_end":39036,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Delay","qualname":"::delay::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":241},{"krate":0,"index":242}],"decl_id":null,"docs":" System timer (SysTick) as a delay provider\n","sig":null,"attributes":[{"value":"/ System timer (SysTick) as a delay provider","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/delay.rs","byte_start":38973,"byte_end":39019,"line_start":10,"line_end":10,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/delay.rs","byte_start":39168,"byte_end":39171,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"name":"new","qualname":"<Delay>::new","value":"pub fn new(SYST, Clocks) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the system timer (SysTick) as a delay provider\n","sig":null,"attributes":[{"value":"/ Configures the system timer (SysTick) as a delay provider","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/delay.rs","byte_start":39095,"byte_end":39156,"line_start":17,"line_end":17,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/delay.rs","byte_start":39369,"byte_end":39373,"line_start":25,"line_end":25,"column_start":12,"column_end":16},"name":"free","qualname":"<Delay>::free","value":"pub fn free(Self) -> SYST","parent":null,"children":[],"decl_id":null,"docs":" Releases the system timer (SysTick) resource\n","sig":null,"attributes":[{"value":"/ Releases the system timer (SysTick) resource","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/delay.rs","byte_start":39309,"byte_end":39357,"line_start":24,"line_end":24,"column_start":5,"column_end":53}}]},{"kind":"Mod","id":{"krate":0,"index":259},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dma","qualname":"::dma","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":17755},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":1756},{"krate":0,"index":1761},{"krate":0,"index":263},{"krate":0,"index":1763},{"krate":0,"index":1772},{"krate":0,"index":1771},{"krate":0,"index":1768},{"krate":0,"index":1769},{"krate":0,"index":268},{"krate":0,"index":275},{"krate":0,"index":280},{"krate":0,"index":283},{"krate":0,"index":286},{"krate":0,"index":289},{"krate":0,"index":292},{"krate":0,"index":295},{"krate":0,"index":302},{"krate":0,"index":306},{"krate":0,"index":310},{"krate":0,"index":315},{"krate":0,"index":317},{"krate":0,"index":1774},{"krate":0,"index":2201},{"krate":0,"index":320},{"krate":0,"index":325},{"krate":0,"index":330},{"krate":0,"index":337},{"krate":0,"index":340},{"krate":0,"index":343},{"krate":0,"index":348},{"krate":0,"index":352}],"decl_id":null,"docs":" # Direct Memory Access\n","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":4733,"byte_end":4768,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/ # Direct Memory Access","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":40744,"byte_end":40770,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"allow(dead_code)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":40771,"byte_end":40791,"line_start":2,"line_end":2,"column_start":1,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1757},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":40900,"byte_end":40907,"line_start":11,"line_end":11,"column_start":5,"column_end":12},"name":"Overrun","qualname":"::dma::Error::Overrun","value":"Error::Overrun","parent":{"krate":0,"index":1756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1759},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":40932,"byte_end":40943,"line_start":13,"line_end":13,"column_start":5,"column_end":16},"name":"_Extensible","qualname":"::dma::Error::_Extensible","value":"Error::_Extensible","parent":{"krate":0,"index":1756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1756},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":40888,"byte_end":40893,"line_start":10,"line_end":10,"column_start":10,"column_end":15},"name":"Error","qualname":"::dma::Error","value":"pub enum Error {\n    Overrun,\n\n    #[doc(hidden)]\n    _Extensible,\n}","parent":null,"children":[{"krate":0,"index":1757},{"krate":0,"index":1759}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":264},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":40969,"byte_end":40981,"line_start":17,"line_end":17,"column_start":5,"column_end":17},"name":"HalfTransfer","qualname":"::dma::Event::HalfTransfer","value":"Event::HalfTransfer","parent":{"krate":0,"index":263},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":266},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":40987,"byte_end":41003,"line_start":18,"line_end":18,"column_start":5,"column_end":21},"name":"TransferComplete","qualname":"::dma::Event::TransferComplete","value":"Event::TransferComplete","parent":{"krate":0,"index":263},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":263},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":40957,"byte_end":40962,"line_start":16,"line_end":16,"column_start":10,"column_end":15},"name":"Event","qualname":"::dma::Event","value":"pub enum Event { HalfTransfer, TransferComplete, }","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":266}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1764},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":41062,"byte_end":41067,"line_start":23,"line_end":23,"column_start":5,"column_end":10},"name":"First","qualname":"::dma::Half::First","value":"Half::First","parent":{"krate":0,"index":1763},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1766},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":41073,"byte_end":41079,"line_start":24,"line_end":24,"column_start":5,"column_end":11},"name":"Second","qualname":"::dma::Half::Second","value":"Half::Second","parent":{"krate":0,"index":1763},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1763},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":41051,"byte_end":41055,"line_start":22,"line_end":22,"column_start":10,"column_end":14},"name":"Half","qualname":"::dma::Half","value":"pub enum Half { First, Second, }","parent":null,"children":[{"krate":0,"index":1764},{"krate":0,"index":1766}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":268},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":41095,"byte_end":41105,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"name":"CircBuffer","qualname":"::dma::CircBuffer","value":"CircBuffer {  }","parent":null,"children":[{"krate":0,"index":271},{"krate":0,"index":273},{"krate":0,"index":274}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":280},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":41510,"byte_end":41516,"line_start":46,"line_end":46,"column_start":11,"column_end":17},"name":"Static","qualname":"::dma::Static","value":"Static<B>","parent":null,"children":[{"krate":0,"index":282}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":41529,"byte_end":41535,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"borrow","qualname":"::dma::Static::borrow","value":"pub fn borrow(&Self) -> &B","parent":{"krate":0,"index":280},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":289},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":41741,"byte_end":41747,"line_start":62,"line_end":62,"column_start":11,"column_end":17},"name":"DmaExt","qualname":"::dma::DmaExt","value":"DmaExt","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":290},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":41759,"byte_end":41767,"line_start":63,"line_end":63,"column_start":10,"column_end":18},"name":"Channels","qualname":"::dma::DmaExt::Channels","value":"type Channels;","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":41777,"byte_end":41782,"line_start":65,"line_end":65,"column_start":8,"column_end":13},"name":"split","qualname":"::dma::DmaExt::split","value":"pub fn split(Self, &mut AHB) -> Self::Channels","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":292},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":41836,"byte_end":41851,"line_start":68,"line_end":68,"column_start":11,"column_end":26},"name":"TransferPayload","qualname":"::dma::TransferPayload","value":"TransferPayload","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":294}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":41861,"byte_end":41866,"line_start":69,"line_end":69,"column_start":8,"column_end":13},"name":"start","qualname":"::dma::TransferPayload::start","value":"pub fn start(&mut Self)","parent":{"krate":0,"index":292},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":41886,"byte_end":41890,"line_start":70,"line_end":70,"column_start":8,"column_end":12},"name":"stop","qualname":"::dma::TransferPayload::stop","value":"pub fn stop(&mut Self)","parent":{"krate":0,"index":292},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":295},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":41917,"byte_end":41925,"line_start":73,"line_end":73,"column_start":12,"column_end":20},"name":"Transfer","qualname":"::dma::Transfer","value":"Transfer {  }","parent":null,"children":[{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":315},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":42669,"byte_end":42670,"line_start":108,"line_end":108,"column_start":12,"column_end":13},"name":"R","qualname":"::dma::R","value":"","parent":null,"children":[],"decl_id":null,"docs":" Read transfer\n","sig":null,"attributes":[{"value":"/ Read transfer","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":42640,"byte_end":42657,"line_start":107,"line_end":107,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":317},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":42703,"byte_end":42704,"line_start":111,"line_end":111,"column_start":12,"column_end":13},"name":"W","qualname":"::dma::W","value":"","parent":null,"children":[],"decl_id":null,"docs":" Write transfer\n","sig":null,"attributes":[{"value":"/ Write transfer","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":42673,"byte_end":42691,"line_start":110,"line_end":110,"column_start":1,"column_end":19}}]},{"kind":"Mod","id":{"krate":0,"index":1774},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":54462,"byte_end":54466,"line_start":387,"line_end":387,"column_start":12,"column_end":16},"name":"dma1","qualname":"::dma::dma1","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","parent":null,"children":[{"krate":0,"index":1775},{"krate":0,"index":1776},{"krate":0,"index":1777},{"krate":0,"index":1778},{"krate":0,"index":1779},{"krate":0,"index":1780},{"krate":0,"index":1781},{"krate":0,"index":1782},{"krate":0,"index":1783},{"krate":0,"index":1784},{"krate":0,"index":1785},{"krate":0,"index":1786},{"krate":0,"index":1787},{"krate":0,"index":1788},{"krate":0,"index":1789},{"krate":0,"index":17783},{"krate":0,"index":1790},{"krate":0,"index":1791},{"krate":0,"index":1792},{"krate":0,"index":1793},{"krate":0,"index":1794},{"krate":0,"index":1795},{"krate":0,"index":1796},{"krate":0,"index":1806},{"krate":0,"index":1808},{"krate":0,"index":1823},{"krate":0,"index":1834},{"krate":0,"index":1845},{"krate":0,"index":1851},{"krate":0,"index":1857},{"krate":0,"index":1862},{"krate":0,"index":1864},{"krate":0,"index":1879},{"krate":0,"index":1890},{"krate":0,"index":1901},{"krate":0,"index":1907},{"krate":0,"index":1913},{"krate":0,"index":1918},{"krate":0,"index":1920},{"krate":0,"index":1935},{"krate":0,"index":1946},{"krate":0,"index":1957},{"krate":0,"index":1963},{"krate":0,"index":1969},{"krate":0,"index":1974},{"krate":0,"index":1976},{"krate":0,"index":1991},{"krate":0,"index":2002},{"krate":0,"index":2013},{"krate":0,"index":2019},{"krate":0,"index":2025},{"krate":0,"index":2030},{"krate":0,"index":2032},{"krate":0,"index":2047},{"krate":0,"index":2058},{"krate":0,"index":2069},{"krate":0,"index":2075},{"krate":0,"index":2081},{"krate":0,"index":2086},{"krate":0,"index":2088},{"krate":0,"index":2103},{"krate":0,"index":2114},{"krate":0,"index":2125},{"krate":0,"index":2131},{"krate":0,"index":2137},{"krate":0,"index":2142},{"krate":0,"index":2144},{"krate":0,"index":2159},{"krate":0,"index":2170},{"krate":0,"index":2181},{"krate":0,"index":2187},{"krate":0,"index":2193},{"krate":0,"index":2198}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1806},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":54478,"byte_end":54480,"line_start":388,"line_end":388,"column_start":9,"column_end":11},"name":"C1","qualname":"::dma::dma1::C1","value":"C1 {  }","parent":null,"children":[{"krate":0,"index":1807}],"decl_id":null,"docs":" A singleton that represents a single DMAx channel (channel X in this case)","sig":null,"attributes":[{"value":"/ A singleton that represents a single DMAx channel (channel X in this case)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":43407,"byte_end":43485,"line_start":137,"line_end":137,"column_start":21,"column_end":99}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":43506,"byte_end":43509,"line_start":138,"line_end":138,"column_start":21,"column_end":24}},{"value":"/ This singleton has exclusive access to the registers of the DMAx channel X","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":43530,"byte_end":43608,"line_start":139,"line_end":139,"column_start":21,"column_end":99}}]},{"kind":"Struct","id":{"krate":0,"index":1862},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":54580,"byte_end":54582,"line_start":393,"line_end":393,"column_start":9,"column_end":11},"name":"C2","qualname":"::dma::dma1::C2","value":"C2 {  }","parent":null,"children":[{"krate":0,"index":1863}],"decl_id":null,"docs":" A singleton that represents a single DMAx channel (channel X in this case)","sig":null,"attributes":[{"value":"/ A singleton that represents a single DMAx channel (channel X in this case)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":43407,"byte_end":43485,"line_start":137,"line_end":137,"column_start":21,"column_end":99}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":43506,"byte_end":43509,"line_start":138,"line_end":138,"column_start":21,"column_end":24}},{"value":"/ This singleton has exclusive access to the registers of the DMAx channel X","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":43530,"byte_end":43608,"line_start":139,"line_end":139,"column_start":21,"column_end":99}}]},{"kind":"Struct","id":{"krate":0,"index":1918},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":54682,"byte_end":54684,"line_start":398,"line_end":398,"column_start":9,"column_end":11},"name":"C3","qualname":"::dma::dma1::C3","value":"C3 {  }","parent":null,"children":[{"krate":0,"index":1919}],"decl_id":null,"docs":" A singleton that represents a single DMAx channel (channel X in this case)","sig":null,"attributes":[{"value":"/ A singleton that represents a single DMAx channel (channel X in this case)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":43407,"byte_end":43485,"line_start":137,"line_end":137,"column_start":21,"column_end":99}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":43506,"byte_end":43509,"line_start":138,"line_end":138,"column_start":21,"column_end":24}},{"value":"/ This singleton has exclusive access to the registers of the DMAx channel X","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":43530,"byte_end":43608,"line_start":139,"line_end":139,"column_start":21,"column_end":99}}]},{"kind":"Struct","id":{"krate":0,"index":1974},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":54784,"byte_end":54786,"line_start":403,"line_end":403,"column_start":9,"column_end":11},"name":"C4","qualname":"::dma::dma1::C4","value":"C4 {  }","parent":null,"children":[{"krate":0,"index":1975}],"decl_id":null,"docs":" A singleton that represents a single DMAx channel (channel X in this case)","sig":null,"attributes":[{"value":"/ A singleton that represents a single DMAx channel (channel X in this case)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":43407,"byte_end":43485,"line_start":137,"line_end":137,"column_start":21,"column_end":99}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":43506,"byte_end":43509,"line_start":138,"line_end":138,"column_start":21,"column_end":24}},{"value":"/ This singleton has exclusive access to the registers of the DMAx channel X","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":43530,"byte_end":43608,"line_start":139,"line_end":139,"column_start":21,"column_end":99}}]},{"kind":"Struct","id":{"krate":0,"index":2030},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":54886,"byte_end":54888,"line_start":408,"line_end":408,"column_start":9,"column_end":11},"name":"C5","qualname":"::dma::dma1::C5","value":"C5 {  }","parent":null,"children":[{"krate":0,"index":2031}],"decl_id":null,"docs":" A singleton that represents a single DMAx channel (channel X in this case)","sig":null,"attributes":[{"value":"/ A singleton that represents a single DMAx channel (channel X in this case)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":43407,"byte_end":43485,"line_start":137,"line_end":137,"column_start":21,"column_end":99}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":43506,"byte_end":43509,"line_start":138,"line_end":138,"column_start":21,"column_end":24}},{"value":"/ This singleton has exclusive access to the registers of the DMAx channel X","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":43530,"byte_end":43608,"line_start":139,"line_end":139,"column_start":21,"column_end":99}}]},{"kind":"Struct","id":{"krate":0,"index":2086},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":54988,"byte_end":54990,"line_start":413,"line_end":413,"column_start":9,"column_end":11},"name":"C6","qualname":"::dma::dma1::C6","value":"C6 {  }","parent":null,"children":[{"krate":0,"index":2087}],"decl_id":null,"docs":" A singleton that represents a single DMAx channel (channel X in this case)","sig":null,"attributes":[{"value":"/ A singleton that represents a single DMAx channel (channel X in this case)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":43407,"byte_end":43485,"line_start":137,"line_end":137,"column_start":21,"column_end":99}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":43506,"byte_end":43509,"line_start":138,"line_end":138,"column_start":21,"column_end":24}},{"value":"/ This singleton has exclusive access to the registers of the DMAx channel X","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":43530,"byte_end":43608,"line_start":139,"line_end":139,"column_start":21,"column_end":99}}]},{"kind":"Struct","id":{"krate":0,"index":2142},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":55090,"byte_end":55092,"line_start":418,"line_end":418,"column_start":9,"column_end":11},"name":"C7","qualname":"::dma::dma1::C7","value":"C7 {  }","parent":null,"children":[{"krate":0,"index":2143}],"decl_id":null,"docs":" A singleton that represents a single DMAx channel (channel X in this case)","sig":null,"attributes":[{"value":"/ A singleton that represents a single DMAx channel (channel X in this case)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":43407,"byte_end":43485,"line_start":137,"line_end":137,"column_start":21,"column_end":99}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":43506,"byte_end":43509,"line_start":138,"line_end":138,"column_start":21,"column_end":24}},{"value":"/ This singleton has exclusive access to the registers of the DMAx channel X","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":43530,"byte_end":43608,"line_start":139,"line_end":139,"column_start":21,"column_end":99}}]},{"kind":"Mod","id":{"krate":0,"index":2201},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":55204,"byte_end":55208,"line_start":425,"line_end":425,"column_start":12,"column_end":16},"name":"dma2","qualname":"::dma::dma2","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","parent":null,"children":[{"krate":0,"index":2202},{"krate":0,"index":2203},{"krate":0,"index":2204},{"krate":0,"index":2205},{"krate":0,"index":2206},{"krate":0,"index":2207},{"krate":0,"index":2208},{"krate":0,"index":2209},{"krate":0,"index":2210},{"krate":0,"index":2211},{"krate":0,"index":2212},{"krate":0,"index":2213},{"krate":0,"index":2214},{"krate":0,"index":2215},{"krate":0,"index":2216},{"krate":0,"index":17817},{"krate":0,"index":2217},{"krate":0,"index":2218},{"krate":0,"index":2219},{"krate":0,"index":2220},{"krate":0,"index":2221},{"krate":0,"index":2222},{"krate":0,"index":2223},{"krate":0,"index":2231},{"krate":0,"index":2233},{"krate":0,"index":2248},{"krate":0,"index":2259},{"krate":0,"index":2270},{"krate":0,"index":2276},{"krate":0,"index":2282},{"krate":0,"index":2287},{"krate":0,"index":2289},{"krate":0,"index":2304},{"krate":0,"index":2315},{"krate":0,"index":2326},{"krate":0,"index":2332},{"krate":0,"index":2338},{"krate":0,"index":2343},{"krate":0,"index":2345},{"krate":0,"index":2360},{"krate":0,"index":2371},{"krate":0,"index":2382},{"krate":0,"index":2388},{"krate":0,"index":2394},{"krate":0,"index":2399},{"krate":0,"index":2401},{"krate":0,"index":2416},{"krate":0,"index":2427},{"krate":0,"index":2438},{"krate":0,"index":2444},{"krate":0,"index":2450},{"krate":0,"index":2455},{"krate":0,"index":2457},{"krate":0,"index":2472},{"krate":0,"index":2483},{"krate":0,"index":2494},{"krate":0,"index":2500},{"krate":0,"index":2506},{"krate":0,"index":2511}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2231},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":55220,"byte_end":55222,"line_start":426,"line_end":426,"column_start":9,"column_end":11},"name":"C1","qualname":"::dma::dma2::C1","value":"C1 {  }","parent":null,"children":[{"krate":0,"index":2232}],"decl_id":null,"docs":" A singleton that represents a single DMAx channel (channel X in this case)","sig":null,"attributes":[{"value":"/ A singleton that represents a single DMAx channel (channel X in this case)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":43407,"byte_end":43485,"line_start":137,"line_end":137,"column_start":21,"column_end":99}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":43506,"byte_end":43509,"line_start":138,"line_end":138,"column_start":21,"column_end":24}},{"value":"/ This singleton has exclusive access to the registers of the DMAx channel X","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":43530,"byte_end":43608,"line_start":139,"line_end":139,"column_start":21,"column_end":99}}]},{"kind":"Struct","id":{"krate":0,"index":2287},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":55322,"byte_end":55324,"line_start":431,"line_end":431,"column_start":9,"column_end":11},"name":"C2","qualname":"::dma::dma2::C2","value":"C2 {  }","parent":null,"children":[{"krate":0,"index":2288}],"decl_id":null,"docs":" A singleton that represents a single DMAx channel (channel X in this case)","sig":null,"attributes":[{"value":"/ A singleton that represents a single DMAx channel (channel X in this case)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":43407,"byte_end":43485,"line_start":137,"line_end":137,"column_start":21,"column_end":99}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":43506,"byte_end":43509,"line_start":138,"line_end":138,"column_start":21,"column_end":24}},{"value":"/ This singleton has exclusive access to the registers of the DMAx channel X","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":43530,"byte_end":43608,"line_start":139,"line_end":139,"column_start":21,"column_end":99}}]},{"kind":"Struct","id":{"krate":0,"index":2343},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":55424,"byte_end":55426,"line_start":436,"line_end":436,"column_start":9,"column_end":11},"name":"C3","qualname":"::dma::dma2::C3","value":"C3 {  }","parent":null,"children":[{"krate":0,"index":2344}],"decl_id":null,"docs":" A singleton that represents a single DMAx channel (channel X in this case)","sig":null,"attributes":[{"value":"/ A singleton that represents a single DMAx channel (channel X in this case)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":43407,"byte_end":43485,"line_start":137,"line_end":137,"column_start":21,"column_end":99}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":43506,"byte_end":43509,"line_start":138,"line_end":138,"column_start":21,"column_end":24}},{"value":"/ This singleton has exclusive access to the registers of the DMAx channel X","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":43530,"byte_end":43608,"line_start":139,"line_end":139,"column_start":21,"column_end":99}}]},{"kind":"Struct","id":{"krate":0,"index":2399},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":55526,"byte_end":55528,"line_start":441,"line_end":441,"column_start":9,"column_end":11},"name":"C4","qualname":"::dma::dma2::C4","value":"C4 {  }","parent":null,"children":[{"krate":0,"index":2400}],"decl_id":null,"docs":" A singleton that represents a single DMAx channel (channel X in this case)","sig":null,"attributes":[{"value":"/ A singleton that represents a single DMAx channel (channel X in this case)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":43407,"byte_end":43485,"line_start":137,"line_end":137,"column_start":21,"column_end":99}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":43506,"byte_end":43509,"line_start":138,"line_end":138,"column_start":21,"column_end":24}},{"value":"/ This singleton has exclusive access to the registers of the DMAx channel X","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":43530,"byte_end":43608,"line_start":139,"line_end":139,"column_start":21,"column_end":99}}]},{"kind":"Struct","id":{"krate":0,"index":2455},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":55628,"byte_end":55630,"line_start":446,"line_end":446,"column_start":9,"column_end":11},"name":"C5","qualname":"::dma::dma2::C5","value":"C5 {  }","parent":null,"children":[{"krate":0,"index":2456}],"decl_id":null,"docs":" A singleton that represents a single DMAx channel (channel X in this case)","sig":null,"attributes":[{"value":"/ A singleton that represents a single DMAx channel (channel X in this case)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":43407,"byte_end":43485,"line_start":137,"line_end":137,"column_start":21,"column_end":99}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":43506,"byte_end":43509,"line_start":138,"line_end":138,"column_start":21,"column_end":24}},{"value":"/ This singleton has exclusive access to the registers of the DMAx channel X","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":43530,"byte_end":43608,"line_start":139,"line_end":139,"column_start":21,"column_end":99}}]},{"kind":"Struct","id":{"krate":0,"index":320},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":55761,"byte_end":55766,"line_start":455,"line_end":455,"column_start":12,"column_end":17},"name":"RxDma","qualname":"::dma::RxDma","value":"RxDma { channel }","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324}],"decl_id":null,"docs":" DMA Receiver\n","sig":null,"attributes":[{"value":"/ DMA Receiver","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":55733,"byte_end":55749,"line_start":454,"line_end":454,"column_start":1,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":324},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":55825,"byte_end":55832,"line_start":457,"line_end":457,"column_start":9,"column_end":16},"name":"channel","qualname":"::dma::RxDma::channel","value":"RXCH","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":325},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":55874,"byte_end":55879,"line_start":461,"line_end":461,"column_start":12,"column_end":17},"name":"TxDma","qualname":"::dma::TxDma","value":"TxDma { channel }","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":329}],"decl_id":null,"docs":" DMA Transmitter\n","sig":null,"attributes":[{"value":"/ DMA Transmitter","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":55843,"byte_end":55862,"line_start":460,"line_end":460,"column_start":1,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":329},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":55938,"byte_end":55945,"line_start":463,"line_end":463,"column_start":9,"column_end":16},"name":"channel","qualname":"::dma::TxDma::channel","value":"TXCH","parent":{"krate":0,"index":325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":330},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":55996,"byte_end":56003,"line_start":467,"line_end":467,"column_start":12,"column_end":19},"name":"RxTxDma","qualname":"::dma::RxTxDma","value":"RxTxDma { rxchannel, txchannel }","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336}],"decl_id":null,"docs":" DMA Receiver/Transmitter\n","sig":null,"attributes":[{"value":"/ DMA Receiver/Transmitter","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":55956,"byte_end":55984,"line_start":466,"line_end":466,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":335},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":56068,"byte_end":56077,"line_start":469,"line_end":469,"column_start":9,"column_end":18},"name":"rxchannel","qualname":"::dma::RxTxDma::rxchannel","value":"RXCH","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":336},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":56093,"byte_end":56102,"line_start":470,"line_end":470,"column_start":9,"column_end":18},"name":"txchannel","qualname":"::dma::RxTxDma::txchannel","value":"TXCH","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":337},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":56123,"byte_end":56130,"line_start":473,"line_end":473,"column_start":11,"column_end":18},"name":"Receive","qualname":"::dma::Receive","value":"Receive","parent":null,"children":[{"krate":0,"index":338},{"krate":0,"index":339}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":338},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":56142,"byte_end":56151,"line_start":474,"line_end":474,"column_start":10,"column_end":19},"name":"RxChannel","qualname":"::dma::Receive::RxChannel","value":"type RxChannel;","parent":{"krate":0,"index":337},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":339},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":56162,"byte_end":56177,"line_start":475,"line_end":475,"column_start":10,"column_end":25},"name":"TransmittedWord","qualname":"::dma::Receive::TransmittedWord","value":"type TransmittedWord;","parent":{"krate":0,"index":337},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":340},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":56192,"byte_end":56200,"line_start":478,"line_end":478,"column_start":11,"column_end":19},"name":"Transmit","qualname":"::dma::Transmit","value":"Transmit","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":341},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":56212,"byte_end":56221,"line_start":479,"line_end":479,"column_start":10,"column_end":19},"name":"TxChannel","qualname":"::dma::Transmit::TxChannel","value":"type TxChannel;","parent":{"krate":0,"index":340},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":342},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":56232,"byte_end":56244,"line_start":480,"line_end":480,"column_start":10,"column_end":22},"name":"ReceivedWord","qualname":"::dma::Transmit::ReceivedWord","value":"type ReceivedWord;","parent":{"krate":0,"index":340},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":343},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":56259,"byte_end":56270,"line_start":483,"line_end":483,"column_start":11,"column_end":22},"name":"CircReadDma","qualname":"::dma::CircReadDma","value":"CircReadDma<B, RS>: Receive","parent":null,"children":[{"krate":0,"index":346}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":56376,"byte_end":56385,"line_start":488,"line_end":488,"column_start":8,"column_end":17},"name":"circ_read","qualname":"::dma::CircReadDma::circ_read","value":"pub fn circ_read(Self, &'static mut [B; ]) -> CircBuffer<B, Self>","parent":{"krate":0,"index":343},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":348},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":56458,"byte_end":56465,"line_start":491,"line_end":491,"column_start":11,"column_end":18},"name":"ReadDma","qualname":"::dma::ReadDma","value":"ReadDma<B, RS>: Receive","parent":null,"children":[{"krate":0,"index":351}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":56571,"byte_end":56575,"line_start":496,"line_end":496,"column_start":8,"column_end":12},"name":"read","qualname":"::dma::ReadDma::read","value":"pub fn read(Self, &'static mut B) -> Transfer<W, &'static mut B, Self>","parent":{"krate":0,"index":348},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":352},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":56657,"byte_end":56665,"line_start":499,"line_end":499,"column_start":11,"column_end":19},"name":"WriteDma","qualname":"::dma::WriteDma","value":"WriteDma<A, B, TS>: Transmit","parent":null,"children":[{"krate":0,"index":356}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":56790,"byte_end":56795,"line_start":505,"line_end":505,"column_start":8,"column_end":13},"name":"write","qualname":"::dma::WriteDma::write","value":"pub fn write(Self, B) -> Transfer<R, B, Self>","parent":{"krate":0,"index":352},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":357},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/flash.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"flash","qualname":"::flash","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/flash.rs","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":363},{"krate":0,"index":365},{"krate":0,"index":367},{"krate":0,"index":369}],"decl_id":null,"docs":" Flash memory\n","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":4782,"byte_end":4817,"line_start":153,"line_end":153,"column_start":1,"column_end":36}},{"value":"/ Flash memory","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/flash.rs","byte_start":56841,"byte_end":56857,"line_start":1,"line_end":1,"column_start":1,"column_end":17}}]},{"kind":"Trait","id":{"krate":0,"index":361},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/flash.rs","byte_start":56956,"byte_end":56964,"line_start":6,"line_end":6,"column_start":11,"column_end":19},"name":"FlashExt","qualname":"::flash::FlashExt","value":"FlashExt","parent":null,"children":[{"krate":0,"index":362}],"decl_id":null,"docs":" Extension trait to constrain the FLASH peripheral\n","sig":null,"attributes":[{"value":"/ Extension trait to constrain the FLASH peripheral","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/flash.rs","byte_start":56892,"byte_end":56945,"line_start":5,"line_end":5,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/flash.rs","byte_start":57057,"byte_end":57066,"line_start":8,"line_end":8,"column_start":8,"column_end":17},"name":"constrain","qualname":"::flash::FlashExt::constrain","value":"pub fn constrain(Self) -> Parts","parent":{"krate":0,"index":361},"children":[],"decl_id":null,"docs":" Constrains the FLASH peripheral to play nicely with the other abstractions\n","sig":null,"attributes":[{"value":"/ Constrains the FLASH peripheral to play nicely with the other abstractions","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/flash.rs","byte_start":56971,"byte_end":57049,"line_start":7,"line_end":7,"column_start":5,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":365},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/flash.rs","byte_start":57258,"byte_end":57263,"line_start":20,"line_end":20,"column_start":12,"column_end":17},"name":"Parts","qualname":"::flash::Parts","value":"Parts { acr }","parent":null,"children":[{"krate":0,"index":366}],"decl_id":null,"docs":" Constrained FLASH peripheral\n","sig":null,"attributes":[{"value":"/ Constrained FLASH peripheral","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/flash.rs","byte_start":57214,"byte_end":57246,"line_start":19,"line_end":19,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":366},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/flash.rs","byte_start":57302,"byte_end":57305,"line_start":22,"line_end":22,"column_start":9,"column_end":12},"name":"acr","qualname":"::flash::Parts::acr","value":"flash::ACR","parent":{"krate":0,"index":365},"children":[],"decl_id":null,"docs":" Opaque ACR register\n","sig":null,"attributes":[{"value":"/ Opaque ACR register","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/flash.rs","byte_start":57270,"byte_end":57293,"line_start":21,"line_end":21,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":367},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/flash.rs","byte_start":57350,"byte_end":57353,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"name":"ACR","qualname":"::flash::ACR","value":"ACR {  }","parent":null,"children":[{"krate":0,"index":368}],"decl_id":null,"docs":" Opaque ACR register\n","sig":null,"attributes":[{"value":"/ Opaque ACR register","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/flash.rs","byte_start":57315,"byte_end":57338,"line_start":25,"line_end":25,"column_start":1,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":371},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gpio","qualname":"::gpio","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","parent":null,"children":[{"krate":0,"index":372},{"krate":0,"index":17833},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":379},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":385},{"krate":0,"index":387},{"krate":0,"index":389},{"krate":0,"index":391},{"krate":0,"index":393},{"krate":0,"index":395},{"krate":0,"index":398},{"krate":0,"index":400},{"krate":0,"index":402},{"krate":0,"index":404},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":410},{"krate":0,"index":412},{"krate":0,"index":2514},{"krate":0,"index":2524},{"krate":0,"index":2521},{"krate":0,"index":2522},{"krate":0,"index":417},{"krate":0,"index":424},{"krate":0,"index":435},{"krate":0,"index":2526},{"krate":0,"index":2532},{"krate":0,"index":2529},{"krate":0,"index":2530},{"krate":0,"index":436},{"krate":0,"index":441},{"krate":0,"index":444},{"krate":0,"index":447},{"krate":0,"index":450},{"krate":0,"index":453},{"krate":0,"index":2534},{"krate":0,"index":2535},{"krate":0,"index":2536},{"krate":0,"index":2537},{"krate":0,"index":2538},{"krate":0,"index":2539},{"krate":0,"index":2556},{"krate":0,"index":2561},{"krate":0,"index":2565},{"krate":0,"index":2570},{"krate":0,"index":2574},{"krate":0,"index":2582},{"krate":0,"index":5251},{"krate":0,"index":7920},{"krate":0,"index":10589},{"krate":0,"index":13258}],"decl_id":null,"docs":" # General Purpose I/Os","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":4833,"byte_end":4868,"line_start":155,"line_end":155,"column_start":1,"column_end":36}},{"value":"/ # General Purpose I/Os","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":57577,"byte_end":57603,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":57604,"byte_end":57607,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The GPIO pins are organised into groups of 16 pins which can be accessed through the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":57608,"byte_end":57696,"line_start":3,"line_end":3,"column_start":1,"column_end":89}},{"value":"/ `gpioa`, `gpiob`... modules. To get access to the pins, you first need to convert them into a","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":57697,"byte_end":57794,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"/ HAL designed struct from the `pac` struct using the `spilit` function.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":57795,"byte_end":57869,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":57870,"byte_end":57881,"line_start":6,"line_end":6,"column_start":1,"column_end":12}},{"value":"/ // Acquire the GPIOC peripheral","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":57882,"byte_end":57917,"line_start":7,"line_end":7,"column_start":1,"column_end":36}},{"value":"/ // NOTE: `dp` is the device peripherals from the `PAC` crate","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":57918,"byte_end":57982,"line_start":8,"line_end":8,"column_start":1,"column_end":65}},{"value":"/ let mut gpioa = dp.GPIOA.split(&mut rcc.apb2);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":57983,"byte_end":58033,"line_start":9,"line_end":9,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":58034,"byte_end":58041,"line_start":10,"line_end":10,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":58042,"byte_end":58045,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This gives you a struct containing two control registers `crl` and `crh`, and all the pins","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":58046,"byte_end":58140,"line_start":12,"line_end":12,"column_start":1,"column_end":95}},{"value":"/ `px0..px15`. These structs are what you use to interract with the pins to change their modes,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":58141,"byte_end":58238,"line_start":13,"line_end":13,"column_start":1,"column_end":98}},{"value":"/ or their inputs or outputs. For example, to set `pa5` high, you would call","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":58239,"byte_end":58317,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":58318,"byte_end":58321,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":58322,"byte_end":58333,"line_start":16,"line_end":16,"column_start":1,"column_end":12}},{"value":"/ let output = gpioa.pa5.into_push_pull_output(&mut gpioa.crl);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":58334,"byte_end":58399,"line_start":17,"line_end":17,"column_start":1,"column_end":66}},{"value":"/ output.set_high();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":58400,"byte_end":58422,"line_start":18,"line_end":18,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":58423,"byte_end":58430,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":58431,"byte_end":58434,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Each GPIO pin can be set to various modes:","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":58435,"byte_end":58481,"line_start":21,"line_end":21,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":58482,"byte_end":58485,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ - **Alternate**: Pin mode required when the pin is driven by other peripherals","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":58486,"byte_end":58568,"line_start":23,"line_end":23,"column_start":1,"column_end":83}},{"value":"/ - **Dynamic**: Pin mode is selected at runtime. See changing configurations for more details","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":58569,"byte_end":58665,"line_start":24,"line_end":24,"column_start":1,"column_end":97}},{"value":"/ - Input","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":58666,"byte_end":58677,"line_start":25,"line_end":25,"column_start":1,"column_end":12}},{"value":"/     - **PullUp**: Input connected to high with a weak pull up resistor. Will be high when nothing","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":58678,"byte_end":58779,"line_start":26,"line_end":26,"column_start":1,"column_end":102}},{"value":"/     is connected","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":58780,"byte_end":58800,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/     - **PullDown**: Input connected to high with a weak pull up resistor. Will be low when nothing","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":58801,"byte_end":58903,"line_start":28,"line_end":28,"column_start":1,"column_end":103}},{"value":"/     is connected","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":58904,"byte_end":58924,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"/     - **Floating**: Input not pulled to high or low. Will be undefined when nothing is connected","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":58925,"byte_end":59025,"line_start":30,"line_end":30,"column_start":1,"column_end":101}},{"value":"/ - Output","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":59026,"byte_end":59038,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/     - **PushPull**: Output which either drives the pin high or low","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":59039,"byte_end":59109,"line_start":32,"line_end":32,"column_start":1,"column_end":71}},{"value":"/     - **OpenDrain**: Output which leaves the gate floating, or pulls it do ground in drain","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":59110,"byte_end":59204,"line_start":33,"line_end":33,"column_start":1,"column_end":95}},{"value":"/     mode. Can be used as an input in the `open` configuration","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":59205,"byte_end":59270,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"/ - **Debugger**: Some pins start out being used by the debugger. A pin in this mode can only be","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":59271,"byte_end":59369,"line_start":35,"line_end":35,"column_start":1,"column_end":99}},{"value":"/ used if the [JTAG peripheral has been turned off](#accessing-pa15-pb3-and-pb14).","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":59370,"byte_end":59454,"line_start":36,"line_end":36,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":59455,"byte_end":59458,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ## Changing modes","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":59459,"byte_end":59480,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/ The simplest way to change the pin mode is to use the `into_<mode>` functions. These return a","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":59481,"byte_end":59578,"line_start":39,"line_end":39,"column_start":1,"column_end":98}},{"value":"/ new struct with the correct mode that you can use the input or output functions on.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":59579,"byte_end":59666,"line_start":40,"line_end":40,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":59667,"byte_end":59670,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ If you need a more temporary mode change, and can not use the `into_<mode>` functions for","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":59671,"byte_end":59764,"line_start":42,"line_end":42,"column_start":1,"column_end":94}},{"value":"/ ownership reasons, you can use the `as_<mode>` functions to temporarily change the pin type, do","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":59765,"byte_end":59864,"line_start":43,"line_end":43,"column_start":1,"column_end":100}},{"value":"/ some output or input, and then have it change back once done.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":59865,"byte_end":59930,"line_start":44,"line_end":44,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":59931,"byte_end":59934,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ### Dynamic Mode Change","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":59935,"byte_end":59962,"line_start":46,"line_end":46,"column_start":1,"column_end":28}},{"value":"/ The above mode change methods guarantee that you can only call input functions when the pin is","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":59963,"byte_end":60061,"line_start":47,"line_end":47,"column_start":1,"column_end":99}},{"value":"/ in input mode, and output when in output modes, but can lead to some issues. Therefore, there","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":60062,"byte_end":60159,"line_start":48,"line_end":48,"column_start":1,"column_end":98}},{"value":"/ is also a mode where the state is kept track of at runtime, allowing you to change the mode","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":60160,"byte_end":60255,"line_start":49,"line_end":49,"column_start":1,"column_end":96}},{"value":"/ often, and without problems with ownership, or references, at the cost of some performance and","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":60256,"byte_end":60354,"line_start":50,"line_end":50,"column_start":1,"column_end":99}},{"value":"/ the risk of runtime errors.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":60355,"byte_end":60386,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":60387,"byte_end":60390,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ To make a pin dynamic, use the `into_dynamic` function, and then use the `make_<mode>` functions to","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":60391,"byte_end":60494,"line_start":53,"line_end":53,"column_start":1,"column_end":104}},{"value":"/ change the mode","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":60495,"byte_end":60514,"line_start":54,"line_end":54,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":60515,"byte_end":60518,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ## Accessing PA15, PB3, and PB14","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":60519,"byte_end":60555,"line_start":56,"line_end":56,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":60556,"byte_end":60559,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ These pins are used by the JTAG peripheral by default. To use them in your program, you need to","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":60560,"byte_end":60659,"line_start":58,"line_end":58,"column_start":1,"column_end":100}},{"value":"/ disable that peripheral. This is done using the [afio::MAPR::disable_jtag](../afio/struct.MAPR.html#method.disable_jtag) function","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":60660,"byte_end":60793,"line_start":59,"line_end":59,"column_start":1,"column_end":134}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":60794,"byte_end":60797,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ # Interfacing with v1 traits","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":60798,"byte_end":60830,"line_start":61,"line_end":61,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":60831,"byte_end":60834,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ `embedded-hal` has two versions of the digital traits, `v2` which is used by this crate and","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":60835,"byte_end":60930,"line_start":63,"line_end":63,"column_start":1,"column_end":96}},{"value":"/ `v1` which is deprecated but still used by a lot of drivers.  If you want to use such a driver","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":60931,"byte_end":61029,"line_start":64,"line_end":64,"column_start":1,"column_end":99}},{"value":"/ with this crate, you need to convert the digital pins to the `v1` type.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":61030,"byte_end":61105,"line_start":65,"line_end":65,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":61106,"byte_end":61109,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ This is done using `embedded-hal::digital::v1_compat::OldOutputPin`. For example:","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":61110,"byte_end":61195,"line_start":67,"line_end":67,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":61196,"byte_end":61199,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":61200,"byte_end":61211,"line_start":69,"line_end":69,"column_start":1,"column_end":12}},{"value":"/ let nss = gpioa.pa4.into_push_pull_output(&mut gpioa.crl);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":61212,"byte_end":61274,"line_start":70,"line_end":70,"column_start":1,"column_end":63}},{"value":"/ let mut mfrc522 = Mfrc522::new(spi, OldOutputPin::from(nss)).unwrap();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":61275,"byte_end":61349,"line_start":71,"line_end":71,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":61350,"byte_end":61357,"line_start":72,"line_end":72,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":376},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":61544,"byte_end":61551,"line_start":81,"line_end":81,"column_start":11,"column_end":18},"name":"GpioExt","qualname":"::gpio::GpioExt","value":"GpioExt","parent":null,"children":[{"krate":0,"index":377},{"krate":0,"index":378}],"decl_id":null,"docs":" Extension trait to split a GPIO peripheral in independent pins and registers\n","sig":null,"attributes":[{"value":"/ Extension trait to split a GPIO peripheral in independent pins and registers","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":61453,"byte_end":61533,"line_start":80,"line_end":80,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":377},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":61598,"byte_end":61603,"line_start":83,"line_end":83,"column_start":10,"column_end":15},"name":"Parts","qualname":"::gpio::GpioExt::Parts","value":"type Parts;","parent":{"krate":0,"index":376},"children":[],"decl_id":null,"docs":" The to split the GPIO into\n","sig":null,"attributes":[{"value":"/ The to split the GPIO into","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":61558,"byte_end":61588,"line_start":82,"line_end":82,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":61679,"byte_end":61684,"line_start":86,"line_end":86,"column_start":8,"column_end":13},"name":"split","qualname":"::gpio::GpioExt::split","value":"pub fn split(Self, &mut APB2) -> Self::Parts","parent":{"krate":0,"index":376},"children":[],"decl_id":null,"docs":" Splits the GPIO block into independent pins and registers\n","sig":null,"attributes":[{"value":"/ Splits the GPIO block into independent pins and registers","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":61610,"byte_end":61671,"line_start":85,"line_end":85,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":379},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":61778,"byte_end":61782,"line_start":90,"line_end":90,"column_start":11,"column_end":15},"name":"Mode","qualname":"::gpio::Mode","value":"Mode<MODE>","parent":null,"children":[],"decl_id":null,"docs":" Marker trait for pin mode detection.\n","sig":null,"attributes":[{"value":"/ Marker trait for pin mode detection.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":61727,"byte_end":61767,"line_start":89,"line_end":89,"column_start":1,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":381},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":61839,"byte_end":61845,"line_start":93,"line_end":93,"column_start":11,"column_end":17},"name":"Active","qualname":"::gpio::Active","value":"Active","parent":null,"children":[],"decl_id":null,"docs":" Marker trait for active states.\n","sig":null,"attributes":[{"value":"/ Marker trait for active states.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":61793,"byte_end":61828,"line_start":92,"line_end":92,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":382},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":61889,"byte_end":61894,"line_start":96,"line_end":96,"column_start":12,"column_end":17},"name":"Input","qualname":"::gpio::Input","value":"Input {  }","parent":null,"children":[{"krate":0,"index":384}],"decl_id":null,"docs":" Input mode (type state)\n","sig":null,"attributes":[{"value":"/ Input mode (type state)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":61850,"byte_end":61877,"line_start":95,"line_end":95,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":387},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":62022,"byte_end":62030,"line_start":102,"line_end":102,"column_start":12,"column_end":20},"name":"Debugger","qualname":"::gpio::Debugger","value":"","parent":null,"children":[],"decl_id":null,"docs":" Used by the debugger (type state)\n","sig":null,"attributes":[{"value":"/ Used by the debugger (type state)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":61973,"byte_end":62010,"line_start":101,"line_end":101,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":389},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":62075,"byte_end":62083,"line_start":104,"line_end":104,"column_start":12,"column_end":20},"name":"Floating","qualname":"::gpio::Floating","value":"","parent":null,"children":[],"decl_id":null,"docs":" Floating input (type state)\n","sig":null,"attributes":[{"value":"/ Floating input (type state)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":62032,"byte_end":62063,"line_start":103,"line_end":103,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":391},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":62131,"byte_end":62139,"line_start":106,"line_end":106,"column_start":12,"column_end":20},"name":"PullDown","qualname":"::gpio::PullDown","value":"","parent":null,"children":[],"decl_id":null,"docs":" Pulled down input (type state)\n","sig":null,"attributes":[{"value":"/ Pulled down input (type state)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":62085,"byte_end":62119,"line_start":105,"line_end":105,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":393},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":62185,"byte_end":62191,"line_start":108,"line_end":108,"column_start":12,"column_end":18},"name":"PullUp","qualname":"::gpio::PullUp","value":"","parent":null,"children":[],"decl_id":null,"docs":" Pulled up input (type state)\n","sig":null,"attributes":[{"value":"/ Pulled up input (type state)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":62141,"byte_end":62173,"line_start":107,"line_end":107,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":395},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":62234,"byte_end":62240,"line_start":111,"line_end":111,"column_start":12,"column_end":18},"name":"Output","qualname":"::gpio::Output","value":"Output {  }","parent":null,"children":[{"krate":0,"index":397}],"decl_id":null,"docs":" Output mode (type state)\n","sig":null,"attributes":[{"value":"/ Output mode (type state)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":62194,"byte_end":62222,"line_start":110,"line_end":110,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":400},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":62365,"byte_end":62373,"line_start":117,"line_end":117,"column_start":12,"column_end":20},"name":"PushPull","qualname":"::gpio::PushPull","value":"","parent":null,"children":[],"decl_id":null,"docs":" Push pull output (type state)\n","sig":null,"attributes":[{"value":"/ Push pull output (type state)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":62320,"byte_end":62353,"line_start":116,"line_end":116,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":402},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":62421,"byte_end":62430,"line_start":119,"line_end":119,"column_start":12,"column_end":21},"name":"OpenDrain","qualname":"::gpio::OpenDrain","value":"","parent":null,"children":[],"decl_id":null,"docs":" Open drain output (type state)\n","sig":null,"attributes":[{"value":"/ Open drain output (type state)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":62375,"byte_end":62409,"line_start":118,"line_end":118,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":404},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":62473,"byte_end":62479,"line_start":122,"line_end":122,"column_start":12,"column_end":18},"name":"Analog","qualname":"::gpio::Analog","value":"","parent":null,"children":[],"decl_id":null,"docs":" Analog mode (type state)\n","sig":null,"attributes":[{"value":"/ Analog mode (type state)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":62433,"byte_end":62461,"line_start":121,"line_end":121,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":407},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":62542,"byte_end":62551,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"name":"Alternate","qualname":"::gpio::Alternate","value":"Alternate {  }","parent":null,"children":[{"krate":0,"index":409}],"decl_id":null,"docs":" Alternate function\n","sig":null,"attributes":[{"value":"/ Alternate function","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":62508,"byte_end":62530,"line_start":125,"line_end":125,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":413},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":62655,"byte_end":62659,"line_start":132,"line_end":132,"column_start":5,"column_end":9},"name":"High","qualname":"::gpio::State::High","value":"State::High","parent":{"krate":0,"index":412},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":415},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":62665,"byte_end":62668,"line_start":133,"line_end":133,"column_start":5,"column_end":8},"name":"Low","qualname":"::gpio::State::Low","value":"State::Low","parent":{"krate":0,"index":412},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":412},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":62643,"byte_end":62648,"line_start":131,"line_end":131,"column_start":10,"column_end":15},"name":"State","qualname":"::gpio::State","value":"pub enum State { High, Low, }","parent":null,"children":[{"krate":0,"index":413},{"krate":0,"index":415}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2515},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":62854,"byte_end":62860,"line_start":141,"line_end":141,"column_start":5,"column_end":11},"name":"RISING","qualname":"::gpio::Edge::RISING","value":"Edge::RISING","parent":{"krate":0,"index":2514},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2517},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":62866,"byte_end":62873,"line_start":142,"line_end":142,"column_start":5,"column_end":12},"name":"FALLING","qualname":"::gpio::Edge::FALLING","value":"Edge::FALLING","parent":{"krate":0,"index":2514},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2519},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":62879,"byte_end":62893,"line_start":143,"line_end":143,"column_start":5,"column_end":19},"name":"RISING_FALLING","qualname":"::gpio::Edge::RISING_FALLING","value":"Edge::RISING_FALLING","parent":{"krate":0,"index":2514},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2514},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":62843,"byte_end":62847,"line_start":140,"line_end":140,"column_start":10,"column_end":14},"name":"Edge","qualname":"::gpio::Edge","value":"pub enum Edge { RISING, FALLING, RISING_FALLING, }","parent":null,"children":[{"krate":0,"index":2515},{"krate":0,"index":2517},{"krate":0,"index":2519}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":62775,"byte_end":62805,"line_start":138,"line_end":138,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":417},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":62935,"byte_end":62942,"line_start":147,"line_end":147,"column_start":11,"column_end":18},"name":"ExtiPin","qualname":"::gpio::ExtiPin","value":"ExtiPin","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423}],"decl_id":null,"docs":" External Interrupt Pin\n","sig":null,"attributes":[{"value":"/ External Interrupt Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":62898,"byte_end":62924,"line_start":146,"line_end":146,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":62952,"byte_end":62973,"line_start":148,"line_end":148,"column_start":8,"column_end":29},"name":"make_interrupt_source","qualname":"::gpio::ExtiPin::make_interrupt_source","value":"pub fn make_interrupt_source(&mut Self, &mut afio::Parts)","parent":{"krate":0,"index":417},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":63017,"byte_end":63032,"line_start":149,"line_end":149,"column_start":8,"column_end":23},"name":"trigger_on_edge","qualname":"::gpio::ExtiPin::trigger_on_edge","value":"pub fn trigger_on_edge(&mut Self, &EXTI, Edge)","parent":{"krate":0,"index":417},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":63078,"byte_end":63094,"line_start":150,"line_end":150,"column_start":8,"column_end":24},"name":"enable_interrupt","qualname":"::gpio::ExtiPin::enable_interrupt","value":"pub fn enable_interrupt(&mut Self, &EXTI)","parent":{"krate":0,"index":417},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":63127,"byte_end":63144,"line_start":151,"line_end":151,"column_start":8,"column_end":25},"name":"disable_interrupt","qualname":"::gpio::ExtiPin::disable_interrupt","value":"pub fn disable_interrupt(&mut Self, &EXTI)","parent":{"krate":0,"index":417},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":63177,"byte_end":63204,"line_start":152,"line_end":152,"column_start":8,"column_end":35},"name":"clear_interrupt_pending_bit","qualname":"::gpio::ExtiPin::clear_interrupt_pending_bit","value":"pub fn clear_interrupt_pending_bit(&mut Self)","parent":{"krate":0,"index":417},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":63224,"byte_end":63239,"line_start":153,"line_end":153,"column_start":8,"column_end":23},"name":"check_interrupt","qualname":"::gpio::ExtiPin::check_interrupt","value":"pub fn check_interrupt(&mut Self) -> bool","parent":{"krate":0,"index":417},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":425},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":63336,"byte_end":63349,"line_start":158,"line_end":158,"column_start":5,"column_end":18},"name":"InputFloating","qualname":"::gpio::Dynamic::InputFloating","value":"Dynamic::InputFloating","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":427},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":63355,"byte_end":63366,"line_start":159,"line_end":159,"column_start":5,"column_end":16},"name":"InputPullUp","qualname":"::gpio::Dynamic::InputPullUp","value":"Dynamic::InputPullUp","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":429},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":63372,"byte_end":63385,"line_start":160,"line_end":160,"column_start":5,"column_end":18},"name":"InputPullDown","qualname":"::gpio::Dynamic::InputPullDown","value":"Dynamic::InputPullDown","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":431},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":63391,"byte_end":63405,"line_start":161,"line_end":161,"column_start":5,"column_end":19},"name":"OutputPushPull","qualname":"::gpio::Dynamic::OutputPushPull","value":"Dynamic::OutputPushPull","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":433},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":63411,"byte_end":63426,"line_start":162,"line_end":162,"column_start":5,"column_end":20},"name":"OutputOpenDrain","qualname":"::gpio::Dynamic::OutputOpenDrain","value":"Dynamic::OutputOpenDrain","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":424},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":63322,"byte_end":63329,"line_start":157,"line_end":157,"column_start":10,"column_end":17},"name":"Dynamic","qualname":"::gpio::Dynamic","value":"pub enum Dynamic {\n    InputFloating,\n    InputPullUp,\n    InputPullDown,\n    OutputPushPull,\n    OutputOpenDrain,\n}","parent":null,"children":[{"krate":0,"index":425},{"krate":0,"index":427},{"krate":0,"index":429},{"krate":0,"index":431},{"krate":0,"index":433}],"decl_id":null,"docs":" Tracks the current pin state for dynamic pins\n","sig":null,"attributes":[{"value":"/ Tracks the current pin state for dynamic pins","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":63263,"byte_end":63312,"line_start":156,"line_end":156,"column_start":1,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2527},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":63515,"byte_end":63528,"line_start":169,"line_end":169,"column_start":5,"column_end":18},"name":"IncorrectMode","qualname":"::gpio::PinModeError::IncorrectMode","value":"PinModeError::IncorrectMode","parent":{"krate":0,"index":2526},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2526},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":63496,"byte_end":63508,"line_start":168,"line_end":168,"column_start":10,"column_end":22},"name":"PinModeError","qualname":"::gpio::PinModeError","value":"pub enum PinModeError { IncorrectMode, }","parent":null,"children":[{"krate":0,"index":2527}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":441},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":64105,"byte_end":64112,"line_start":191,"line_end":191,"column_start":11,"column_end":18},"name":"PinMode","qualname":"::gpio::PinMode","value":"PinMode<CR>","parent":null,"children":[{"krate":0,"index":443}],"decl_id":null,"docs":" NOTE: This trait should ideally be private but must be pub in order to avoid\n complaints from the compiler.\n","sig":null,"attributes":[{"value":"/ NOTE: This trait should ideally be private but must be pub in order to avoid","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":63980,"byte_end":64060,"line_start":189,"line_end":189,"column_start":1,"column_end":81}},{"value":"/ complaints from the compiler.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":64061,"byte_end":64094,"line_start":190,"line_end":190,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":64133,"byte_end":64141,"line_start":192,"line_end":192,"column_start":15,"column_end":23},"name":"set_mode","qualname":"::gpio::PinMode::set_mode","value":"pub unsafe fn set_mode(&mut CR) -> Self","parent":{"krate":0,"index":441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2582},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":103247,"byte_end":103252,"line_start":1195,"line_end":1195,"column_start":14,"column_end":19},"name":"gpioa","qualname":"::gpio::gpioa","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","parent":null,"children":[{"krate":0,"index":2583},{"krate":0,"index":2584},{"krate":0,"index":17851},{"krate":0,"index":2585},{"krate":0,"index":2586},{"krate":0,"index":2587},{"krate":0,"index":2588},{"krate":0,"index":2589},{"krate":0,"index":2590},{"krate":0,"index":2591},{"krate":0,"index":2592},{"krate":0,"index":2593},{"krate":0,"index":2594},{"krate":0,"index":2595},{"krate":0,"index":2596},{"krate":0,"index":2597},{"krate":0,"index":2598},{"krate":0,"index":2599},{"krate":0,"index":2600},{"krate":0,"index":2601},{"krate":0,"index":17877},{"krate":0,"index":2602},{"krate":0,"index":2603},{"krate":0,"index":2604},{"krate":0,"index":17883},{"krate":0,"index":2605},{"krate":0,"index":2606},{"krate":0,"index":17887},{"krate":0,"index":2607},{"krate":0,"index":17889},{"krate":0,"index":2608},{"krate":0,"index":17891},{"krate":0,"index":2609},{"krate":0,"index":17893},{"krate":0,"index":2610},{"krate":0,"index":2611},{"krate":0,"index":2612},{"krate":0,"index":17899},{"krate":0,"index":2613},{"krate":0,"index":2614},{"krate":0,"index":2615},{"krate":0,"index":2616},{"krate":0,"index":2617},{"krate":0,"index":2618},{"krate":0,"index":2619},{"krate":0,"index":2620},{"krate":0,"index":2639},{"krate":0,"index":2642},{"krate":0,"index":2644},{"krate":0,"index":2646},{"krate":0,"index":2648},{"krate":0,"index":2650},{"krate":0,"index":2654},{"krate":0,"index":2657},{"krate":0,"index":2664},{"krate":0,"index":2670},{"krate":0,"index":2691},{"krate":0,"index":2696},{"krate":0,"index":2698},{"krate":0,"index":2703},{"krate":0,"index":2705},{"krate":0,"index":2707},{"krate":0,"index":2710},{"krate":0,"index":2712},{"krate":0,"index":2714},{"krate":0,"index":2739},{"krate":0,"index":2741},{"krate":0,"index":2745},{"krate":0,"index":2750},{"krate":0,"index":2755},{"krate":0,"index":2757},{"krate":0,"index":2763},{"krate":0,"index":2768},{"krate":0,"index":2774},{"krate":0,"index":2778},{"krate":0,"index":2783},{"krate":0,"index":2801},{"krate":0,"index":2808},{"krate":0,"index":2815},{"krate":0,"index":2823},{"krate":0,"index":2831},{"krate":0,"index":2838},{"krate":0,"index":2845},{"krate":0,"index":2852},{"krate":0,"index":2855},{"krate":0,"index":2857},{"krate":0,"index":2859},{"krate":0,"index":2884},{"krate":0,"index":2886},{"krate":0,"index":2890},{"krate":0,"index":2895},{"krate":0,"index":2900},{"krate":0,"index":2902},{"krate":0,"index":2908},{"krate":0,"index":2913},{"krate":0,"index":2919},{"krate":0,"index":2923},{"krate":0,"index":2928},{"krate":0,"index":2946},{"krate":0,"index":2953},{"krate":0,"index":2960},{"krate":0,"index":2968},{"krate":0,"index":2976},{"krate":0,"index":2983},{"krate":0,"index":2990},{"krate":0,"index":2997},{"krate":0,"index":3000},{"krate":0,"index":3002},{"krate":0,"index":3004},{"krate":0,"index":3029},{"krate":0,"index":3031},{"krate":0,"index":3035},{"krate":0,"index":3040},{"krate":0,"index":3045},{"krate":0,"index":3047},{"krate":0,"index":3053},{"krate":0,"index":3058},{"krate":0,"index":3064},{"krate":0,"index":3068},{"krate":0,"index":3073},{"krate":0,"index":3091},{"krate":0,"index":3098},{"krate":0,"index":3105},{"krate":0,"index":3113},{"krate":0,"index":3121},{"krate":0,"index":3128},{"krate":0,"index":3135},{"krate":0,"index":3142},{"krate":0,"index":3145},{"krate":0,"index":3147},{"krate":0,"index":3149},{"krate":0,"index":3174},{"krate":0,"index":3176},{"krate":0,"index":3180},{"krate":0,"index":3185},{"krate":0,"index":3190},{"krate":0,"index":3192},{"krate":0,"index":3198},{"krate":0,"index":3203},{"krate":0,"index":3209},{"krate":0,"index":3213},{"krate":0,"index":3218},{"krate":0,"index":3236},{"krate":0,"index":3243},{"krate":0,"index":3250},{"krate":0,"index":3258},{"krate":0,"index":3266},{"krate":0,"index":3273},{"krate":0,"index":3280},{"krate":0,"index":3287},{"krate":0,"index":3290},{"krate":0,"index":3292},{"krate":0,"index":3294},{"krate":0,"index":3319},{"krate":0,"index":3321},{"krate":0,"index":3325},{"krate":0,"index":3330},{"krate":0,"index":3335},{"krate":0,"index":3337},{"krate":0,"index":3343},{"krate":0,"index":3348},{"krate":0,"index":3354},{"krate":0,"index":3358},{"krate":0,"index":3363},{"krate":0,"index":3381},{"krate":0,"index":3388},{"krate":0,"index":3395},{"krate":0,"index":3403},{"krate":0,"index":3411},{"krate":0,"index":3418},{"krate":0,"index":3425},{"krate":0,"index":3432},{"krate":0,"index":3435},{"krate":0,"index":3437},{"krate":0,"index":3439},{"krate":0,"index":3464},{"krate":0,"index":3466},{"krate":0,"index":3470},{"krate":0,"index":3475},{"krate":0,"index":3480},{"krate":0,"index":3482},{"krate":0,"index":3488},{"krate":0,"index":3493},{"krate":0,"index":3499},{"krate":0,"index":3503},{"krate":0,"index":3508},{"krate":0,"index":3526},{"krate":0,"index":3533},{"krate":0,"index":3540},{"krate":0,"index":3548},{"krate":0,"index":3556},{"krate":0,"index":3563},{"krate":0,"index":3570},{"krate":0,"index":3577},{"krate":0,"index":3580},{"krate":0,"index":3582},{"krate":0,"index":3584},{"krate":0,"index":3609},{"krate":0,"index":3611},{"krate":0,"index":3615},{"krate":0,"index":3620},{"krate":0,"index":3625},{"krate":0,"index":3627},{"krate":0,"index":3633},{"krate":0,"index":3638},{"krate":0,"index":3644},{"krate":0,"index":3648},{"krate":0,"index":3653},{"krate":0,"index":3671},{"krate":0,"index":3678},{"krate":0,"index":3685},{"krate":0,"index":3693},{"krate":0,"index":3701},{"krate":0,"index":3708},{"krate":0,"index":3715},{"krate":0,"index":3722},{"krate":0,"index":3725},{"krate":0,"index":3727},{"krate":0,"index":3729},{"krate":0,"index":3754},{"krate":0,"index":3756},{"krate":0,"index":3760},{"krate":0,"index":3765},{"krate":0,"index":3770},{"krate":0,"index":3772},{"krate":0,"index":3778},{"krate":0,"index":3783},{"krate":0,"index":3789},{"krate":0,"index":3793},{"krate":0,"index":3798},{"krate":0,"index":3816},{"krate":0,"index":3823},{"krate":0,"index":3830},{"krate":0,"index":3838},{"krate":0,"index":3846},{"krate":0,"index":3853},{"krate":0,"index":3860},{"krate":0,"index":3867},{"krate":0,"index":3870},{"krate":0,"index":3872},{"krate":0,"index":3874},{"krate":0,"index":3899},{"krate":0,"index":3901},{"krate":0,"index":3905},{"krate":0,"index":3910},{"krate":0,"index":3915},{"krate":0,"index":3917},{"krate":0,"index":3923},{"krate":0,"index":3928},{"krate":0,"index":3934},{"krate":0,"index":3938},{"krate":0,"index":3943},{"krate":0,"index":3961},{"krate":0,"index":3968},{"krate":0,"index":3975},{"krate":0,"index":3983},{"krate":0,"index":3991},{"krate":0,"index":3998},{"krate":0,"index":4005},{"krate":0,"index":4012},{"krate":0,"index":4015},{"krate":0,"index":4017},{"krate":0,"index":4019},{"krate":0,"index":4044},{"krate":0,"index":4046},{"krate":0,"index":4050},{"krate":0,"index":4055},{"krate":0,"index":4060},{"krate":0,"index":4062},{"krate":0,"index":4068},{"krate":0,"index":4073},{"krate":0,"index":4079},{"krate":0,"index":4083},{"krate":0,"index":4088},{"krate":0,"index":4106},{"krate":0,"index":4113},{"krate":0,"index":4120},{"krate":0,"index":4128},{"krate":0,"index":4136},{"krate":0,"index":4143},{"krate":0,"index":4150},{"krate":0,"index":4157},{"krate":0,"index":4160},{"krate":0,"index":4162},{"krate":0,"index":4164},{"krate":0,"index":4189},{"krate":0,"index":4191},{"krate":0,"index":4195},{"krate":0,"index":4200},{"krate":0,"index":4205},{"krate":0,"index":4207},{"krate":0,"index":4213},{"krate":0,"index":4218},{"krate":0,"index":4224},{"krate":0,"index":4228},{"krate":0,"index":4233},{"krate":0,"index":4251},{"krate":0,"index":4258},{"krate":0,"index":4265},{"krate":0,"index":4273},{"krate":0,"index":4281},{"krate":0,"index":4288},{"krate":0,"index":4295},{"krate":0,"index":4302},{"krate":0,"index":4305},{"krate":0,"index":4307},{"krate":0,"index":4309},{"krate":0,"index":4334},{"krate":0,"index":4336},{"krate":0,"index":4340},{"krate":0,"index":4345},{"krate":0,"index":4350},{"krate":0,"index":4352},{"krate":0,"index":4358},{"krate":0,"index":4363},{"krate":0,"index":4369},{"krate":0,"index":4373},{"krate":0,"index":4378},{"krate":0,"index":4396},{"krate":0,"index":4403},{"krate":0,"index":4410},{"krate":0,"index":4418},{"krate":0,"index":4426},{"krate":0,"index":4433},{"krate":0,"index":4440},{"krate":0,"index":4447},{"krate":0,"index":4450},{"krate":0,"index":4452},{"krate":0,"index":4454},{"krate":0,"index":4479},{"krate":0,"index":4481},{"krate":0,"index":4485},{"krate":0,"index":4490},{"krate":0,"index":4495},{"krate":0,"index":4497},{"krate":0,"index":4503},{"krate":0,"index":4508},{"krate":0,"index":4514},{"krate":0,"index":4518},{"krate":0,"index":4523},{"krate":0,"index":4541},{"krate":0,"index":4548},{"krate":0,"index":4555},{"krate":0,"index":4563},{"krate":0,"index":4571},{"krate":0,"index":4578},{"krate":0,"index":4585},{"krate":0,"index":4592},{"krate":0,"index":4595},{"krate":0,"index":4597},{"krate":0,"index":4599},{"krate":0,"index":4624},{"krate":0,"index":4626},{"krate":0,"index":4630},{"krate":0,"index":4635},{"krate":0,"index":4640},{"krate":0,"index":4642},{"krate":0,"index":4648},{"krate":0,"index":4653},{"krate":0,"index":4659},{"krate":0,"index":4663},{"krate":0,"index":4668},{"krate":0,"index":4686},{"krate":0,"index":4693},{"krate":0,"index":4700},{"krate":0,"index":4708},{"krate":0,"index":4716},{"krate":0,"index":4723},{"krate":0,"index":4730},{"krate":0,"index":4737},{"krate":0,"index":4740},{"krate":0,"index":4742},{"krate":0,"index":4744},{"krate":0,"index":4769},{"krate":0,"index":4771},{"krate":0,"index":4775},{"krate":0,"index":4780},{"krate":0,"index":4785},{"krate":0,"index":4787},{"krate":0,"index":4793},{"krate":0,"index":4798},{"krate":0,"index":4804},{"krate":0,"index":4808},{"krate":0,"index":4813},{"krate":0,"index":4831},{"krate":0,"index":4838},{"krate":0,"index":4845},{"krate":0,"index":4853},{"krate":0,"index":4861},{"krate":0,"index":4868},{"krate":0,"index":4875},{"krate":0,"index":4882},{"krate":0,"index":4885},{"krate":0,"index":4887},{"krate":0,"index":4889},{"krate":0,"index":4914},{"krate":0,"index":4916},{"krate":0,"index":4920},{"krate":0,"index":4925},{"krate":0,"index":4930},{"krate":0,"index":4932},{"krate":0,"index":4938},{"krate":0,"index":4943},{"krate":0,"index":4949},{"krate":0,"index":4953},{"krate":0,"index":4958},{"krate":0,"index":4976},{"krate":0,"index":4983},{"krate":0,"index":4990},{"krate":0,"index":4998},{"krate":0,"index":5006},{"krate":0,"index":5013},{"krate":0,"index":5020}],"decl_id":null,"docs":" GPIO\n","sig":null,"attributes":[{"value":"/ GPIO","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":64821,"byte_end":64829,"line_start":221,"line_end":221,"column_start":9,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":2623},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":103281,"byte_end":103284,"line_start":1196,"line_end":1196,"column_start":11,"column_end":14},"name":"pa0","qualname":"::gpio::gpioa::Parts::pa0","value":"gpio::gpioa::PA0<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":2620},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":2624},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":103331,"byte_end":103334,"line_start":1197,"line_end":1197,"column_start":11,"column_end":14},"name":"pa1","qualname":"::gpio::gpioa::Parts::pa1","value":"gpio::gpioa::PA1<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":2620},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":2625},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":103381,"byte_end":103384,"line_start":1198,"line_end":1198,"column_start":11,"column_end":14},"name":"pa2","qualname":"::gpio::gpioa::Parts::pa2","value":"gpio::gpioa::PA2<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":2620},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":2626},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":103431,"byte_end":103434,"line_start":1199,"line_end":1199,"column_start":11,"column_end":14},"name":"pa3","qualname":"::gpio::gpioa::Parts::pa3","value":"gpio::gpioa::PA3<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":2620},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":2627},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":103481,"byte_end":103484,"line_start":1200,"line_end":1200,"column_start":11,"column_end":14},"name":"pa4","qualname":"::gpio::gpioa::Parts::pa4","value":"gpio::gpioa::PA4<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":2620},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":2628},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":103531,"byte_end":103534,"line_start":1201,"line_end":1201,"column_start":11,"column_end":14},"name":"pa5","qualname":"::gpio::gpioa::Parts::pa5","value":"gpio::gpioa::PA5<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":2620},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":2629},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":103581,"byte_end":103584,"line_start":1202,"line_end":1202,"column_start":11,"column_end":14},"name":"pa6","qualname":"::gpio::gpioa::Parts::pa6","value":"gpio::gpioa::PA6<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":2620},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":2630},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":103631,"byte_end":103634,"line_start":1203,"line_end":1203,"column_start":11,"column_end":14},"name":"pa7","qualname":"::gpio::gpioa::Parts::pa7","value":"gpio::gpioa::PA7<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":2620},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":2631},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":103681,"byte_end":103684,"line_start":1204,"line_end":1204,"column_start":11,"column_end":14},"name":"pa8","qualname":"::gpio::gpioa::Parts::pa8","value":"gpio::gpioa::PA8<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":2620},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":2632},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":103731,"byte_end":103734,"line_start":1205,"line_end":1205,"column_start":11,"column_end":14},"name":"pa9","qualname":"::gpio::gpioa::Parts::pa9","value":"gpio::gpioa::PA9<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":2620},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":2633},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":103782,"byte_end":103786,"line_start":1206,"line_end":1206,"column_start":12,"column_end":16},"name":"pa10","qualname":"::gpio::gpioa::Parts::pa10","value":"gpio::gpioa::PA10<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":2620},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":2634},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":103835,"byte_end":103839,"line_start":1207,"line_end":1207,"column_start":12,"column_end":16},"name":"pa11","qualname":"::gpio::gpioa::Parts::pa11","value":"gpio::gpioa::PA11<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":2620},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":2635},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":103888,"byte_end":103892,"line_start":1208,"line_end":1208,"column_start":12,"column_end":16},"name":"pa12","qualname":"::gpio::gpioa::Parts::pa12","value":"gpio::gpioa::PA12<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":2620},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":2636},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":103941,"byte_end":103945,"line_start":1209,"line_end":1209,"column_start":12,"column_end":16},"name":"pa13","qualname":"::gpio::gpioa::Parts::pa13","value":"gpio::gpioa::PA13<gpio::Debugger>","parent":{"krate":0,"index":2620},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":2637},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":103987,"byte_end":103991,"line_start":1210,"line_end":1210,"column_start":12,"column_end":16},"name":"pa14","qualname":"::gpio::gpioa::Parts::pa14","value":"gpio::gpioa::PA14<gpio::Debugger>","parent":{"krate":0,"index":2620},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":2638},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":104033,"byte_end":104037,"line_start":1211,"line_end":1211,"column_start":12,"column_end":16},"name":"pa15","qualname":"::gpio::gpioa::Parts::pa15","value":"gpio::gpioa::PA15<gpio::Debugger>","parent":{"krate":0,"index":2620},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":2703},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":103261,"byte_end":103264,"line_start":1195,"line_end":1195,"column_start":28,"column_end":31},"name":"PAx","qualname":"::gpio::gpioa::PAx","value":"Pxx<MODE>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2707},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":103275,"byte_end":103278,"line_start":1196,"line_end":1196,"column_start":5,"column_end":8},"name":"PA0","qualname":"::gpio::gpioa::PA0","value":"PA0 {  }","parent":null,"children":[{"krate":0,"index":2709}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":2852},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":103325,"byte_end":103328,"line_start":1197,"line_end":1197,"column_start":5,"column_end":8},"name":"PA1","qualname":"::gpio::gpioa::PA1","value":"PA1 {  }","parent":null,"children":[{"krate":0,"index":2854}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":2997},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":103375,"byte_end":103378,"line_start":1198,"line_end":1198,"column_start":5,"column_end":8},"name":"PA2","qualname":"::gpio::gpioa::PA2","value":"PA2 {  }","parent":null,"children":[{"krate":0,"index":2999}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":3142},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":103425,"byte_end":103428,"line_start":1199,"line_end":1199,"column_start":5,"column_end":8},"name":"PA3","qualname":"::gpio::gpioa::PA3","value":"PA3 {  }","parent":null,"children":[{"krate":0,"index":3144}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":3287},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":103475,"byte_end":103478,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8},"name":"PA4","qualname":"::gpio::gpioa::PA4","value":"PA4 {  }","parent":null,"children":[{"krate":0,"index":3289}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":3432},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":103525,"byte_end":103528,"line_start":1201,"line_end":1201,"column_start":5,"column_end":8},"name":"PA5","qualname":"::gpio::gpioa::PA5","value":"PA5 {  }","parent":null,"children":[{"krate":0,"index":3434}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":3577},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":103575,"byte_end":103578,"line_start":1202,"line_end":1202,"column_start":5,"column_end":8},"name":"PA6","qualname":"::gpio::gpioa::PA6","value":"PA6 {  }","parent":null,"children":[{"krate":0,"index":3579}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":3722},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":103625,"byte_end":103628,"line_start":1203,"line_end":1203,"column_start":5,"column_end":8},"name":"PA7","qualname":"::gpio::gpioa::PA7","value":"PA7 {  }","parent":null,"children":[{"krate":0,"index":3724}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":3867},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":103675,"byte_end":103678,"line_start":1204,"line_end":1204,"column_start":5,"column_end":8},"name":"PA8","qualname":"::gpio::gpioa::PA8","value":"PA8 {  }","parent":null,"children":[{"krate":0,"index":3869}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":4012},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":103725,"byte_end":103728,"line_start":1205,"line_end":1205,"column_start":5,"column_end":8},"name":"PA9","qualname":"::gpio::gpioa::PA9","value":"PA9 {  }","parent":null,"children":[{"krate":0,"index":4014}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":4157},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":103775,"byte_end":103779,"line_start":1206,"line_end":1206,"column_start":5,"column_end":9},"name":"PA10","qualname":"::gpio::gpioa::PA10","value":"PA10 {  }","parent":null,"children":[{"krate":0,"index":4159}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":4302},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":103828,"byte_end":103832,"line_start":1207,"line_end":1207,"column_start":5,"column_end":9},"name":"PA11","qualname":"::gpio::gpioa::PA11","value":"PA11 {  }","parent":null,"children":[{"krate":0,"index":4304}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":4447},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":103881,"byte_end":103885,"line_start":1208,"line_end":1208,"column_start":5,"column_end":9},"name":"PA12","qualname":"::gpio::gpioa::PA12","value":"PA12 {  }","parent":null,"children":[{"krate":0,"index":4449}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":4592},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":103934,"byte_end":103938,"line_start":1209,"line_end":1209,"column_start":5,"column_end":9},"name":"PA13","qualname":"::gpio::gpioa::PA13","value":"PA13 {  }","parent":null,"children":[{"krate":0,"index":4594}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":4737},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":103980,"byte_end":103984,"line_start":1210,"line_end":1210,"column_start":5,"column_end":9},"name":"PA14","qualname":"::gpio::gpioa::PA14","value":"PA14 {  }","parent":null,"children":[{"krate":0,"index":4739}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":4882},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":104026,"byte_end":104030,"line_start":1211,"line_end":1211,"column_start":5,"column_end":9},"name":"PA15","qualname":"::gpio::gpioa::PA15","value":"PA15 {  }","parent":null,"children":[{"krate":0,"index":4884}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":5251},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":104086,"byte_end":104091,"line_start":1214,"line_end":1214,"column_start":14,"column_end":19},"name":"gpiob","qualname":"::gpio::gpiob","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","parent":null,"children":[{"krate":0,"index":5252},{"krate":0,"index":5253},{"krate":0,"index":17917},{"krate":0,"index":5254},{"krate":0,"index":5255},{"krate":0,"index":5256},{"krate":0,"index":5257},{"krate":0,"index":5258},{"krate":0,"index":5259},{"krate":0,"index":5260},{"krate":0,"index":5261},{"krate":0,"index":5262},{"krate":0,"index":5263},{"krate":0,"index":5264},{"krate":0,"index":5265},{"krate":0,"index":5266},{"krate":0,"index":5267},{"krate":0,"index":5268},{"krate":0,"index":5269},{"krate":0,"index":5270},{"krate":0,"index":17943},{"krate":0,"index":5271},{"krate":0,"index":5272},{"krate":0,"index":5273},{"krate":0,"index":17949},{"krate":0,"index":5274},{"krate":0,"index":5275},{"krate":0,"index":17953},{"krate":0,"index":5276},{"krate":0,"index":17955},{"krate":0,"index":5277},{"krate":0,"index":17957},{"krate":0,"index":5278},{"krate":0,"index":17959},{"krate":0,"index":5279},{"krate":0,"index":5280},{"krate":0,"index":5281},{"krate":0,"index":17965},{"krate":0,"index":5282},{"krate":0,"index":5283},{"krate":0,"index":5284},{"krate":0,"index":5285},{"krate":0,"index":5286},{"krate":0,"index":5287},{"krate":0,"index":5288},{"krate":0,"index":5289},{"krate":0,"index":5308},{"krate":0,"index":5311},{"krate":0,"index":5313},{"krate":0,"index":5315},{"krate":0,"index":5317},{"krate":0,"index":5319},{"krate":0,"index":5323},{"krate":0,"index":5326},{"krate":0,"index":5333},{"krate":0,"index":5339},{"krate":0,"index":5360},{"krate":0,"index":5365},{"krate":0,"index":5367},{"krate":0,"index":5372},{"krate":0,"index":5374},{"krate":0,"index":5376},{"krate":0,"index":5379},{"krate":0,"index":5381},{"krate":0,"index":5383},{"krate":0,"index":5408},{"krate":0,"index":5410},{"krate":0,"index":5414},{"krate":0,"index":5419},{"krate":0,"index":5424},{"krate":0,"index":5426},{"krate":0,"index":5432},{"krate":0,"index":5437},{"krate":0,"index":5443},{"krate":0,"index":5447},{"krate":0,"index":5452},{"krate":0,"index":5470},{"krate":0,"index":5477},{"krate":0,"index":5484},{"krate":0,"index":5492},{"krate":0,"index":5500},{"krate":0,"index":5507},{"krate":0,"index":5514},{"krate":0,"index":5521},{"krate":0,"index":5524},{"krate":0,"index":5526},{"krate":0,"index":5528},{"krate":0,"index":5553},{"krate":0,"index":5555},{"krate":0,"index":5559},{"krate":0,"index":5564},{"krate":0,"index":5569},{"krate":0,"index":5571},{"krate":0,"index":5577},{"krate":0,"index":5582},{"krate":0,"index":5588},{"krate":0,"index":5592},{"krate":0,"index":5597},{"krate":0,"index":5615},{"krate":0,"index":5622},{"krate":0,"index":5629},{"krate":0,"index":5637},{"krate":0,"index":5645},{"krate":0,"index":5652},{"krate":0,"index":5659},{"krate":0,"index":5666},{"krate":0,"index":5669},{"krate":0,"index":5671},{"krate":0,"index":5673},{"krate":0,"index":5698},{"krate":0,"index":5700},{"krate":0,"index":5704},{"krate":0,"index":5709},{"krate":0,"index":5714},{"krate":0,"index":5716},{"krate":0,"index":5722},{"krate":0,"index":5727},{"krate":0,"index":5733},{"krate":0,"index":5737},{"krate":0,"index":5742},{"krate":0,"index":5760},{"krate":0,"index":5767},{"krate":0,"index":5774},{"krate":0,"index":5782},{"krate":0,"index":5790},{"krate":0,"index":5797},{"krate":0,"index":5804},{"krate":0,"index":5811},{"krate":0,"index":5814},{"krate":0,"index":5816},{"krate":0,"index":5818},{"krate":0,"index":5843},{"krate":0,"index":5845},{"krate":0,"index":5849},{"krate":0,"index":5854},{"krate":0,"index":5859},{"krate":0,"index":5861},{"krate":0,"index":5867},{"krate":0,"index":5872},{"krate":0,"index":5878},{"krate":0,"index":5882},{"krate":0,"index":5887},{"krate":0,"index":5905},{"krate":0,"index":5912},{"krate":0,"index":5919},{"krate":0,"index":5927},{"krate":0,"index":5935},{"krate":0,"index":5942},{"krate":0,"index":5949},{"krate":0,"index":5956},{"krate":0,"index":5959},{"krate":0,"index":5961},{"krate":0,"index":5963},{"krate":0,"index":5988},{"krate":0,"index":5990},{"krate":0,"index":5994},{"krate":0,"index":5999},{"krate":0,"index":6004},{"krate":0,"index":6006},{"krate":0,"index":6012},{"krate":0,"index":6017},{"krate":0,"index":6023},{"krate":0,"index":6027},{"krate":0,"index":6032},{"krate":0,"index":6050},{"krate":0,"index":6057},{"krate":0,"index":6064},{"krate":0,"index":6072},{"krate":0,"index":6080},{"krate":0,"index":6087},{"krate":0,"index":6094},{"krate":0,"index":6101},{"krate":0,"index":6104},{"krate":0,"index":6106},{"krate":0,"index":6108},{"krate":0,"index":6133},{"krate":0,"index":6135},{"krate":0,"index":6139},{"krate":0,"index":6144},{"krate":0,"index":6149},{"krate":0,"index":6151},{"krate":0,"index":6157},{"krate":0,"index":6162},{"krate":0,"index":6168},{"krate":0,"index":6172},{"krate":0,"index":6177},{"krate":0,"index":6195},{"krate":0,"index":6202},{"krate":0,"index":6209},{"krate":0,"index":6217},{"krate":0,"index":6225},{"krate":0,"index":6232},{"krate":0,"index":6239},{"krate":0,"index":6246},{"krate":0,"index":6249},{"krate":0,"index":6251},{"krate":0,"index":6253},{"krate":0,"index":6278},{"krate":0,"index":6280},{"krate":0,"index":6284},{"krate":0,"index":6289},{"krate":0,"index":6294},{"krate":0,"index":6296},{"krate":0,"index":6302},{"krate":0,"index":6307},{"krate":0,"index":6313},{"krate":0,"index":6317},{"krate":0,"index":6322},{"krate":0,"index":6340},{"krate":0,"index":6347},{"krate":0,"index":6354},{"krate":0,"index":6362},{"krate":0,"index":6370},{"krate":0,"index":6377},{"krate":0,"index":6384},{"krate":0,"index":6391},{"krate":0,"index":6394},{"krate":0,"index":6396},{"krate":0,"index":6398},{"krate":0,"index":6423},{"krate":0,"index":6425},{"krate":0,"index":6429},{"krate":0,"index":6434},{"krate":0,"index":6439},{"krate":0,"index":6441},{"krate":0,"index":6447},{"krate":0,"index":6452},{"krate":0,"index":6458},{"krate":0,"index":6462},{"krate":0,"index":6467},{"krate":0,"index":6485},{"krate":0,"index":6492},{"krate":0,"index":6499},{"krate":0,"index":6507},{"krate":0,"index":6515},{"krate":0,"index":6522},{"krate":0,"index":6529},{"krate":0,"index":6536},{"krate":0,"index":6539},{"krate":0,"index":6541},{"krate":0,"index":6543},{"krate":0,"index":6568},{"krate":0,"index":6570},{"krate":0,"index":6574},{"krate":0,"index":6579},{"krate":0,"index":6584},{"krate":0,"index":6586},{"krate":0,"index":6592},{"krate":0,"index":6597},{"krate":0,"index":6603},{"krate":0,"index":6607},{"krate":0,"index":6612},{"krate":0,"index":6630},{"krate":0,"index":6637},{"krate":0,"index":6644},{"krate":0,"index":6652},{"krate":0,"index":6660},{"krate":0,"index":6667},{"krate":0,"index":6674},{"krate":0,"index":6681},{"krate":0,"index":6684},{"krate":0,"index":6686},{"krate":0,"index":6688},{"krate":0,"index":6713},{"krate":0,"index":6715},{"krate":0,"index":6719},{"krate":0,"index":6724},{"krate":0,"index":6729},{"krate":0,"index":6731},{"krate":0,"index":6737},{"krate":0,"index":6742},{"krate":0,"index":6748},{"krate":0,"index":6752},{"krate":0,"index":6757},{"krate":0,"index":6775},{"krate":0,"index":6782},{"krate":0,"index":6789},{"krate":0,"index":6797},{"krate":0,"index":6805},{"krate":0,"index":6812},{"krate":0,"index":6819},{"krate":0,"index":6826},{"krate":0,"index":6829},{"krate":0,"index":6831},{"krate":0,"index":6833},{"krate":0,"index":6858},{"krate":0,"index":6860},{"krate":0,"index":6864},{"krate":0,"index":6869},{"krate":0,"index":6874},{"krate":0,"index":6876},{"krate":0,"index":6882},{"krate":0,"index":6887},{"krate":0,"index":6893},{"krate":0,"index":6897},{"krate":0,"index":6902},{"krate":0,"index":6920},{"krate":0,"index":6927},{"krate":0,"index":6934},{"krate":0,"index":6942},{"krate":0,"index":6950},{"krate":0,"index":6957},{"krate":0,"index":6964},{"krate":0,"index":6971},{"krate":0,"index":6974},{"krate":0,"index":6976},{"krate":0,"index":6978},{"krate":0,"index":7003},{"krate":0,"index":7005},{"krate":0,"index":7009},{"krate":0,"index":7014},{"krate":0,"index":7019},{"krate":0,"index":7021},{"krate":0,"index":7027},{"krate":0,"index":7032},{"krate":0,"index":7038},{"krate":0,"index":7042},{"krate":0,"index":7047},{"krate":0,"index":7065},{"krate":0,"index":7072},{"krate":0,"index":7079},{"krate":0,"index":7087},{"krate":0,"index":7095},{"krate":0,"index":7102},{"krate":0,"index":7109},{"krate":0,"index":7116},{"krate":0,"index":7119},{"krate":0,"index":7121},{"krate":0,"index":7123},{"krate":0,"index":7148},{"krate":0,"index":7150},{"krate":0,"index":7154},{"krate":0,"index":7159},{"krate":0,"index":7164},{"krate":0,"index":7166},{"krate":0,"index":7172},{"krate":0,"index":7177},{"krate":0,"index":7183},{"krate":0,"index":7187},{"krate":0,"index":7192},{"krate":0,"index":7210},{"krate":0,"index":7217},{"krate":0,"index":7224},{"krate":0,"index":7232},{"krate":0,"index":7240},{"krate":0,"index":7247},{"krate":0,"index":7254},{"krate":0,"index":7261},{"krate":0,"index":7264},{"krate":0,"index":7266},{"krate":0,"index":7268},{"krate":0,"index":7293},{"krate":0,"index":7295},{"krate":0,"index":7299},{"krate":0,"index":7304},{"krate":0,"index":7309},{"krate":0,"index":7311},{"krate":0,"index":7317},{"krate":0,"index":7322},{"krate":0,"index":7328},{"krate":0,"index":7332},{"krate":0,"index":7337},{"krate":0,"index":7355},{"krate":0,"index":7362},{"krate":0,"index":7369},{"krate":0,"index":7377},{"krate":0,"index":7385},{"krate":0,"index":7392},{"krate":0,"index":7399},{"krate":0,"index":7406},{"krate":0,"index":7409},{"krate":0,"index":7411},{"krate":0,"index":7413},{"krate":0,"index":7438},{"krate":0,"index":7440},{"krate":0,"index":7444},{"krate":0,"index":7449},{"krate":0,"index":7454},{"krate":0,"index":7456},{"krate":0,"index":7462},{"krate":0,"index":7467},{"krate":0,"index":7473},{"krate":0,"index":7477},{"krate":0,"index":7482},{"krate":0,"index":7500},{"krate":0,"index":7507},{"krate":0,"index":7514},{"krate":0,"index":7522},{"krate":0,"index":7530},{"krate":0,"index":7537},{"krate":0,"index":7544},{"krate":0,"index":7551},{"krate":0,"index":7554},{"krate":0,"index":7556},{"krate":0,"index":7558},{"krate":0,"index":7583},{"krate":0,"index":7585},{"krate":0,"index":7589},{"krate":0,"index":7594},{"krate":0,"index":7599},{"krate":0,"index":7601},{"krate":0,"index":7607},{"krate":0,"index":7612},{"krate":0,"index":7618},{"krate":0,"index":7622},{"krate":0,"index":7627},{"krate":0,"index":7645},{"krate":0,"index":7652},{"krate":0,"index":7659},{"krate":0,"index":7667},{"krate":0,"index":7675},{"krate":0,"index":7682},{"krate":0,"index":7689}],"decl_id":null,"docs":" GPIO\n","sig":null,"attributes":[{"value":"/ GPIO","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":64821,"byte_end":64829,"line_start":221,"line_end":221,"column_start":9,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":5292},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":104120,"byte_end":104123,"line_start":1215,"line_end":1215,"column_start":11,"column_end":14},"name":"pb0","qualname":"::gpio::gpiob::Parts::pb0","value":"gpio::gpiob::PB0<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":5289},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5293},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":104170,"byte_end":104173,"line_start":1216,"line_end":1216,"column_start":11,"column_end":14},"name":"pb1","qualname":"::gpio::gpiob::Parts::pb1","value":"gpio::gpiob::PB1<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":5289},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5294},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":104220,"byte_end":104223,"line_start":1217,"line_end":1217,"column_start":11,"column_end":14},"name":"pb2","qualname":"::gpio::gpiob::Parts::pb2","value":"gpio::gpiob::PB2<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":5289},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5295},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":104270,"byte_end":104273,"line_start":1218,"line_end":1218,"column_start":11,"column_end":14},"name":"pb3","qualname":"::gpio::gpiob::Parts::pb3","value":"gpio::gpiob::PB3<gpio::Debugger>","parent":{"krate":0,"index":5289},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5296},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":104313,"byte_end":104316,"line_start":1219,"line_end":1219,"column_start":11,"column_end":14},"name":"pb4","qualname":"::gpio::gpiob::Parts::pb4","value":"gpio::gpiob::PB4<gpio::Debugger>","parent":{"krate":0,"index":5289},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5297},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":104356,"byte_end":104359,"line_start":1220,"line_end":1220,"column_start":11,"column_end":14},"name":"pb5","qualname":"::gpio::gpiob::Parts::pb5","value":"gpio::gpiob::PB5<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":5289},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5298},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":104406,"byte_end":104409,"line_start":1221,"line_end":1221,"column_start":11,"column_end":14},"name":"pb6","qualname":"::gpio::gpiob::Parts::pb6","value":"gpio::gpiob::PB6<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":5289},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5299},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":104456,"byte_end":104459,"line_start":1222,"line_end":1222,"column_start":11,"column_end":14},"name":"pb7","qualname":"::gpio::gpiob::Parts::pb7","value":"gpio::gpiob::PB7<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":5289},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5300},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":104506,"byte_end":104509,"line_start":1223,"line_end":1223,"column_start":11,"column_end":14},"name":"pb8","qualname":"::gpio::gpiob::Parts::pb8","value":"gpio::gpiob::PB8<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":5289},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5301},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":104556,"byte_end":104559,"line_start":1224,"line_end":1224,"column_start":11,"column_end":14},"name":"pb9","qualname":"::gpio::gpiob::Parts::pb9","value":"gpio::gpiob::PB9<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":5289},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5302},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":104607,"byte_end":104611,"line_start":1225,"line_end":1225,"column_start":12,"column_end":16},"name":"pb10","qualname":"::gpio::gpiob::Parts::pb10","value":"gpio::gpiob::PB10<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":5289},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5303},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":104660,"byte_end":104664,"line_start":1226,"line_end":1226,"column_start":12,"column_end":16},"name":"pb11","qualname":"::gpio::gpiob::Parts::pb11","value":"gpio::gpiob::PB11<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":5289},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5304},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":104713,"byte_end":104717,"line_start":1227,"line_end":1227,"column_start":12,"column_end":16},"name":"pb12","qualname":"::gpio::gpiob::Parts::pb12","value":"gpio::gpiob::PB12<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":5289},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5305},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":104766,"byte_end":104770,"line_start":1228,"line_end":1228,"column_start":12,"column_end":16},"name":"pb13","qualname":"::gpio::gpiob::Parts::pb13","value":"gpio::gpiob::PB13<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":5289},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5306},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":104819,"byte_end":104823,"line_start":1229,"line_end":1229,"column_start":12,"column_end":16},"name":"pb14","qualname":"::gpio::gpiob::Parts::pb14","value":"gpio::gpiob::PB14<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":5289},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5307},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":104872,"byte_end":104876,"line_start":1230,"line_end":1230,"column_start":12,"column_end":16},"name":"pb15","qualname":"::gpio::gpiob::Parts::pb15","value":"gpio::gpiob::PB15<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":5289},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":5372},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":104100,"byte_end":104103,"line_start":1214,"line_end":1214,"column_start":28,"column_end":31},"name":"PBx","qualname":"::gpio::gpiob::PBx","value":"Pxx<MODE>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5376},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":104114,"byte_end":104117,"line_start":1215,"line_end":1215,"column_start":5,"column_end":8},"name":"PB0","qualname":"::gpio::gpiob::PB0","value":"PB0 {  }","parent":null,"children":[{"krate":0,"index":5378}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":5521},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":104164,"byte_end":104167,"line_start":1216,"line_end":1216,"column_start":5,"column_end":8},"name":"PB1","qualname":"::gpio::gpiob::PB1","value":"PB1 {  }","parent":null,"children":[{"krate":0,"index":5523}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":5666},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":104214,"byte_end":104217,"line_start":1217,"line_end":1217,"column_start":5,"column_end":8},"name":"PB2","qualname":"::gpio::gpiob::PB2","value":"PB2 {  }","parent":null,"children":[{"krate":0,"index":5668}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":5811},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":104264,"byte_end":104267,"line_start":1218,"line_end":1218,"column_start":5,"column_end":8},"name":"PB3","qualname":"::gpio::gpiob::PB3","value":"PB3 {  }","parent":null,"children":[{"krate":0,"index":5813}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":5956},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":104307,"byte_end":104310,"line_start":1219,"line_end":1219,"column_start":5,"column_end":8},"name":"PB4","qualname":"::gpio::gpiob::PB4","value":"PB4 {  }","parent":null,"children":[{"krate":0,"index":5958}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":6101},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":104350,"byte_end":104353,"line_start":1220,"line_end":1220,"column_start":5,"column_end":8},"name":"PB5","qualname":"::gpio::gpiob::PB5","value":"PB5 {  }","parent":null,"children":[{"krate":0,"index":6103}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":6246},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":104400,"byte_end":104403,"line_start":1221,"line_end":1221,"column_start":5,"column_end":8},"name":"PB6","qualname":"::gpio::gpiob::PB6","value":"PB6 {  }","parent":null,"children":[{"krate":0,"index":6248}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":6391},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":104450,"byte_end":104453,"line_start":1222,"line_end":1222,"column_start":5,"column_end":8},"name":"PB7","qualname":"::gpio::gpiob::PB7","value":"PB7 {  }","parent":null,"children":[{"krate":0,"index":6393}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":6536},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":104500,"byte_end":104503,"line_start":1223,"line_end":1223,"column_start":5,"column_end":8},"name":"PB8","qualname":"::gpio::gpiob::PB8","value":"PB8 {  }","parent":null,"children":[{"krate":0,"index":6538}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":6681},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":104550,"byte_end":104553,"line_start":1224,"line_end":1224,"column_start":5,"column_end":8},"name":"PB9","qualname":"::gpio::gpiob::PB9","value":"PB9 {  }","parent":null,"children":[{"krate":0,"index":6683}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":6826},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":104600,"byte_end":104604,"line_start":1225,"line_end":1225,"column_start":5,"column_end":9},"name":"PB10","qualname":"::gpio::gpiob::PB10","value":"PB10 {  }","parent":null,"children":[{"krate":0,"index":6828}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":6971},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":104653,"byte_end":104657,"line_start":1226,"line_end":1226,"column_start":5,"column_end":9},"name":"PB11","qualname":"::gpio::gpiob::PB11","value":"PB11 {  }","parent":null,"children":[{"krate":0,"index":6973}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":7116},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":104706,"byte_end":104710,"line_start":1227,"line_end":1227,"column_start":5,"column_end":9},"name":"PB12","qualname":"::gpio::gpiob::PB12","value":"PB12 {  }","parent":null,"children":[{"krate":0,"index":7118}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":7261},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":104759,"byte_end":104763,"line_start":1228,"line_end":1228,"column_start":5,"column_end":9},"name":"PB13","qualname":"::gpio::gpiob::PB13","value":"PB13 {  }","parent":null,"children":[{"krate":0,"index":7263}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":7406},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":104812,"byte_end":104816,"line_start":1229,"line_end":1229,"column_start":5,"column_end":9},"name":"PB14","qualname":"::gpio::gpiob::PB14","value":"PB14 {  }","parent":null,"children":[{"krate":0,"index":7408}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":7551},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":104865,"byte_end":104869,"line_start":1230,"line_end":1230,"column_start":5,"column_end":9},"name":"PB15","qualname":"::gpio::gpiob::PB15","value":"PB15 {  }","parent":null,"children":[{"krate":0,"index":7553}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":7920},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":104932,"byte_end":104937,"line_start":1233,"line_end":1233,"column_start":14,"column_end":19},"name":"gpioc","qualname":"::gpio::gpioc","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","parent":null,"children":[{"krate":0,"index":7921},{"krate":0,"index":7922},{"krate":0,"index":17983},{"krate":0,"index":7923},{"krate":0,"index":7924},{"krate":0,"index":7925},{"krate":0,"index":7926},{"krate":0,"index":7927},{"krate":0,"index":7928},{"krate":0,"index":7929},{"krate":0,"index":7930},{"krate":0,"index":7931},{"krate":0,"index":7932},{"krate":0,"index":7933},{"krate":0,"index":7934},{"krate":0,"index":7935},{"krate":0,"index":7936},{"krate":0,"index":7937},{"krate":0,"index":7938},{"krate":0,"index":7939},{"krate":0,"index":18009},{"krate":0,"index":7940},{"krate":0,"index":7941},{"krate":0,"index":7942},{"krate":0,"index":18015},{"krate":0,"index":7943},{"krate":0,"index":7944},{"krate":0,"index":18019},{"krate":0,"index":7945},{"krate":0,"index":18021},{"krate":0,"index":7946},{"krate":0,"index":18023},{"krate":0,"index":7947},{"krate":0,"index":18025},{"krate":0,"index":7948},{"krate":0,"index":7949},{"krate":0,"index":7950},{"krate":0,"index":18031},{"krate":0,"index":7951},{"krate":0,"index":7952},{"krate":0,"index":7953},{"krate":0,"index":7954},{"krate":0,"index":7955},{"krate":0,"index":7956},{"krate":0,"index":7957},{"krate":0,"index":7958},{"krate":0,"index":7977},{"krate":0,"index":7980},{"krate":0,"index":7982},{"krate":0,"index":7984},{"krate":0,"index":7986},{"krate":0,"index":7988},{"krate":0,"index":7992},{"krate":0,"index":7995},{"krate":0,"index":8002},{"krate":0,"index":8008},{"krate":0,"index":8029},{"krate":0,"index":8034},{"krate":0,"index":8036},{"krate":0,"index":8041},{"krate":0,"index":8043},{"krate":0,"index":8045},{"krate":0,"index":8048},{"krate":0,"index":8050},{"krate":0,"index":8052},{"krate":0,"index":8077},{"krate":0,"index":8079},{"krate":0,"index":8083},{"krate":0,"index":8088},{"krate":0,"index":8093},{"krate":0,"index":8095},{"krate":0,"index":8101},{"krate":0,"index":8106},{"krate":0,"index":8112},{"krate":0,"index":8116},{"krate":0,"index":8121},{"krate":0,"index":8139},{"krate":0,"index":8146},{"krate":0,"index":8153},{"krate":0,"index":8161},{"krate":0,"index":8169},{"krate":0,"index":8176},{"krate":0,"index":8183},{"krate":0,"index":8190},{"krate":0,"index":8193},{"krate":0,"index":8195},{"krate":0,"index":8197},{"krate":0,"index":8222},{"krate":0,"index":8224},{"krate":0,"index":8228},{"krate":0,"index":8233},{"krate":0,"index":8238},{"krate":0,"index":8240},{"krate":0,"index":8246},{"krate":0,"index":8251},{"krate":0,"index":8257},{"krate":0,"index":8261},{"krate":0,"index":8266},{"krate":0,"index":8284},{"krate":0,"index":8291},{"krate":0,"index":8298},{"krate":0,"index":8306},{"krate":0,"index":8314},{"krate":0,"index":8321},{"krate":0,"index":8328},{"krate":0,"index":8335},{"krate":0,"index":8338},{"krate":0,"index":8340},{"krate":0,"index":8342},{"krate":0,"index":8367},{"krate":0,"index":8369},{"krate":0,"index":8373},{"krate":0,"index":8378},{"krate":0,"index":8383},{"krate":0,"index":8385},{"krate":0,"index":8391},{"krate":0,"index":8396},{"krate":0,"index":8402},{"krate":0,"index":8406},{"krate":0,"index":8411},{"krate":0,"index":8429},{"krate":0,"index":8436},{"krate":0,"index":8443},{"krate":0,"index":8451},{"krate":0,"index":8459},{"krate":0,"index":8466},{"krate":0,"index":8473},{"krate":0,"index":8480},{"krate":0,"index":8483},{"krate":0,"index":8485},{"krate":0,"index":8487},{"krate":0,"index":8512},{"krate":0,"index":8514},{"krate":0,"index":8518},{"krate":0,"index":8523},{"krate":0,"index":8528},{"krate":0,"index":8530},{"krate":0,"index":8536},{"krate":0,"index":8541},{"krate":0,"index":8547},{"krate":0,"index":8551},{"krate":0,"index":8556},{"krate":0,"index":8574},{"krate":0,"index":8581},{"krate":0,"index":8588},{"krate":0,"index":8596},{"krate":0,"index":8604},{"krate":0,"index":8611},{"krate":0,"index":8618},{"krate":0,"index":8625},{"krate":0,"index":8628},{"krate":0,"index":8630},{"krate":0,"index":8632},{"krate":0,"index":8657},{"krate":0,"index":8659},{"krate":0,"index":8663},{"krate":0,"index":8668},{"krate":0,"index":8673},{"krate":0,"index":8675},{"krate":0,"index":8681},{"krate":0,"index":8686},{"krate":0,"index":8692},{"krate":0,"index":8696},{"krate":0,"index":8701},{"krate":0,"index":8719},{"krate":0,"index":8726},{"krate":0,"index":8733},{"krate":0,"index":8741},{"krate":0,"index":8749},{"krate":0,"index":8756},{"krate":0,"index":8763},{"krate":0,"index":8770},{"krate":0,"index":8773},{"krate":0,"index":8775},{"krate":0,"index":8777},{"krate":0,"index":8802},{"krate":0,"index":8804},{"krate":0,"index":8808},{"krate":0,"index":8813},{"krate":0,"index":8818},{"krate":0,"index":8820},{"krate":0,"index":8826},{"krate":0,"index":8831},{"krate":0,"index":8837},{"krate":0,"index":8841},{"krate":0,"index":8846},{"krate":0,"index":8864},{"krate":0,"index":8871},{"krate":0,"index":8878},{"krate":0,"index":8886},{"krate":0,"index":8894},{"krate":0,"index":8901},{"krate":0,"index":8908},{"krate":0,"index":8915},{"krate":0,"index":8918},{"krate":0,"index":8920},{"krate":0,"index":8922},{"krate":0,"index":8947},{"krate":0,"index":8949},{"krate":0,"index":8953},{"krate":0,"index":8958},{"krate":0,"index":8963},{"krate":0,"index":8965},{"krate":0,"index":8971},{"krate":0,"index":8976},{"krate":0,"index":8982},{"krate":0,"index":8986},{"krate":0,"index":8991},{"krate":0,"index":9009},{"krate":0,"index":9016},{"krate":0,"index":9023},{"krate":0,"index":9031},{"krate":0,"index":9039},{"krate":0,"index":9046},{"krate":0,"index":9053},{"krate":0,"index":9060},{"krate":0,"index":9063},{"krate":0,"index":9065},{"krate":0,"index":9067},{"krate":0,"index":9092},{"krate":0,"index":9094},{"krate":0,"index":9098},{"krate":0,"index":9103},{"krate":0,"index":9108},{"krate":0,"index":9110},{"krate":0,"index":9116},{"krate":0,"index":9121},{"krate":0,"index":9127},{"krate":0,"index":9131},{"krate":0,"index":9136},{"krate":0,"index":9154},{"krate":0,"index":9161},{"krate":0,"index":9168},{"krate":0,"index":9176},{"krate":0,"index":9184},{"krate":0,"index":9191},{"krate":0,"index":9198},{"krate":0,"index":9205},{"krate":0,"index":9208},{"krate":0,"index":9210},{"krate":0,"index":9212},{"krate":0,"index":9237},{"krate":0,"index":9239},{"krate":0,"index":9243},{"krate":0,"index":9248},{"krate":0,"index":9253},{"krate":0,"index":9255},{"krate":0,"index":9261},{"krate":0,"index":9266},{"krate":0,"index":9272},{"krate":0,"index":9276},{"krate":0,"index":9281},{"krate":0,"index":9299},{"krate":0,"index":9306},{"krate":0,"index":9313},{"krate":0,"index":9321},{"krate":0,"index":9329},{"krate":0,"index":9336},{"krate":0,"index":9343},{"krate":0,"index":9350},{"krate":0,"index":9353},{"krate":0,"index":9355},{"krate":0,"index":9357},{"krate":0,"index":9382},{"krate":0,"index":9384},{"krate":0,"index":9388},{"krate":0,"index":9393},{"krate":0,"index":9398},{"krate":0,"index":9400},{"krate":0,"index":9406},{"krate":0,"index":9411},{"krate":0,"index":9417},{"krate":0,"index":9421},{"krate":0,"index":9426},{"krate":0,"index":9444},{"krate":0,"index":9451},{"krate":0,"index":9458},{"krate":0,"index":9466},{"krate":0,"index":9474},{"krate":0,"index":9481},{"krate":0,"index":9488},{"krate":0,"index":9495},{"krate":0,"index":9498},{"krate":0,"index":9500},{"krate":0,"index":9502},{"krate":0,"index":9527},{"krate":0,"index":9529},{"krate":0,"index":9533},{"krate":0,"index":9538},{"krate":0,"index":9543},{"krate":0,"index":9545},{"krate":0,"index":9551},{"krate":0,"index":9556},{"krate":0,"index":9562},{"krate":0,"index":9566},{"krate":0,"index":9571},{"krate":0,"index":9589},{"krate":0,"index":9596},{"krate":0,"index":9603},{"krate":0,"index":9611},{"krate":0,"index":9619},{"krate":0,"index":9626},{"krate":0,"index":9633},{"krate":0,"index":9640},{"krate":0,"index":9643},{"krate":0,"index":9645},{"krate":0,"index":9647},{"krate":0,"index":9672},{"krate":0,"index":9674},{"krate":0,"index":9678},{"krate":0,"index":9683},{"krate":0,"index":9688},{"krate":0,"index":9690},{"krate":0,"index":9696},{"krate":0,"index":9701},{"krate":0,"index":9707},{"krate":0,"index":9711},{"krate":0,"index":9716},{"krate":0,"index":9734},{"krate":0,"index":9741},{"krate":0,"index":9748},{"krate":0,"index":9756},{"krate":0,"index":9764},{"krate":0,"index":9771},{"krate":0,"index":9778},{"krate":0,"index":9785},{"krate":0,"index":9788},{"krate":0,"index":9790},{"krate":0,"index":9792},{"krate":0,"index":9817},{"krate":0,"index":9819},{"krate":0,"index":9823},{"krate":0,"index":9828},{"krate":0,"index":9833},{"krate":0,"index":9835},{"krate":0,"index":9841},{"krate":0,"index":9846},{"krate":0,"index":9852},{"krate":0,"index":9856},{"krate":0,"index":9861},{"krate":0,"index":9879},{"krate":0,"index":9886},{"krate":0,"index":9893},{"krate":0,"index":9901},{"krate":0,"index":9909},{"krate":0,"index":9916},{"krate":0,"index":9923},{"krate":0,"index":9930},{"krate":0,"index":9933},{"krate":0,"index":9935},{"krate":0,"index":9937},{"krate":0,"index":9962},{"krate":0,"index":9964},{"krate":0,"index":9968},{"krate":0,"index":9973},{"krate":0,"index":9978},{"krate":0,"index":9980},{"krate":0,"index":9986},{"krate":0,"index":9991},{"krate":0,"index":9997},{"krate":0,"index":10001},{"krate":0,"index":10006},{"krate":0,"index":10024},{"krate":0,"index":10031},{"krate":0,"index":10038},{"krate":0,"index":10046},{"krate":0,"index":10054},{"krate":0,"index":10061},{"krate":0,"index":10068},{"krate":0,"index":10075},{"krate":0,"index":10078},{"krate":0,"index":10080},{"krate":0,"index":10082},{"krate":0,"index":10107},{"krate":0,"index":10109},{"krate":0,"index":10113},{"krate":0,"index":10118},{"krate":0,"index":10123},{"krate":0,"index":10125},{"krate":0,"index":10131},{"krate":0,"index":10136},{"krate":0,"index":10142},{"krate":0,"index":10146},{"krate":0,"index":10151},{"krate":0,"index":10169},{"krate":0,"index":10176},{"krate":0,"index":10183},{"krate":0,"index":10191},{"krate":0,"index":10199},{"krate":0,"index":10206},{"krate":0,"index":10213},{"krate":0,"index":10220},{"krate":0,"index":10223},{"krate":0,"index":10225},{"krate":0,"index":10227},{"krate":0,"index":10252},{"krate":0,"index":10254},{"krate":0,"index":10258},{"krate":0,"index":10263},{"krate":0,"index":10268},{"krate":0,"index":10270},{"krate":0,"index":10276},{"krate":0,"index":10281},{"krate":0,"index":10287},{"krate":0,"index":10291},{"krate":0,"index":10296},{"krate":0,"index":10314},{"krate":0,"index":10321},{"krate":0,"index":10328},{"krate":0,"index":10336},{"krate":0,"index":10344},{"krate":0,"index":10351},{"krate":0,"index":10358}],"decl_id":null,"docs":" GPIO\n","sig":null,"attributes":[{"value":"/ GPIO","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":64821,"byte_end":64829,"line_start":221,"line_end":221,"column_start":9,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":7961},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":104966,"byte_end":104969,"line_start":1234,"line_end":1234,"column_start":11,"column_end":14},"name":"pc0","qualname":"::gpio::gpioc::Parts::pc0","value":"gpio::gpioc::PC0<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":7958},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":7962},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":105016,"byte_end":105019,"line_start":1235,"line_end":1235,"column_start":11,"column_end":14},"name":"pc1","qualname":"::gpio::gpioc::Parts::pc1","value":"gpio::gpioc::PC1<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":7958},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":7963},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":105066,"byte_end":105069,"line_start":1236,"line_end":1236,"column_start":11,"column_end":14},"name":"pc2","qualname":"::gpio::gpioc::Parts::pc2","value":"gpio::gpioc::PC2<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":7958},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":7964},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":105116,"byte_end":105119,"line_start":1237,"line_end":1237,"column_start":11,"column_end":14},"name":"pc3","qualname":"::gpio::gpioc::Parts::pc3","value":"gpio::gpioc::PC3<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":7958},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":7965},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":105166,"byte_end":105169,"line_start":1238,"line_end":1238,"column_start":11,"column_end":14},"name":"pc4","qualname":"::gpio::gpioc::Parts::pc4","value":"gpio::gpioc::PC4<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":7958},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":7966},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":105216,"byte_end":105219,"line_start":1239,"line_end":1239,"column_start":11,"column_end":14},"name":"pc5","qualname":"::gpio::gpioc::Parts::pc5","value":"gpio::gpioc::PC5<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":7958},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":7967},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":105266,"byte_end":105269,"line_start":1240,"line_end":1240,"column_start":11,"column_end":14},"name":"pc6","qualname":"::gpio::gpioc::Parts::pc6","value":"gpio::gpioc::PC6<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":7958},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":7968},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":105316,"byte_end":105319,"line_start":1241,"line_end":1241,"column_start":11,"column_end":14},"name":"pc7","qualname":"::gpio::gpioc::Parts::pc7","value":"gpio::gpioc::PC7<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":7958},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":7969},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":105366,"byte_end":105369,"line_start":1242,"line_end":1242,"column_start":11,"column_end":14},"name":"pc8","qualname":"::gpio::gpioc::Parts::pc8","value":"gpio::gpioc::PC8<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":7958},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":7970},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":105416,"byte_end":105419,"line_start":1243,"line_end":1243,"column_start":11,"column_end":14},"name":"pc9","qualname":"::gpio::gpioc::Parts::pc9","value":"gpio::gpioc::PC9<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":7958},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":7971},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":105467,"byte_end":105471,"line_start":1244,"line_end":1244,"column_start":12,"column_end":16},"name":"pc10","qualname":"::gpio::gpioc::Parts::pc10","value":"gpio::gpioc::PC10<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":7958},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":7972},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":105520,"byte_end":105524,"line_start":1245,"line_end":1245,"column_start":12,"column_end":16},"name":"pc11","qualname":"::gpio::gpioc::Parts::pc11","value":"gpio::gpioc::PC11<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":7958},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":7973},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":105573,"byte_end":105577,"line_start":1246,"line_end":1246,"column_start":12,"column_end":16},"name":"pc12","qualname":"::gpio::gpioc::Parts::pc12","value":"gpio::gpioc::PC12<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":7958},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":7974},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":105626,"byte_end":105630,"line_start":1247,"line_end":1247,"column_start":12,"column_end":16},"name":"pc13","qualname":"::gpio::gpioc::Parts::pc13","value":"gpio::gpioc::PC13<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":7958},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":7975},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":105679,"byte_end":105683,"line_start":1248,"line_end":1248,"column_start":12,"column_end":16},"name":"pc14","qualname":"::gpio::gpioc::Parts::pc14","value":"gpio::gpioc::PC14<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":7958},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":7976},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":105732,"byte_end":105736,"line_start":1249,"line_end":1249,"column_start":12,"column_end":16},"name":"pc15","qualname":"::gpio::gpioc::Parts::pc15","value":"gpio::gpioc::PC15<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":7958},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":8041},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":104946,"byte_end":104949,"line_start":1233,"line_end":1233,"column_start":28,"column_end":31},"name":"PCx","qualname":"::gpio::gpioc::PCx","value":"Pxx<MODE>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8045},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":104960,"byte_end":104963,"line_start":1234,"line_end":1234,"column_start":5,"column_end":8},"name":"PC0","qualname":"::gpio::gpioc::PC0","value":"PC0 {  }","parent":null,"children":[{"krate":0,"index":8047}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":8190},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":105010,"byte_end":105013,"line_start":1235,"line_end":1235,"column_start":5,"column_end":8},"name":"PC1","qualname":"::gpio::gpioc::PC1","value":"PC1 {  }","parent":null,"children":[{"krate":0,"index":8192}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":8335},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":105060,"byte_end":105063,"line_start":1236,"line_end":1236,"column_start":5,"column_end":8},"name":"PC2","qualname":"::gpio::gpioc::PC2","value":"PC2 {  }","parent":null,"children":[{"krate":0,"index":8337}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":8480},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":105110,"byte_end":105113,"line_start":1237,"line_end":1237,"column_start":5,"column_end":8},"name":"PC3","qualname":"::gpio::gpioc::PC3","value":"PC3 {  }","parent":null,"children":[{"krate":0,"index":8482}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":8625},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":105160,"byte_end":105163,"line_start":1238,"line_end":1238,"column_start":5,"column_end":8},"name":"PC4","qualname":"::gpio::gpioc::PC4","value":"PC4 {  }","parent":null,"children":[{"krate":0,"index":8627}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":8770},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":105210,"byte_end":105213,"line_start":1239,"line_end":1239,"column_start":5,"column_end":8},"name":"PC5","qualname":"::gpio::gpioc::PC5","value":"PC5 {  }","parent":null,"children":[{"krate":0,"index":8772}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":8915},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":105260,"byte_end":105263,"line_start":1240,"line_end":1240,"column_start":5,"column_end":8},"name":"PC6","qualname":"::gpio::gpioc::PC6","value":"PC6 {  }","parent":null,"children":[{"krate":0,"index":8917}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":9060},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":105310,"byte_end":105313,"line_start":1241,"line_end":1241,"column_start":5,"column_end":8},"name":"PC7","qualname":"::gpio::gpioc::PC7","value":"PC7 {  }","parent":null,"children":[{"krate":0,"index":9062}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":9205},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":105360,"byte_end":105363,"line_start":1242,"line_end":1242,"column_start":5,"column_end":8},"name":"PC8","qualname":"::gpio::gpioc::PC8","value":"PC8 {  }","parent":null,"children":[{"krate":0,"index":9207}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":9350},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":105410,"byte_end":105413,"line_start":1243,"line_end":1243,"column_start":5,"column_end":8},"name":"PC9","qualname":"::gpio::gpioc::PC9","value":"PC9 {  }","parent":null,"children":[{"krate":0,"index":9352}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":9495},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":105460,"byte_end":105464,"line_start":1244,"line_end":1244,"column_start":5,"column_end":9},"name":"PC10","qualname":"::gpio::gpioc::PC10","value":"PC10 {  }","parent":null,"children":[{"krate":0,"index":9497}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":9640},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":105513,"byte_end":105517,"line_start":1245,"line_end":1245,"column_start":5,"column_end":9},"name":"PC11","qualname":"::gpio::gpioc::PC11","value":"PC11 {  }","parent":null,"children":[{"krate":0,"index":9642}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":9785},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":105566,"byte_end":105570,"line_start":1246,"line_end":1246,"column_start":5,"column_end":9},"name":"PC12","qualname":"::gpio::gpioc::PC12","value":"PC12 {  }","parent":null,"children":[{"krate":0,"index":9787}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":9930},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":105619,"byte_end":105623,"line_start":1247,"line_end":1247,"column_start":5,"column_end":9},"name":"PC13","qualname":"::gpio::gpioc::PC13","value":"PC13 {  }","parent":null,"children":[{"krate":0,"index":9932}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":10075},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":105672,"byte_end":105676,"line_start":1248,"line_end":1248,"column_start":5,"column_end":9},"name":"PC14","qualname":"::gpio::gpioc::PC14","value":"PC14 {  }","parent":null,"children":[{"krate":0,"index":10077}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":10220},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":105725,"byte_end":105729,"line_start":1249,"line_end":1249,"column_start":5,"column_end":9},"name":"PC15","qualname":"::gpio::gpioc::PC15","value":"PC15 {  }","parent":null,"children":[{"krate":0,"index":10222}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":10589},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":105792,"byte_end":105797,"line_start":1252,"line_end":1252,"column_start":14,"column_end":19},"name":"gpiod","qualname":"::gpio::gpiod","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","parent":null,"children":[{"krate":0,"index":10590},{"krate":0,"index":10591},{"krate":0,"index":18049},{"krate":0,"index":10592},{"krate":0,"index":10593},{"krate":0,"index":10594},{"krate":0,"index":10595},{"krate":0,"index":10596},{"krate":0,"index":10597},{"krate":0,"index":10598},{"krate":0,"index":10599},{"krate":0,"index":10600},{"krate":0,"index":10601},{"krate":0,"index":10602},{"krate":0,"index":10603},{"krate":0,"index":10604},{"krate":0,"index":10605},{"krate":0,"index":10606},{"krate":0,"index":10607},{"krate":0,"index":10608},{"krate":0,"index":18075},{"krate":0,"index":10609},{"krate":0,"index":10610},{"krate":0,"index":10611},{"krate":0,"index":18081},{"krate":0,"index":10612},{"krate":0,"index":10613},{"krate":0,"index":18085},{"krate":0,"index":10614},{"krate":0,"index":18087},{"krate":0,"index":10615},{"krate":0,"index":18089},{"krate":0,"index":10616},{"krate":0,"index":18091},{"krate":0,"index":10617},{"krate":0,"index":10618},{"krate":0,"index":10619},{"krate":0,"index":18097},{"krate":0,"index":10620},{"krate":0,"index":10621},{"krate":0,"index":10622},{"krate":0,"index":10623},{"krate":0,"index":10624},{"krate":0,"index":10625},{"krate":0,"index":10626},{"krate":0,"index":10627},{"krate":0,"index":10646},{"krate":0,"index":10649},{"krate":0,"index":10651},{"krate":0,"index":10653},{"krate":0,"index":10655},{"krate":0,"index":10657},{"krate":0,"index":10661},{"krate":0,"index":10664},{"krate":0,"index":10671},{"krate":0,"index":10677},{"krate":0,"index":10698},{"krate":0,"index":10703},{"krate":0,"index":10705},{"krate":0,"index":10710},{"krate":0,"index":10712},{"krate":0,"index":10714},{"krate":0,"index":10717},{"krate":0,"index":10719},{"krate":0,"index":10721},{"krate":0,"index":10746},{"krate":0,"index":10748},{"krate":0,"index":10752},{"krate":0,"index":10757},{"krate":0,"index":10762},{"krate":0,"index":10764},{"krate":0,"index":10770},{"krate":0,"index":10775},{"krate":0,"index":10781},{"krate":0,"index":10785},{"krate":0,"index":10790},{"krate":0,"index":10808},{"krate":0,"index":10815},{"krate":0,"index":10822},{"krate":0,"index":10830},{"krate":0,"index":10838},{"krate":0,"index":10845},{"krate":0,"index":10852},{"krate":0,"index":10859},{"krate":0,"index":10862},{"krate":0,"index":10864},{"krate":0,"index":10866},{"krate":0,"index":10891},{"krate":0,"index":10893},{"krate":0,"index":10897},{"krate":0,"index":10902},{"krate":0,"index":10907},{"krate":0,"index":10909},{"krate":0,"index":10915},{"krate":0,"index":10920},{"krate":0,"index":10926},{"krate":0,"index":10930},{"krate":0,"index":10935},{"krate":0,"index":10953},{"krate":0,"index":10960},{"krate":0,"index":10967},{"krate":0,"index":10975},{"krate":0,"index":10983},{"krate":0,"index":10990},{"krate":0,"index":10997},{"krate":0,"index":11004},{"krate":0,"index":11007},{"krate":0,"index":11009},{"krate":0,"index":11011},{"krate":0,"index":11036},{"krate":0,"index":11038},{"krate":0,"index":11042},{"krate":0,"index":11047},{"krate":0,"index":11052},{"krate":0,"index":11054},{"krate":0,"index":11060},{"krate":0,"index":11065},{"krate":0,"index":11071},{"krate":0,"index":11075},{"krate":0,"index":11080},{"krate":0,"index":11098},{"krate":0,"index":11105},{"krate":0,"index":11112},{"krate":0,"index":11120},{"krate":0,"index":11128},{"krate":0,"index":11135},{"krate":0,"index":11142},{"krate":0,"index":11149},{"krate":0,"index":11152},{"krate":0,"index":11154},{"krate":0,"index":11156},{"krate":0,"index":11181},{"krate":0,"index":11183},{"krate":0,"index":11187},{"krate":0,"index":11192},{"krate":0,"index":11197},{"krate":0,"index":11199},{"krate":0,"index":11205},{"krate":0,"index":11210},{"krate":0,"index":11216},{"krate":0,"index":11220},{"krate":0,"index":11225},{"krate":0,"index":11243},{"krate":0,"index":11250},{"krate":0,"index":11257},{"krate":0,"index":11265},{"krate":0,"index":11273},{"krate":0,"index":11280},{"krate":0,"index":11287},{"krate":0,"index":11294},{"krate":0,"index":11297},{"krate":0,"index":11299},{"krate":0,"index":11301},{"krate":0,"index":11326},{"krate":0,"index":11328},{"krate":0,"index":11332},{"krate":0,"index":11337},{"krate":0,"index":11342},{"krate":0,"index":11344},{"krate":0,"index":11350},{"krate":0,"index":11355},{"krate":0,"index":11361},{"krate":0,"index":11365},{"krate":0,"index":11370},{"krate":0,"index":11388},{"krate":0,"index":11395},{"krate":0,"index":11402},{"krate":0,"index":11410},{"krate":0,"index":11418},{"krate":0,"index":11425},{"krate":0,"index":11432},{"krate":0,"index":11439},{"krate":0,"index":11442},{"krate":0,"index":11444},{"krate":0,"index":11446},{"krate":0,"index":11471},{"krate":0,"index":11473},{"krate":0,"index":11477},{"krate":0,"index":11482},{"krate":0,"index":11487},{"krate":0,"index":11489},{"krate":0,"index":11495},{"krate":0,"index":11500},{"krate":0,"index":11506},{"krate":0,"index":11510},{"krate":0,"index":11515},{"krate":0,"index":11533},{"krate":0,"index":11540},{"krate":0,"index":11547},{"krate":0,"index":11555},{"krate":0,"index":11563},{"krate":0,"index":11570},{"krate":0,"index":11577},{"krate":0,"index":11584},{"krate":0,"index":11587},{"krate":0,"index":11589},{"krate":0,"index":11591},{"krate":0,"index":11616},{"krate":0,"index":11618},{"krate":0,"index":11622},{"krate":0,"index":11627},{"krate":0,"index":11632},{"krate":0,"index":11634},{"krate":0,"index":11640},{"krate":0,"index":11645},{"krate":0,"index":11651},{"krate":0,"index":11655},{"krate":0,"index":11660},{"krate":0,"index":11678},{"krate":0,"index":11685},{"krate":0,"index":11692},{"krate":0,"index":11700},{"krate":0,"index":11708},{"krate":0,"index":11715},{"krate":0,"index":11722},{"krate":0,"index":11729},{"krate":0,"index":11732},{"krate":0,"index":11734},{"krate":0,"index":11736},{"krate":0,"index":11761},{"krate":0,"index":11763},{"krate":0,"index":11767},{"krate":0,"index":11772},{"krate":0,"index":11777},{"krate":0,"index":11779},{"krate":0,"index":11785},{"krate":0,"index":11790},{"krate":0,"index":11796},{"krate":0,"index":11800},{"krate":0,"index":11805},{"krate":0,"index":11823},{"krate":0,"index":11830},{"krate":0,"index":11837},{"krate":0,"index":11845},{"krate":0,"index":11853},{"krate":0,"index":11860},{"krate":0,"index":11867},{"krate":0,"index":11874},{"krate":0,"index":11877},{"krate":0,"index":11879},{"krate":0,"index":11881},{"krate":0,"index":11906},{"krate":0,"index":11908},{"krate":0,"index":11912},{"krate":0,"index":11917},{"krate":0,"index":11922},{"krate":0,"index":11924},{"krate":0,"index":11930},{"krate":0,"index":11935},{"krate":0,"index":11941},{"krate":0,"index":11945},{"krate":0,"index":11950},{"krate":0,"index":11968},{"krate":0,"index":11975},{"krate":0,"index":11982},{"krate":0,"index":11990},{"krate":0,"index":11998},{"krate":0,"index":12005},{"krate":0,"index":12012},{"krate":0,"index":12019},{"krate":0,"index":12022},{"krate":0,"index":12024},{"krate":0,"index":12026},{"krate":0,"index":12051},{"krate":0,"index":12053},{"krate":0,"index":12057},{"krate":0,"index":12062},{"krate":0,"index":12067},{"krate":0,"index":12069},{"krate":0,"index":12075},{"krate":0,"index":12080},{"krate":0,"index":12086},{"krate":0,"index":12090},{"krate":0,"index":12095},{"krate":0,"index":12113},{"krate":0,"index":12120},{"krate":0,"index":12127},{"krate":0,"index":12135},{"krate":0,"index":12143},{"krate":0,"index":12150},{"krate":0,"index":12157},{"krate":0,"index":12164},{"krate":0,"index":12167},{"krate":0,"index":12169},{"krate":0,"index":12171},{"krate":0,"index":12196},{"krate":0,"index":12198},{"krate":0,"index":12202},{"krate":0,"index":12207},{"krate":0,"index":12212},{"krate":0,"index":12214},{"krate":0,"index":12220},{"krate":0,"index":12225},{"krate":0,"index":12231},{"krate":0,"index":12235},{"krate":0,"index":12240},{"krate":0,"index":12258},{"krate":0,"index":12265},{"krate":0,"index":12272},{"krate":0,"index":12280},{"krate":0,"index":12288},{"krate":0,"index":12295},{"krate":0,"index":12302},{"krate":0,"index":12309},{"krate":0,"index":12312},{"krate":0,"index":12314},{"krate":0,"index":12316},{"krate":0,"index":12341},{"krate":0,"index":12343},{"krate":0,"index":12347},{"krate":0,"index":12352},{"krate":0,"index":12357},{"krate":0,"index":12359},{"krate":0,"index":12365},{"krate":0,"index":12370},{"krate":0,"index":12376},{"krate":0,"index":12380},{"krate":0,"index":12385},{"krate":0,"index":12403},{"krate":0,"index":12410},{"krate":0,"index":12417},{"krate":0,"index":12425},{"krate":0,"index":12433},{"krate":0,"index":12440},{"krate":0,"index":12447},{"krate":0,"index":12454},{"krate":0,"index":12457},{"krate":0,"index":12459},{"krate":0,"index":12461},{"krate":0,"index":12486},{"krate":0,"index":12488},{"krate":0,"index":12492},{"krate":0,"index":12497},{"krate":0,"index":12502},{"krate":0,"index":12504},{"krate":0,"index":12510},{"krate":0,"index":12515},{"krate":0,"index":12521},{"krate":0,"index":12525},{"krate":0,"index":12530},{"krate":0,"index":12548},{"krate":0,"index":12555},{"krate":0,"index":12562},{"krate":0,"index":12570},{"krate":0,"index":12578},{"krate":0,"index":12585},{"krate":0,"index":12592},{"krate":0,"index":12599},{"krate":0,"index":12602},{"krate":0,"index":12604},{"krate":0,"index":12606},{"krate":0,"index":12631},{"krate":0,"index":12633},{"krate":0,"index":12637},{"krate":0,"index":12642},{"krate":0,"index":12647},{"krate":0,"index":12649},{"krate":0,"index":12655},{"krate":0,"index":12660},{"krate":0,"index":12666},{"krate":0,"index":12670},{"krate":0,"index":12675},{"krate":0,"index":12693},{"krate":0,"index":12700},{"krate":0,"index":12707},{"krate":0,"index":12715},{"krate":0,"index":12723},{"krate":0,"index":12730},{"krate":0,"index":12737},{"krate":0,"index":12744},{"krate":0,"index":12747},{"krate":0,"index":12749},{"krate":0,"index":12751},{"krate":0,"index":12776},{"krate":0,"index":12778},{"krate":0,"index":12782},{"krate":0,"index":12787},{"krate":0,"index":12792},{"krate":0,"index":12794},{"krate":0,"index":12800},{"krate":0,"index":12805},{"krate":0,"index":12811},{"krate":0,"index":12815},{"krate":0,"index":12820},{"krate":0,"index":12838},{"krate":0,"index":12845},{"krate":0,"index":12852},{"krate":0,"index":12860},{"krate":0,"index":12868},{"krate":0,"index":12875},{"krate":0,"index":12882},{"krate":0,"index":12889},{"krate":0,"index":12892},{"krate":0,"index":12894},{"krate":0,"index":12896},{"krate":0,"index":12921},{"krate":0,"index":12923},{"krate":0,"index":12927},{"krate":0,"index":12932},{"krate":0,"index":12937},{"krate":0,"index":12939},{"krate":0,"index":12945},{"krate":0,"index":12950},{"krate":0,"index":12956},{"krate":0,"index":12960},{"krate":0,"index":12965},{"krate":0,"index":12983},{"krate":0,"index":12990},{"krate":0,"index":12997},{"krate":0,"index":13005},{"krate":0,"index":13013},{"krate":0,"index":13020},{"krate":0,"index":13027}],"decl_id":null,"docs":" GPIO\n","sig":null,"attributes":[{"value":"/ GPIO","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":64821,"byte_end":64829,"line_start":221,"line_end":221,"column_start":9,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":10630},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":105826,"byte_end":105829,"line_start":1253,"line_end":1253,"column_start":11,"column_end":14},"name":"pd0","qualname":"::gpio::gpiod::Parts::pd0","value":"gpio::gpiod::PD0<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":10627},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":10631},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":105876,"byte_end":105879,"line_start":1254,"line_end":1254,"column_start":11,"column_end":14},"name":"pd1","qualname":"::gpio::gpiod::Parts::pd1","value":"gpio::gpiod::PD1<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":10627},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":10632},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":105926,"byte_end":105929,"line_start":1255,"line_end":1255,"column_start":11,"column_end":14},"name":"pd2","qualname":"::gpio::gpiod::Parts::pd2","value":"gpio::gpiod::PD2<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":10627},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":10633},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":105976,"byte_end":105979,"line_start":1256,"line_end":1256,"column_start":11,"column_end":14},"name":"pd3","qualname":"::gpio::gpiod::Parts::pd3","value":"gpio::gpiod::PD3<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":10627},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":10634},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":106026,"byte_end":106029,"line_start":1257,"line_end":1257,"column_start":11,"column_end":14},"name":"pd4","qualname":"::gpio::gpiod::Parts::pd4","value":"gpio::gpiod::PD4<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":10627},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":10635},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":106076,"byte_end":106079,"line_start":1258,"line_end":1258,"column_start":11,"column_end":14},"name":"pd5","qualname":"::gpio::gpiod::Parts::pd5","value":"gpio::gpiod::PD5<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":10627},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":10636},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":106126,"byte_end":106129,"line_start":1259,"line_end":1259,"column_start":11,"column_end":14},"name":"pd6","qualname":"::gpio::gpiod::Parts::pd6","value":"gpio::gpiod::PD6<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":10627},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":10637},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":106176,"byte_end":106179,"line_start":1260,"line_end":1260,"column_start":11,"column_end":14},"name":"pd7","qualname":"::gpio::gpiod::Parts::pd7","value":"gpio::gpiod::PD7<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":10627},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":10638},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":106226,"byte_end":106229,"line_start":1261,"line_end":1261,"column_start":11,"column_end":14},"name":"pd8","qualname":"::gpio::gpiod::Parts::pd8","value":"gpio::gpiod::PD8<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":10627},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":10639},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":106276,"byte_end":106279,"line_start":1262,"line_end":1262,"column_start":11,"column_end":14},"name":"pd9","qualname":"::gpio::gpiod::Parts::pd9","value":"gpio::gpiod::PD9<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":10627},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":10640},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":106327,"byte_end":106331,"line_start":1263,"line_end":1263,"column_start":12,"column_end":16},"name":"pd10","qualname":"::gpio::gpiod::Parts::pd10","value":"gpio::gpiod::PD10<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":10627},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":10641},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":106380,"byte_end":106384,"line_start":1264,"line_end":1264,"column_start":12,"column_end":16},"name":"pd11","qualname":"::gpio::gpiod::Parts::pd11","value":"gpio::gpiod::PD11<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":10627},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":10642},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":106433,"byte_end":106437,"line_start":1265,"line_end":1265,"column_start":12,"column_end":16},"name":"pd12","qualname":"::gpio::gpiod::Parts::pd12","value":"gpio::gpiod::PD12<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":10627},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":10643},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":106486,"byte_end":106490,"line_start":1266,"line_end":1266,"column_start":12,"column_end":16},"name":"pd13","qualname":"::gpio::gpiod::Parts::pd13","value":"gpio::gpiod::PD13<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":10627},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":10644},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":106539,"byte_end":106543,"line_start":1267,"line_end":1267,"column_start":12,"column_end":16},"name":"pd14","qualname":"::gpio::gpiod::Parts::pd14","value":"gpio::gpiod::PD14<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":10627},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":10645},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":106592,"byte_end":106596,"line_start":1268,"line_end":1268,"column_start":12,"column_end":16},"name":"pd15","qualname":"::gpio::gpiod::Parts::pd15","value":"gpio::gpiod::PD15<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":10627},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":10710},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":105806,"byte_end":105809,"line_start":1252,"line_end":1252,"column_start":28,"column_end":31},"name":"PDx","qualname":"::gpio::gpiod::PDx","value":"Pxx<MODE>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10714},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":105820,"byte_end":105823,"line_start":1253,"line_end":1253,"column_start":5,"column_end":8},"name":"PD0","qualname":"::gpio::gpiod::PD0","value":"PD0 {  }","parent":null,"children":[{"krate":0,"index":10716}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":10859},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":105870,"byte_end":105873,"line_start":1254,"line_end":1254,"column_start":5,"column_end":8},"name":"PD1","qualname":"::gpio::gpiod::PD1","value":"PD1 {  }","parent":null,"children":[{"krate":0,"index":10861}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":11004},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":105920,"byte_end":105923,"line_start":1255,"line_end":1255,"column_start":5,"column_end":8},"name":"PD2","qualname":"::gpio::gpiod::PD2","value":"PD2 {  }","parent":null,"children":[{"krate":0,"index":11006}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":11149},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":105970,"byte_end":105973,"line_start":1256,"line_end":1256,"column_start":5,"column_end":8},"name":"PD3","qualname":"::gpio::gpiod::PD3","value":"PD3 {  }","parent":null,"children":[{"krate":0,"index":11151}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":11294},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":106020,"byte_end":106023,"line_start":1257,"line_end":1257,"column_start":5,"column_end":8},"name":"PD4","qualname":"::gpio::gpiod::PD4","value":"PD4 {  }","parent":null,"children":[{"krate":0,"index":11296}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":11439},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":106070,"byte_end":106073,"line_start":1258,"line_end":1258,"column_start":5,"column_end":8},"name":"PD5","qualname":"::gpio::gpiod::PD5","value":"PD5 {  }","parent":null,"children":[{"krate":0,"index":11441}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":11584},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":106120,"byte_end":106123,"line_start":1259,"line_end":1259,"column_start":5,"column_end":8},"name":"PD6","qualname":"::gpio::gpiod::PD6","value":"PD6 {  }","parent":null,"children":[{"krate":0,"index":11586}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":11729},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":106170,"byte_end":106173,"line_start":1260,"line_end":1260,"column_start":5,"column_end":8},"name":"PD7","qualname":"::gpio::gpiod::PD7","value":"PD7 {  }","parent":null,"children":[{"krate":0,"index":11731}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":11874},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":106220,"byte_end":106223,"line_start":1261,"line_end":1261,"column_start":5,"column_end":8},"name":"PD8","qualname":"::gpio::gpiod::PD8","value":"PD8 {  }","parent":null,"children":[{"krate":0,"index":11876}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":12019},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":106270,"byte_end":106273,"line_start":1262,"line_end":1262,"column_start":5,"column_end":8},"name":"PD9","qualname":"::gpio::gpiod::PD9","value":"PD9 {  }","parent":null,"children":[{"krate":0,"index":12021}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":12164},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":106320,"byte_end":106324,"line_start":1263,"line_end":1263,"column_start":5,"column_end":9},"name":"PD10","qualname":"::gpio::gpiod::PD10","value":"PD10 {  }","parent":null,"children":[{"krate":0,"index":12166}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":12309},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":106373,"byte_end":106377,"line_start":1264,"line_end":1264,"column_start":5,"column_end":9},"name":"PD11","qualname":"::gpio::gpiod::PD11","value":"PD11 {  }","parent":null,"children":[{"krate":0,"index":12311}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":12454},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":106426,"byte_end":106430,"line_start":1265,"line_end":1265,"column_start":5,"column_end":9},"name":"PD12","qualname":"::gpio::gpiod::PD12","value":"PD12 {  }","parent":null,"children":[{"krate":0,"index":12456}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":12599},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":106479,"byte_end":106483,"line_start":1266,"line_end":1266,"column_start":5,"column_end":9},"name":"PD13","qualname":"::gpio::gpiod::PD13","value":"PD13 {  }","parent":null,"children":[{"krate":0,"index":12601}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":12744},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":106532,"byte_end":106536,"line_start":1267,"line_end":1267,"column_start":5,"column_end":9},"name":"PD14","qualname":"::gpio::gpiod::PD14","value":"PD14 {  }","parent":null,"children":[{"krate":0,"index":12746}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":12889},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":106585,"byte_end":106589,"line_start":1268,"line_end":1268,"column_start":5,"column_end":9},"name":"PD15","qualname":"::gpio::gpiod::PD15","value":"PD15 {  }","parent":null,"children":[{"krate":0,"index":12891}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":13258},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":106652,"byte_end":106657,"line_start":1271,"line_end":1271,"column_start":14,"column_end":19},"name":"gpioe","qualname":"::gpio::gpioe","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","parent":null,"children":[{"krate":0,"index":13259},{"krate":0,"index":13260},{"krate":0,"index":18115},{"krate":0,"index":13261},{"krate":0,"index":13262},{"krate":0,"index":13263},{"krate":0,"index":13264},{"krate":0,"index":13265},{"krate":0,"index":13266},{"krate":0,"index":13267},{"krate":0,"index":13268},{"krate":0,"index":13269},{"krate":0,"index":13270},{"krate":0,"index":13271},{"krate":0,"index":13272},{"krate":0,"index":13273},{"krate":0,"index":13274},{"krate":0,"index":13275},{"krate":0,"index":13276},{"krate":0,"index":13277},{"krate":0,"index":18141},{"krate":0,"index":13278},{"krate":0,"index":13279},{"krate":0,"index":13280},{"krate":0,"index":18147},{"krate":0,"index":13281},{"krate":0,"index":13282},{"krate":0,"index":18151},{"krate":0,"index":13283},{"krate":0,"index":18153},{"krate":0,"index":13284},{"krate":0,"index":18155},{"krate":0,"index":13285},{"krate":0,"index":18157},{"krate":0,"index":13286},{"krate":0,"index":13287},{"krate":0,"index":13288},{"krate":0,"index":18163},{"krate":0,"index":13289},{"krate":0,"index":13290},{"krate":0,"index":13291},{"krate":0,"index":13292},{"krate":0,"index":13293},{"krate":0,"index":13294},{"krate":0,"index":13295},{"krate":0,"index":13296},{"krate":0,"index":13315},{"krate":0,"index":13318},{"krate":0,"index":13320},{"krate":0,"index":13322},{"krate":0,"index":13324},{"krate":0,"index":13326},{"krate":0,"index":13330},{"krate":0,"index":13333},{"krate":0,"index":13340},{"krate":0,"index":13346},{"krate":0,"index":13367},{"krate":0,"index":13372},{"krate":0,"index":13374},{"krate":0,"index":13379},{"krate":0,"index":13381},{"krate":0,"index":13383},{"krate":0,"index":13386},{"krate":0,"index":13388},{"krate":0,"index":13390},{"krate":0,"index":13415},{"krate":0,"index":13417},{"krate":0,"index":13421},{"krate":0,"index":13426},{"krate":0,"index":13431},{"krate":0,"index":13433},{"krate":0,"index":13439},{"krate":0,"index":13444},{"krate":0,"index":13450},{"krate":0,"index":13454},{"krate":0,"index":13459},{"krate":0,"index":13477},{"krate":0,"index":13484},{"krate":0,"index":13491},{"krate":0,"index":13499},{"krate":0,"index":13507},{"krate":0,"index":13514},{"krate":0,"index":13521},{"krate":0,"index":13528},{"krate":0,"index":13531},{"krate":0,"index":13533},{"krate":0,"index":13535},{"krate":0,"index":13560},{"krate":0,"index":13562},{"krate":0,"index":13566},{"krate":0,"index":13571},{"krate":0,"index":13576},{"krate":0,"index":13578},{"krate":0,"index":13584},{"krate":0,"index":13589},{"krate":0,"index":13595},{"krate":0,"index":13599},{"krate":0,"index":13604},{"krate":0,"index":13622},{"krate":0,"index":13629},{"krate":0,"index":13636},{"krate":0,"index":13644},{"krate":0,"index":13652},{"krate":0,"index":13659},{"krate":0,"index":13666},{"krate":0,"index":13673},{"krate":0,"index":13676},{"krate":0,"index":13678},{"krate":0,"index":13680},{"krate":0,"index":13705},{"krate":0,"index":13707},{"krate":0,"index":13711},{"krate":0,"index":13716},{"krate":0,"index":13721},{"krate":0,"index":13723},{"krate":0,"index":13729},{"krate":0,"index":13734},{"krate":0,"index":13740},{"krate":0,"index":13744},{"krate":0,"index":13749},{"krate":0,"index":13767},{"krate":0,"index":13774},{"krate":0,"index":13781},{"krate":0,"index":13789},{"krate":0,"index":13797},{"krate":0,"index":13804},{"krate":0,"index":13811},{"krate":0,"index":13818},{"krate":0,"index":13821},{"krate":0,"index":13823},{"krate":0,"index":13825},{"krate":0,"index":13850},{"krate":0,"index":13852},{"krate":0,"index":13856},{"krate":0,"index":13861},{"krate":0,"index":13866},{"krate":0,"index":13868},{"krate":0,"index":13874},{"krate":0,"index":13879},{"krate":0,"index":13885},{"krate":0,"index":13889},{"krate":0,"index":13894},{"krate":0,"index":13912},{"krate":0,"index":13919},{"krate":0,"index":13926},{"krate":0,"index":13934},{"krate":0,"index":13942},{"krate":0,"index":13949},{"krate":0,"index":13956},{"krate":0,"index":13963},{"krate":0,"index":13966},{"krate":0,"index":13968},{"krate":0,"index":13970},{"krate":0,"index":13995},{"krate":0,"index":13997},{"krate":0,"index":14001},{"krate":0,"index":14006},{"krate":0,"index":14011},{"krate":0,"index":14013},{"krate":0,"index":14019},{"krate":0,"index":14024},{"krate":0,"index":14030},{"krate":0,"index":14034},{"krate":0,"index":14039},{"krate":0,"index":14057},{"krate":0,"index":14064},{"krate":0,"index":14071},{"krate":0,"index":14079},{"krate":0,"index":14087},{"krate":0,"index":14094},{"krate":0,"index":14101},{"krate":0,"index":14108},{"krate":0,"index":14111},{"krate":0,"index":14113},{"krate":0,"index":14115},{"krate":0,"index":14140},{"krate":0,"index":14142},{"krate":0,"index":14146},{"krate":0,"index":14151},{"krate":0,"index":14156},{"krate":0,"index":14158},{"krate":0,"index":14164},{"krate":0,"index":14169},{"krate":0,"index":14175},{"krate":0,"index":14179},{"krate":0,"index":14184},{"krate":0,"index":14202},{"krate":0,"index":14209},{"krate":0,"index":14216},{"krate":0,"index":14224},{"krate":0,"index":14232},{"krate":0,"index":14239},{"krate":0,"index":14246},{"krate":0,"index":14253},{"krate":0,"index":14256},{"krate":0,"index":14258},{"krate":0,"index":14260},{"krate":0,"index":14285},{"krate":0,"index":14287},{"krate":0,"index":14291},{"krate":0,"index":14296},{"krate":0,"index":14301},{"krate":0,"index":14303},{"krate":0,"index":14309},{"krate":0,"index":14314},{"krate":0,"index":14320},{"krate":0,"index":14324},{"krate":0,"index":14329},{"krate":0,"index":14347},{"krate":0,"index":14354},{"krate":0,"index":14361},{"krate":0,"index":14369},{"krate":0,"index":14377},{"krate":0,"index":14384},{"krate":0,"index":14391},{"krate":0,"index":14398},{"krate":0,"index":14401},{"krate":0,"index":14403},{"krate":0,"index":14405},{"krate":0,"index":14430},{"krate":0,"index":14432},{"krate":0,"index":14436},{"krate":0,"index":14441},{"krate":0,"index":14446},{"krate":0,"index":14448},{"krate":0,"index":14454},{"krate":0,"index":14459},{"krate":0,"index":14465},{"krate":0,"index":14469},{"krate":0,"index":14474},{"krate":0,"index":14492},{"krate":0,"index":14499},{"krate":0,"index":14506},{"krate":0,"index":14514},{"krate":0,"index":14522},{"krate":0,"index":14529},{"krate":0,"index":14536},{"krate":0,"index":14543},{"krate":0,"index":14546},{"krate":0,"index":14548},{"krate":0,"index":14550},{"krate":0,"index":14575},{"krate":0,"index":14577},{"krate":0,"index":14581},{"krate":0,"index":14586},{"krate":0,"index":14591},{"krate":0,"index":14593},{"krate":0,"index":14599},{"krate":0,"index":14604},{"krate":0,"index":14610},{"krate":0,"index":14614},{"krate":0,"index":14619},{"krate":0,"index":14637},{"krate":0,"index":14644},{"krate":0,"index":14651},{"krate":0,"index":14659},{"krate":0,"index":14667},{"krate":0,"index":14674},{"krate":0,"index":14681},{"krate":0,"index":14688},{"krate":0,"index":14691},{"krate":0,"index":14693},{"krate":0,"index":14695},{"krate":0,"index":14720},{"krate":0,"index":14722},{"krate":0,"index":14726},{"krate":0,"index":14731},{"krate":0,"index":14736},{"krate":0,"index":14738},{"krate":0,"index":14744},{"krate":0,"index":14749},{"krate":0,"index":14755},{"krate":0,"index":14759},{"krate":0,"index":14764},{"krate":0,"index":14782},{"krate":0,"index":14789},{"krate":0,"index":14796},{"krate":0,"index":14804},{"krate":0,"index":14812},{"krate":0,"index":14819},{"krate":0,"index":14826},{"krate":0,"index":14833},{"krate":0,"index":14836},{"krate":0,"index":14838},{"krate":0,"index":14840},{"krate":0,"index":14865},{"krate":0,"index":14867},{"krate":0,"index":14871},{"krate":0,"index":14876},{"krate":0,"index":14881},{"krate":0,"index":14883},{"krate":0,"index":14889},{"krate":0,"index":14894},{"krate":0,"index":14900},{"krate":0,"index":14904},{"krate":0,"index":14909},{"krate":0,"index":14927},{"krate":0,"index":14934},{"krate":0,"index":14941},{"krate":0,"index":14949},{"krate":0,"index":14957},{"krate":0,"index":14964},{"krate":0,"index":14971},{"krate":0,"index":14978},{"krate":0,"index":14981},{"krate":0,"index":14983},{"krate":0,"index":14985},{"krate":0,"index":15010},{"krate":0,"index":15012},{"krate":0,"index":15016},{"krate":0,"index":15021},{"krate":0,"index":15026},{"krate":0,"index":15028},{"krate":0,"index":15034},{"krate":0,"index":15039},{"krate":0,"index":15045},{"krate":0,"index":15049},{"krate":0,"index":15054},{"krate":0,"index":15072},{"krate":0,"index":15079},{"krate":0,"index":15086},{"krate":0,"index":15094},{"krate":0,"index":15102},{"krate":0,"index":15109},{"krate":0,"index":15116},{"krate":0,"index":15123},{"krate":0,"index":15126},{"krate":0,"index":15128},{"krate":0,"index":15130},{"krate":0,"index":15155},{"krate":0,"index":15157},{"krate":0,"index":15161},{"krate":0,"index":15166},{"krate":0,"index":15171},{"krate":0,"index":15173},{"krate":0,"index":15179},{"krate":0,"index":15184},{"krate":0,"index":15190},{"krate":0,"index":15194},{"krate":0,"index":15199},{"krate":0,"index":15217},{"krate":0,"index":15224},{"krate":0,"index":15231},{"krate":0,"index":15239},{"krate":0,"index":15247},{"krate":0,"index":15254},{"krate":0,"index":15261},{"krate":0,"index":15268},{"krate":0,"index":15271},{"krate":0,"index":15273},{"krate":0,"index":15275},{"krate":0,"index":15300},{"krate":0,"index":15302},{"krate":0,"index":15306},{"krate":0,"index":15311},{"krate":0,"index":15316},{"krate":0,"index":15318},{"krate":0,"index":15324},{"krate":0,"index":15329},{"krate":0,"index":15335},{"krate":0,"index":15339},{"krate":0,"index":15344},{"krate":0,"index":15362},{"krate":0,"index":15369},{"krate":0,"index":15376},{"krate":0,"index":15384},{"krate":0,"index":15392},{"krate":0,"index":15399},{"krate":0,"index":15406},{"krate":0,"index":15413},{"krate":0,"index":15416},{"krate":0,"index":15418},{"krate":0,"index":15420},{"krate":0,"index":15445},{"krate":0,"index":15447},{"krate":0,"index":15451},{"krate":0,"index":15456},{"krate":0,"index":15461},{"krate":0,"index":15463},{"krate":0,"index":15469},{"krate":0,"index":15474},{"krate":0,"index":15480},{"krate":0,"index":15484},{"krate":0,"index":15489},{"krate":0,"index":15507},{"krate":0,"index":15514},{"krate":0,"index":15521},{"krate":0,"index":15529},{"krate":0,"index":15537},{"krate":0,"index":15544},{"krate":0,"index":15551},{"krate":0,"index":15558},{"krate":0,"index":15561},{"krate":0,"index":15563},{"krate":0,"index":15565},{"krate":0,"index":15590},{"krate":0,"index":15592},{"krate":0,"index":15596},{"krate":0,"index":15601},{"krate":0,"index":15606},{"krate":0,"index":15608},{"krate":0,"index":15614},{"krate":0,"index":15619},{"krate":0,"index":15625},{"krate":0,"index":15629},{"krate":0,"index":15634},{"krate":0,"index":15652},{"krate":0,"index":15659},{"krate":0,"index":15666},{"krate":0,"index":15674},{"krate":0,"index":15682},{"krate":0,"index":15689},{"krate":0,"index":15696}],"decl_id":null,"docs":" GPIO\n","sig":null,"attributes":[{"value":"/ GPIO","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":64821,"byte_end":64829,"line_start":221,"line_end":221,"column_start":9,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":13299},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":106686,"byte_end":106689,"line_start":1272,"line_end":1272,"column_start":11,"column_end":14},"name":"pe0","qualname":"::gpio::gpioe::Parts::pe0","value":"gpio::gpioe::PE0<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":13296},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":13300},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":106736,"byte_end":106739,"line_start":1273,"line_end":1273,"column_start":11,"column_end":14},"name":"pe1","qualname":"::gpio::gpioe::Parts::pe1","value":"gpio::gpioe::PE1<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":13296},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":13301},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":106786,"byte_end":106789,"line_start":1274,"line_end":1274,"column_start":11,"column_end":14},"name":"pe2","qualname":"::gpio::gpioe::Parts::pe2","value":"gpio::gpioe::PE2<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":13296},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":13302},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":106836,"byte_end":106839,"line_start":1275,"line_end":1275,"column_start":11,"column_end":14},"name":"pe3","qualname":"::gpio::gpioe::Parts::pe3","value":"gpio::gpioe::PE3<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":13296},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":13303},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":106886,"byte_end":106889,"line_start":1276,"line_end":1276,"column_start":11,"column_end":14},"name":"pe4","qualname":"::gpio::gpioe::Parts::pe4","value":"gpio::gpioe::PE4<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":13296},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":13304},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":106936,"byte_end":106939,"line_start":1277,"line_end":1277,"column_start":11,"column_end":14},"name":"pe5","qualname":"::gpio::gpioe::Parts::pe5","value":"gpio::gpioe::PE5<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":13296},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":13305},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":106986,"byte_end":106989,"line_start":1278,"line_end":1278,"column_start":11,"column_end":14},"name":"pe6","qualname":"::gpio::gpioe::Parts::pe6","value":"gpio::gpioe::PE6<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":13296},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":13306},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":107036,"byte_end":107039,"line_start":1279,"line_end":1279,"column_start":11,"column_end":14},"name":"pe7","qualname":"::gpio::gpioe::Parts::pe7","value":"gpio::gpioe::PE7<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":13296},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":13307},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":107086,"byte_end":107089,"line_start":1280,"line_end":1280,"column_start":11,"column_end":14},"name":"pe8","qualname":"::gpio::gpioe::Parts::pe8","value":"gpio::gpioe::PE8<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":13296},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":13308},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":107136,"byte_end":107139,"line_start":1281,"line_end":1281,"column_start":11,"column_end":14},"name":"pe9","qualname":"::gpio::gpioe::Parts::pe9","value":"gpio::gpioe::PE9<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":13296},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":13309},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":107187,"byte_end":107191,"line_start":1282,"line_end":1282,"column_start":12,"column_end":16},"name":"pe10","qualname":"::gpio::gpioe::Parts::pe10","value":"gpio::gpioe::PE10<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":13296},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":13310},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":107240,"byte_end":107244,"line_start":1283,"line_end":1283,"column_start":12,"column_end":16},"name":"pe11","qualname":"::gpio::gpioe::Parts::pe11","value":"gpio::gpioe::PE11<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":13296},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":13311},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":107293,"byte_end":107297,"line_start":1284,"line_end":1284,"column_start":12,"column_end":16},"name":"pe12","qualname":"::gpio::gpioe::Parts::pe12","value":"gpio::gpioe::PE12<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":13296},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":13312},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":107346,"byte_end":107350,"line_start":1285,"line_end":1285,"column_start":12,"column_end":16},"name":"pe13","qualname":"::gpio::gpioe::Parts::pe13","value":"gpio::gpioe::PE13<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":13296},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":13313},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":107399,"byte_end":107403,"line_start":1286,"line_end":1286,"column_start":12,"column_end":16},"name":"pe14","qualname":"::gpio::gpioe::Parts::pe14","value":"gpio::gpioe::PE14<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":13296},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":13314},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":107452,"byte_end":107456,"line_start":1287,"line_end":1287,"column_start":12,"column_end":16},"name":"pe15","qualname":"::gpio::gpioe::Parts::pe15","value":"gpio::gpioe::PE15<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":13296},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":65923,"byte_end":65930,"line_start":259,"line_end":259,"column_start":21,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":13379},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":106666,"byte_end":106669,"line_start":1271,"line_end":1271,"column_start":28,"column_end":31},"name":"PEx","qualname":"::gpio::gpioe::PEx","value":"Pxx<MODE>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13383},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":106680,"byte_end":106683,"line_start":1272,"line_end":1272,"column_start":5,"column_end":8},"name":"PE0","qualname":"::gpio::gpioe::PE0","value":"PE0 {  }","parent":null,"children":[{"krate":0,"index":13385}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":13528},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":106730,"byte_end":106733,"line_start":1273,"line_end":1273,"column_start":5,"column_end":8},"name":"PE1","qualname":"::gpio::gpioe::PE1","value":"PE1 {  }","parent":null,"children":[{"krate":0,"index":13530}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":13673},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":106780,"byte_end":106783,"line_start":1274,"line_end":1274,"column_start":5,"column_end":8},"name":"PE2","qualname":"::gpio::gpioe::PE2","value":"PE2 {  }","parent":null,"children":[{"krate":0,"index":13675}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":13818},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":106830,"byte_end":106833,"line_start":1275,"line_end":1275,"column_start":5,"column_end":8},"name":"PE3","qualname":"::gpio::gpioe::PE3","value":"PE3 {  }","parent":null,"children":[{"krate":0,"index":13820}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":13963},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":106880,"byte_end":106883,"line_start":1276,"line_end":1276,"column_start":5,"column_end":8},"name":"PE4","qualname":"::gpio::gpioe::PE4","value":"PE4 {  }","parent":null,"children":[{"krate":0,"index":13965}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":14108},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":106930,"byte_end":106933,"line_start":1277,"line_end":1277,"column_start":5,"column_end":8},"name":"PE5","qualname":"::gpio::gpioe::PE5","value":"PE5 {  }","parent":null,"children":[{"krate":0,"index":14110}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":14253},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":106980,"byte_end":106983,"line_start":1278,"line_end":1278,"column_start":5,"column_end":8},"name":"PE6","qualname":"::gpio::gpioe::PE6","value":"PE6 {  }","parent":null,"children":[{"krate":0,"index":14255}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":14398},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":107030,"byte_end":107033,"line_start":1279,"line_end":1279,"column_start":5,"column_end":8},"name":"PE7","qualname":"::gpio::gpioe::PE7","value":"PE7 {  }","parent":null,"children":[{"krate":0,"index":14400}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":14543},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":107080,"byte_end":107083,"line_start":1280,"line_end":1280,"column_start":5,"column_end":8},"name":"PE8","qualname":"::gpio::gpioe::PE8","value":"PE8 {  }","parent":null,"children":[{"krate":0,"index":14545}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":14688},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":107130,"byte_end":107133,"line_start":1281,"line_end":1281,"column_start":5,"column_end":8},"name":"PE9","qualname":"::gpio::gpioe::PE9","value":"PE9 {  }","parent":null,"children":[{"krate":0,"index":14690}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":14833},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":107180,"byte_end":107184,"line_start":1282,"line_end":1282,"column_start":5,"column_end":9},"name":"PE10","qualname":"::gpio::gpioe::PE10","value":"PE10 {  }","parent":null,"children":[{"krate":0,"index":14835}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":14978},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":107233,"byte_end":107237,"line_start":1283,"line_end":1283,"column_start":5,"column_end":9},"name":"PE11","qualname":"::gpio::gpioe::PE11","value":"PE11 {  }","parent":null,"children":[{"krate":0,"index":14980}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":15123},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":107286,"byte_end":107290,"line_start":1284,"line_end":1284,"column_start":5,"column_end":9},"name":"PE12","qualname":"::gpio::gpioe::PE12","value":"PE12 {  }","parent":null,"children":[{"krate":0,"index":15125}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":15268},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":107339,"byte_end":107343,"line_start":1285,"line_end":1285,"column_start":5,"column_end":9},"name":"PE13","qualname":"::gpio::gpioe::PE13","value":"PE13 {  }","parent":null,"children":[{"krate":0,"index":15270}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":15413},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":107392,"byte_end":107396,"line_start":1286,"line_end":1286,"column_start":5,"column_end":9},"name":"PE14","qualname":"::gpio::gpioe::PE14","value":"PE14 {  }","parent":null,"children":[{"krate":0,"index":15415}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":15558},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":107445,"byte_end":107449,"line_start":1287,"line_end":1287,"column_start":5,"column_end":9},"name":"PE15","qualname":"::gpio::gpioe::PE15","value":"PE15 {  }","parent":null,"children":[{"krate":0,"index":15560}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":73204,"byte_end":73211,"line_start":442,"line_end":442,"column_start":17,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":457},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"i2c","qualname":"::i2c","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","parent":null,"children":[{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":18195},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":18219},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":18223},{"krate":0,"index":487},{"krate":0,"index":18225},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":15927},{"krate":0,"index":15944},{"krate":0,"index":15941},{"krate":0,"index":15942},{"krate":0,"index":15938},{"krate":0,"index":15939},{"krate":0,"index":15946},{"krate":0,"index":15957},{"krate":0,"index":15954},{"krate":0,"index":15955},{"krate":0,"index":15951},{"krate":0,"index":15952},{"krate":0,"index":15959},{"krate":0,"index":15969},{"krate":0,"index":15965},{"krate":0,"index":15966},{"krate":0,"index":491},{"krate":0,"index":497},{"krate":0,"index":500},{"krate":0,"index":502},{"krate":0,"index":504},{"krate":0,"index":506},{"krate":0,"index":513},{"krate":0,"index":521},{"krate":0,"index":525},{"krate":0,"index":529},{"krate":0,"index":532},{"krate":0,"index":535},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":546},{"krate":0,"index":568},{"krate":0,"index":572},{"krate":0,"index":579},{"krate":0,"index":584},{"krate":0,"index":597}],"decl_id":null,"docs":" Inter-Integrated Circuit (I2C) bus\n","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":4883,"byte_end":4918,"line_start":157,"line_end":157,"column_start":1,"column_end":36}},{"value":"/ Inter-Integrated Circuit (I2C) bus","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":107499,"byte_end":107537,"line_start":1,"line_end":1,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":15928},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":108313,"byte_end":108316,"line_start":22,"line_end":22,"column_start":5,"column_end":8},"name":"Bus","qualname":"::i2c::Error::Bus","value":"Error::Bus","parent":{"krate":0,"index":15927},"children":[],"decl_id":null,"docs":" Bus error\n","sig":null,"attributes":[{"value":"/ Bus error","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":108295,"byte_end":108308,"line_start":21,"line_end":21,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":15930},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":108347,"byte_end":108358,"line_start":24,"line_end":24,"column_start":5,"column_end":16},"name":"Arbitration","qualname":"::i2c::Error::Arbitration","value":"Error::Arbitration","parent":{"krate":0,"index":15927},"children":[],"decl_id":null,"docs":" Arbitration loss\n","sig":null,"attributes":[{"value":"/ Arbitration loss","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":108322,"byte_end":108342,"line_start":23,"line_end":23,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":15932},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":108388,"byte_end":108399,"line_start":26,"line_end":26,"column_start":5,"column_end":16},"name":"Acknowledge","qualname":"::i2c::Error::Acknowledge","value":"Error::Acknowledge","parent":{"krate":0,"index":15927},"children":[],"decl_id":null,"docs":" No ack received\n","sig":null,"attributes":[{"value":"/ No ack received","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":108364,"byte_end":108383,"line_start":25,"line_end":25,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":15934},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":108430,"byte_end":108437,"line_start":28,"line_end":28,"column_start":5,"column_end":12},"name":"Overrun","qualname":"::i2c::Error::Overrun","value":"Error::Overrun","parent":{"krate":0,"index":15927},"children":[],"decl_id":null,"docs":" Overrun/underrun\n","sig":null,"attributes":[{"value":"/ Overrun/underrun","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":108405,"byte_end":108425,"line_start":27,"line_end":27,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":15936},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":108561,"byte_end":108572,"line_start":33,"line_end":33,"column_start":5,"column_end":16},"name":"_Extensible","qualname":"::i2c::Error::_Extensible","value":"Error::_Extensible","parent":{"krate":0,"index":15927},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":15927},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":108283,"byte_end":108288,"line_start":20,"line_end":20,"column_start":10,"column_end":15},"name":"Error","qualname":"::i2c::Error","value":"pub enum Error {\n\n    /// Bus error\n    Bus,\n\n    /// Arbitration loss\n    Arbitration,\n\n    /// No ack received\n    Acknowledge,\n\n    /// Overrun/underrun\n    Overrun,\n\n    #[doc(hidden)]\n    _Extensible,\n}","parent":null,"children":[{"krate":0,"index":15928},{"krate":0,"index":15930},{"krate":0,"index":15932},{"krate":0,"index":15934},{"krate":0,"index":15936}],"decl_id":null,"docs":" I2C error\n","sig":null,"attributes":[{"value":"/ I2C error","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":108228,"byte_end":108241,"line_start":18,"line_end":18,"column_start":1,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":15947},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":108634,"byte_end":108643,"line_start":38,"line_end":38,"column_start":5,"column_end":14},"name":"Ratio2to1","qualname":"::i2c::DutyCycle::Ratio2to1","value":"DutyCycle::Ratio2to1","parent":{"krate":0,"index":15946},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":15949},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":108649,"byte_end":108659,"line_start":39,"line_end":39,"column_start":5,"column_end":15},"name":"Ratio16to9","qualname":"::i2c::DutyCycle::Ratio16to9","value":"DutyCycle::Ratio16to9","parent":{"krate":0,"index":15946},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":15946},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":108618,"byte_end":108627,"line_start":37,"line_end":37,"column_start":10,"column_end":19},"name":"DutyCycle","qualname":"::i2c::DutyCycle","value":"pub enum DutyCycle { Ratio2to1, Ratio16to9, }","parent":null,"children":[{"krate":0,"index":15947},{"krate":0,"index":15949}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":15960},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":108712,"byte_end":108720,"line_start":44,"line_end":44,"column_start":5,"column_end":13},"name":"Standard","qualname":"::i2c::Mode::Standard","value":"Mode::Standard { frequency }","parent":{"krate":0,"index":15959},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":15962},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":108760,"byte_end":108764,"line_start":47,"line_end":47,"column_start":5,"column_end":9},"name":"Fast","qualname":"::i2c::Mode::Fast","value":"Mode::Fast { frequency, duty_cycle }","parent":{"krate":0,"index":15959},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":15959},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":108701,"byte_end":108705,"line_start":43,"line_end":43,"column_start":10,"column_end":14},"name":"Mode","qualname":"::i2c::Mode","value":"pub enum Mode {\n    Standard {\n        frequency: Hertz,\n    },\n    Fast {\n        frequency: Hertz,\n        duty_cycle: DutyCycle,\n    },\n}","parent":null,"children":[{"krate":0,"index":15960},{"krate":0,"index":15962}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":108857,"byte_end":108865,"line_start":54,"line_end":54,"column_start":12,"column_end":20},"name":"standard","qualname":"<Mode>::standard","value":"pub fn standard<F: Into<Hertz>>(F) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":109000,"byte_end":109004,"line_start":60,"line_end":60,"column_start":12,"column_end":16},"name":"fast","qualname":"<Mode>::fast","value":"pub fn fast<F: Into<Hertz>>(F, DutyCycle) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":109182,"byte_end":109195,"line_start":67,"line_end":67,"column_start":12,"column_end":25},"name":"get_frequency","qualname":"<Mode>::get_frequency","value":"pub fn get_frequency(&Self) -> Hertz","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":497},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":109469,"byte_end":109473,"line_start":76,"line_end":76,"column_start":11,"column_end":15},"name":"Pins","qualname":"::i2c::Pins","value":"Pins<I2C>","parent":null,"children":[{"krate":0,"index":499}],"decl_id":null,"docs":" Helper trait to ensure that the correct I2C pins are used for the corresponding interface\n","sig":null,"attributes":[{"value":"/ Helper trait to ensure that the correct I2C pins are used for the corresponding interface","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":109365,"byte_end":109458,"line_start":75,"line_end":75,"column_start":1,"column_end":94}}]},{"kind":"Const","id":{"krate":0,"index":499},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":109491,"byte_end":109496,"line_start":77,"line_end":77,"column_start":11,"column_end":16},"name":"REMAP","qualname":"::i2c::Pins::REMAP","value":"bool","parent":{"krate":0,"index":497},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":506},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":109896,"byte_end":109899,"line_start":93,"line_end":93,"column_start":12,"column_end":15},"name":"I2c","qualname":"::i2c::I2c","value":"I2c {  }","parent":null,"children":[{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512}],"decl_id":null,"docs":" I2C peripheral operating in master mode\n","sig":null,"attributes":[{"value":"/ I2C peripheral operating in master mode","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":109841,"byte_end":109884,"line_start":92,"line_end":92,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":513},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":110045,"byte_end":110056,"line_start":101,"line_end":101,"column_start":12,"column_end":23},"name":"BlockingI2c","qualname":"::i2c::BlockingI2c","value":"BlockingI2c {  }","parent":null,"children":[{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520}],"decl_id":null,"docs":" embedded-hal compatible blocking I2C implementation\n","sig":null,"attributes":[{"value":"/ embedded-hal compatible blocking I2C implementation","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":109978,"byte_end":110033,"line_start":100,"line_end":100,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":110317,"byte_end":110321,"line_start":111,"line_end":111,"column_start":12,"column_end":16},"name":"i2c1","qualname":"<I2c<I2C1, PINS>>::i2c1","value":"pub fn i2c1(I2C1, PINS, &mut MAPR, Mode, Clocks, &mut APB1) -> Self where\nPINS: Pins<I2C1>","parent":null,"children":[],"decl_id":null,"docs":" Creates a generic I2C1 object on pins PB6 and PB7 or PB8 and PB9 (if remapped)\n","sig":null,"attributes":[{"value":"/ Creates a generic I2C1 object on pins PB6 and PB7 or PB8 and PB9 (if remapped)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":110223,"byte_end":110305,"line_start":110,"line_end":110,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":527},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":110811,"byte_end":110815,"line_start":129,"line_end":129,"column_start":12,"column_end":16},"name":"i2c1","qualname":"<BlockingI2c<I2C1, PINS>>::i2c1","value":"pub fn i2c1(I2C1, PINS, &mut MAPR, Mode, Clocks, &mut APB1, u32, u8, u32, u32)\n-> Self where PINS: Pins<I2C1>","parent":null,"children":[],"decl_id":null,"docs":" Creates a blocking I2C1 object on pins PB6 and PB7 or PB8 and PB9 using the embedded-hal `BlockingI2c` trait.\n","sig":null,"attributes":[{"value":"/ Creates a blocking I2C1 object on pins PB6 and PB7 or PB8 and PB9 using the embedded-hal `BlockingI2c` trait.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":110686,"byte_end":110799,"line_start":128,"line_end":128,"column_start":5,"column_end":118}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":111595,"byte_end":111599,"line_start":161,"line_end":161,"column_start":12,"column_end":16},"name":"i2c2","qualname":"<I2c<I2C2, PINS>>::i2c2","value":"pub fn i2c2(I2C2, PINS, Mode, Clocks, &mut APB1) -> Self where\nPINS: Pins<I2C2>","parent":null,"children":[],"decl_id":null,"docs":" Creates a generic I2C2 object on pins PB10 and PB11 using the embedded-hal `BlockingI2c` trait.\n","sig":null,"attributes":[{"value":"/ Creates a generic I2C2 object on pins PB10 and PB11 using the embedded-hal `BlockingI2c` trait.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":111484,"byte_end":111583,"line_start":160,"line_end":160,"column_start":5,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":111893,"byte_end":111897,"line_start":171,"line_end":171,"column_start":12,"column_end":16},"name":"i2c2","qualname":"<BlockingI2c<I2C2, PINS>>::i2c2","value":"pub fn i2c2(I2C2, PINS, Mode, Clocks, &mut APB1, u32, u8, u32, u32) -> Self\nwhere PINS: Pins<I2C2>","parent":null,"children":[],"decl_id":null,"docs":" Creates a blocking I2C2 object on pins PB10 and PB1\n","sig":null,"attributes":[{"value":"/ Creates a blocking I2C2 object on pins PB10 and PB1","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":111826,"byte_end":111881,"line_start":170,"line_end":170,"column_start":5,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":541},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":114119,"byte_end":114135,"line_start":263,"line_end":263,"column_start":10,"column_end":26},"name":"I2cRegisterBlock","qualname":"::i2c::I2cRegisterBlock","value":"crate::pac::i2c1::RegisterBlock","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":117927,"byte_end":117931,"line_start":381,"line_end":381,"column_start":12,"column_end":16},"name":"free","qualname":"<I2c<I2C, PINS>>::free","value":"pub fn free(Self) -> (I2C, PINS)","parent":null,"children":[],"decl_id":null,"docs":" Releases the I2C peripheral and associated pins\n","sig":null,"attributes":[{"value":"/ Releases the I2C peripheral and associated pins","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":117864,"byte_end":117915,"line_start":380,"line_end":380,"column_start":5,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":602},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/prelude.rs","parent":null,"children":[{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":4932,"byte_end":4967,"line_start":159,"line_end":159,"column_start":1,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":618},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pwm","qualname":"::pwm","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm.rs","parent":null,"children":[{"krate":0,"index":619},{"krate":0,"index":18259},{"krate":0,"index":620},{"krate":0,"index":18261},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":18287},{"krate":0,"index":637},{"krate":0,"index":18289},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":15971},{"krate":0,"index":15984},{"krate":0,"index":15983},{"krate":0,"index":15980},{"krate":0,"index":15981},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":15986},{"krate":0,"index":15998},{"krate":0,"index":16008},{"krate":0,"index":16018},{"krate":0,"index":16028},{"krate":0,"index":16038},{"krate":0,"index":16046},{"krate":0,"index":16054},{"krate":0,"index":16062},{"krate":0,"index":16070},{"krate":0,"index":16078},{"krate":0,"index":16086},{"krate":0,"index":16092},{"krate":0,"index":16098},{"krate":0,"index":16104},{"krate":0,"index":656},{"krate":0,"index":664},{"krate":0,"index":671},{"krate":0,"index":678},{"krate":0,"index":685},{"krate":0,"index":692},{"krate":0,"index":698},{"krate":0,"index":703},{"krate":0,"index":705},{"krate":0,"index":707},{"krate":0,"index":709},{"krate":0,"index":16110},{"krate":0,"index":16124},{"krate":0,"index":16145},{"krate":0,"index":16153},{"krate":0,"index":16161},{"krate":0,"index":16169},{"krate":0,"index":16177},{"krate":0,"index":16191},{"krate":0,"index":16212},{"krate":0,"index":16220},{"krate":0,"index":16228},{"krate":0,"index":16236},{"krate":0,"index":16244},{"krate":0,"index":16258},{"krate":0,"index":16279},{"krate":0,"index":16287},{"krate":0,"index":16295},{"krate":0,"index":16303},{"krate":0,"index":16311},{"krate":0,"index":16325},{"krate":0,"index":16346},{"krate":0,"index":16354},{"krate":0,"index":16362},{"krate":0,"index":16370}],"decl_id":null,"docs":"  # Pulse width modulation","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":4985,"byte_end":5020,"line_start":161,"line_end":161,"column_start":1,"column_end":36}},{"value":"*\n  # Pulse width modulation\n\n  The general purpose timers (`TIM2`, `TIM3`, and `TIM4`) can be used to output\n  pulse width modulated signals on some pins. The timers support up to 4\n  simultaneous pwm outputs in separate `Channels`\n\n  ## Usage for pre-defined channel combinations\n\n  This crate only defines basic channel combinations for default AFIO remappings,\n  where all the channels are enabled. Start by setting all the pins for the\n  timer you want to use to alternate push pull pins:\n\n  ```rust\n  let gpioa = ..; // Set up and split GPIOA\n  // Select the pins you want to use\n  let pins = (\n      gpioa.pa0.into_alternate_push_pull(&mut gpioa.crl),\n      gpioa.pa1.into_alternate_push_pull(&mut gpioa.crl),\n      gpioa.pa2.into_alternate_push_pull(&mut gpioa.crl),\n      gpioa.pa3.into_alternate_push_pull(&mut gpioa.crl),\n  );\n\n  // Set up the timer as a PWM output. If selected pins may correspond to different remap options,\n  // then you must specify the remap generic parameter. Otherwise, if there is no such ambiguity,\n  // the remap generic parameter can be omitted without complains from the compiler.\n  let (c1, c2, c3, c4) = Timer::tim2(p.TIM2, &clocks, &mut rcc.apb1)\n      .pwm::<Tim2NoRemap, _, _, _>(pins, &mut afio.mapr, 1.khz())\n      .3;\n\n  // Start using the channels\n  c1.set_duty(c1.get_max_duty());\n  // ...\n  ```\n\n  Then call the `pwm` function on the corresponding timer.\n\n  NOTE: In some cases you need to specify remap you need, especially for TIM2\n  (see [Alternate function remapping](super::timer)):\n\n  ```\n    let device: pac::Peripherals = ..;\n\n    // Put the timer in PWM mode using the specified pins\n    // with a frequency of 100 hz.\n    let (c0, c1, c2, c3) = Timer::tim2(device.TIM2, &clocks, &mut rcc.apb1)\n        .pwm::<Tim2NoRemap, _, _, _>(pins, &mut afio.mapr, 100.hz());\n\n    // Set the duty cycle of channel 0 to 50%\n    c0.set_duty(c0.get_max_duty() / 2);\n    // PWM outputs are disabled by default\n    c0.enable()\n  ```\n*/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm.rs","byte_start":125072,"byte_end":127053,"line_start":1,"line_end":54,"column_start":1,"column_end":3}}]},{"kind":"Trait","id":{"krate":0,"index":640},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm.rs","byte_start":127520,"byte_end":127524,"line_start":75,"line_end":75,"column_start":11,"column_end":15},"name":"Pins","qualname":"::pwm::Pins","value":"Pins<REMAP, P>","parent":null,"children":[{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":643},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm.rs","byte_start":127547,"byte_end":127549,"line_start":76,"line_end":76,"column_start":11,"column_end":13},"name":"C1","qualname":"::pwm::Pins::C1","value":"bool","parent":{"krate":0,"index":640},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":644},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm.rs","byte_start":127575,"byte_end":127577,"line_start":77,"line_end":77,"column_start":11,"column_end":13},"name":"C2","qualname":"::pwm::Pins::C2","value":"bool","parent":{"krate":0,"index":640},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":645},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm.rs","byte_start":127603,"byte_end":127605,"line_start":78,"line_end":78,"column_start":11,"column_end":13},"name":"C3","qualname":"::pwm::Pins::C3","value":"bool","parent":{"krate":0,"index":640},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":646},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm.rs","byte_start":127631,"byte_end":127633,"line_start":79,"line_end":79,"column_start":11,"column_end":13},"name":"C4","qualname":"::pwm::Pins::C4","value":"bool","parent":{"krate":0,"index":640},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":647},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm.rs","byte_start":127658,"byte_end":127666,"line_start":80,"line_end":80,"column_start":10,"column_end":18},"name":"Channels","qualname":"::pwm::Pins::Channels","value":"type Channels;","parent":{"krate":0,"index":640},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm.rs","byte_start":127676,"byte_end":127686,"line_start":82,"line_end":82,"column_start":8,"column_end":18},"name":"check_used","qualname":"::pwm::Pins::check_used","value":"pub fn check_used(Channel) -> Channel","parent":{"krate":0,"index":640},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":15972},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm.rs","byte_start":128046,"byte_end":128048,"line_start":97,"line_end":97,"column_start":5,"column_end":7},"name":"C1","qualname":"::pwm::Channel::C1","value":"Channel::C1","parent":{"krate":0,"index":15971},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":15974},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm.rs","byte_start":128054,"byte_end":128056,"line_start":98,"line_end":98,"column_start":5,"column_end":7},"name":"C2","qualname":"::pwm::Channel::C2","value":"Channel::C2","parent":{"krate":0,"index":15971},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":15976},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm.rs","byte_start":128062,"byte_end":128064,"line_start":99,"line_end":99,"column_start":5,"column_end":7},"name":"C3","qualname":"::pwm::Channel::C3","value":"Channel::C3","parent":{"krate":0,"index":15971},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":15978},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm.rs","byte_start":128070,"byte_end":128072,"line_start":100,"line_end":100,"column_start":5,"column_end":7},"name":"C4","qualname":"::pwm::Channel::C4","value":"Channel::C4","parent":{"krate":0,"index":15971},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":15971},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm.rs","byte_start":128032,"byte_end":128039,"line_start":96,"line_end":96,"column_start":10,"column_end":17},"name":"Channel","qualname":"::pwm::Channel","value":"pub enum Channel { C1, C2, C3, C4, }","parent":null,"children":[{"krate":0,"index":15972},{"krate":0,"index":15974},{"krate":0,"index":15976},{"krate":0,"index":15978}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm.rs","byte_start":129371,"byte_end":129374,"line_start":140,"line_end":140,"column_start":12,"column_end":15},"name":"pwm","qualname":"<Timer<TIM1>>::pwm","value":"pub fn pwm<REMAP, P, PINS, T>(Self, PINS, &mut MAPR, T)\n-> Pwm<TIM1, REMAP, P, PINS> where REMAP: Remap<Periph = TIM1>,\nPINS: Pins<REMAP, P>, T: Into<Hertz>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm.rs","byte_start":130024,"byte_end":130027,"line_start":163,"line_end":163,"column_start":12,"column_end":15},"name":"pwm","qualname":"<Timer<TIM2>>::pwm","value":"pub fn pwm<REMAP, P, PINS, T>(Self, PINS, &mut MAPR, T)\n-> Pwm<TIM2, REMAP, P, PINS> where REMAP: Remap<Periph = TIM2>,\nPINS: Pins<REMAP, P>, T: Into<Hertz>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm.rs","byte_start":130467,"byte_end":130470,"line_start":182,"line_end":182,"column_start":12,"column_end":15},"name":"pwm","qualname":"<Timer<TIM3>>::pwm","value":"pub fn pwm<REMAP, P, PINS, T>(Self, PINS, &mut MAPR, T)\n-> Pwm<TIM3, REMAP, P, PINS> where REMAP: Remap<Periph = TIM3>,\nPINS: Pins<REMAP, P>, T: Into<Hertz>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm.rs","byte_start":130937,"byte_end":130940,"line_start":202,"line_end":202,"column_start":12,"column_end":15},"name":"pwm","qualname":"<Timer<TIM4>>::pwm","value":"pub fn pwm<REMAP, P, PINS, T>(Self, PINS, &mut MAPR, T)\n-> Pwm<TIM4, REMAP, P, PINS> where REMAP: Remap<Periph = TIM4>,\nPINS: Pins<REMAP, P>, T: Into<Hertz>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":685},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm.rs","byte_start":131354,"byte_end":131357,"line_start":220,"line_end":220,"column_start":12,"column_end":15},"name":"Pwm","qualname":"::pwm::Pwm","value":"Pwm {  }","parent":null,"children":[{"krate":0,"index":690},{"krate":0,"index":691}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm.rs","byte_start":131639,"byte_end":131644,"line_start":234,"line_end":234,"column_start":12,"column_end":17},"name":"split","qualname":"<Pwm<TIM, REMAP, P, PINS>>::split","value":"pub fn split(Self) -> PINS::Channels","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":698},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm.rs","byte_start":131751,"byte_end":131761,"line_start":239,"line_end":239,"column_start":12,"column_end":22},"name":"PwmChannel","qualname":"::pwm::PwmChannel","value":"PwmChannel {  }","parent":null,"children":[{"krate":0,"index":701},{"krate":0,"index":702}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":703},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm.rs","byte_start":131856,"byte_end":131858,"line_start":244,"line_end":244,"column_start":12,"column_end":14},"name":"C1","qualname":"::pwm::C1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":705},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm.rs","byte_start":131871,"byte_end":131873,"line_start":245,"line_end":245,"column_start":12,"column_end":14},"name":"C2","qualname":"::pwm::C2","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":707},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm.rs","byte_start":131886,"byte_end":131888,"line_start":246,"line_end":246,"column_start":12,"column_end":14},"name":"C3","qualname":"::pwm::C3","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":709},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm.rs","byte_start":131901,"byte_end":131903,"line_start":247,"line_end":247,"column_start":12,"column_end":14},"name":"C4","qualname":"::pwm::C4","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":712},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pwm_input","qualname":"::pwm_input","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","parent":null,"children":[{"krate":0,"index":713},{"krate":0,"index":18305},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":18323},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":18333},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":743},{"krate":0,"index":750},{"krate":0,"index":16378},{"krate":0,"index":16381},{"krate":0,"index":755},{"krate":0,"index":769},{"krate":0,"index":775},{"krate":0,"index":781},{"krate":0,"index":787},{"krate":0,"index":793},{"krate":0,"index":16383},{"krate":0,"index":16402},{"krate":0,"index":16409},{"krate":0,"index":16428},{"krate":0,"index":16435},{"krate":0,"index":16454},{"krate":0,"index":16461},{"krate":0,"index":16480}],"decl_id":null,"docs":" This module allows Timer peripherals to be configured as pwm input.\n In this mode, the timer sample a squared signal to find it's frequency and duty cycle.\n","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":5034,"byte_end":5069,"line_start":163,"line_end":163,"column_start":1,"column_end":36}},{"value":"/ This module allows Timer peripherals to be configured as pwm input.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":141950,"byte_end":142021,"line_start":1,"line_end":1,"column_start":1,"column_end":72}},{"value":"/ In this mode, the timer sample a squared signal to find it's frequency and duty cycle.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":142022,"byte_end":142112,"line_start":2,"line_end":2,"column_start":1,"column_end":91}}]},{"kind":"Trait","id":{"krate":0,"index":732},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":142558,"byte_end":142562,"line_start":20,"line_end":20,"column_start":11,"column_end":15},"name":"Pins","qualname":"::pwm_input::Pins","value":"Pins<REMAP>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":743},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":142838,"byte_end":142846,"line_start":33,"line_end":33,"column_start":12,"column_end":20},"name":"PwmInput","qualname":"::pwm_input::PwmInput","value":"PwmInput {  }","parent":null,"children":[{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749}],"decl_id":null,"docs":" PWM Input\n","sig":null,"attributes":[{"value":"/ PWM Input","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":142813,"byte_end":142826,"line_start":32,"line_end":32,"column_start":1,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":751},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":143066,"byte_end":143073,"line_start":42,"line_end":42,"column_start":5,"column_end":12},"name":"Instant","qualname":"::pwm_input::ReadMode::Instant","value":"ReadMode::Instant","parent":{"krate":0,"index":750},"children":[],"decl_id":null,"docs":" Return the latest captured data\n","sig":null,"attributes":[{"value":"/ Return the latest captured data","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":143026,"byte_end":143061,"line_start":41,"line_end":41,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":753},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":143258,"byte_end":143276,"line_start":45,"line_end":45,"column_start":5,"column_end":23},"name":"WaitForNextCapture","qualname":"::pwm_input::ReadMode::WaitForNextCapture","value":"ReadMode::WaitForNextCapture","parent":{"krate":0,"index":750},"children":[],"decl_id":null,"docs":" Wait for one period of the signal before computing the frequency and the duty cycle\n The microcontroller will be halted for at most two period of the input signal.\n","sig":null,"attributes":[{"value":"/ Wait for one period of the signal before computing the frequency and the duty cycle","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":143079,"byte_end":143166,"line_start":43,"line_end":43,"column_start":5,"column_end":92}},{"value":"/ The microcontroller will be halted for at most two period of the input signal.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":143171,"byte_end":143253,"line_start":44,"line_end":44,"column_start":5,"column_end":87}}]},{"kind":"Enum","id":{"krate":0,"index":750},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":143011,"byte_end":143019,"line_start":40,"line_end":40,"column_start":10,"column_end":18},"name":"ReadMode","qualname":"::pwm_input::ReadMode","value":"pub enum ReadMode {\n\n    /// Return the latest captured data\n    Instant,\n\n    /// Wait for one period of the signal before computing the frequency and the duty cycle\n    /// The microcontroller will be halted for at most two period of the input signal.\n    WaitForNextCapture,\n}","parent":null,"children":[{"krate":0,"index":751},{"krate":0,"index":753}],"decl_id":null,"docs":" How the data is read from the timer\n","sig":null,"attributes":[{"value":"/ How the data is read from the timer","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":142962,"byte_end":143001,"line_start":39,"line_end":39,"column_start":1,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":16379},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":143469,"byte_end":143484,"line_start":52,"line_end":52,"column_start":5,"column_end":20},"name":"FrequencyTooLow","qualname":"::pwm_input::Error::FrequencyTooLow","value":"Error::FrequencyTooLow","parent":{"krate":0,"index":16378},"children":[],"decl_id":null,"docs":" The signal frequency is too low to be sampled by the current timer configuration\n","sig":null,"attributes":[{"value":"/ The signal frequency is too low to be sampled by the current timer configuration","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":143380,"byte_end":143464,"line_start":51,"line_end":51,"column_start":5,"column_end":89}}]},{"kind":"Enum","id":{"krate":0,"index":16378},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":143368,"byte_end":143373,"line_start":50,"line_end":50,"column_start":10,"column_end":15},"name":"Error","qualname":"::pwm_input::Error","value":"pub enum Error {\n\n    /// The signal frequency is too low to be sampled by the current timer configuration\n    FrequencyTooLow,\n}","parent":null,"children":[{"krate":0,"index":16379}],"decl_id":null,"docs":" The error returned when reading a frequency from a timer\n","sig":null,"attributes":[{"value":"/ The error returned when reading a frequency from a timer","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":143281,"byte_end":143341,"line_start":48,"line_end":48,"column_start":1,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":757},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":143971,"byte_end":143980,"line_start":67,"line_end":67,"column_start":5,"column_end":14},"name":"Frequency","qualname":"::pwm_input::Configuration::Frequency","value":"Configuration::Frequency(T)","parent":{"krate":0,"index":755},"children":[],"decl_id":null,"docs":" In this mode an algorithm calculates the optimal value for the autoreload register and the\n prescaler register in order to be able to sample a wide range of frequency, at the expense\n of resolution.","sig":null,"attributes":[{"value":"/ In this mode an algorithm calculates the optimal value for the autoreload register and the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":143596,"byte_end":143690,"line_start":60,"line_end":60,"column_start":5,"column_end":99}},{"value":"/ prescaler register in order to be able to sample a wide range of frequency, at the expense","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":143695,"byte_end":143789,"line_start":61,"line_end":61,"column_start":5,"column_end":99}},{"value":"/ of resolution.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":143794,"byte_end":143812,"line_start":62,"line_end":62,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":143817,"byte_end":143820,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ The minimum frequency that can be sampled is 20% the provided frequency.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":143825,"byte_end":143901,"line_start":64,"line_end":64,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":143906,"byte_end":143909,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Use this mode if you do not know what to choose.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":143914,"byte_end":143966,"line_start":66,"line_end":66,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":760},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":144335,"byte_end":144344,"line_start":74,"line_end":74,"column_start":5,"column_end":14},"name":"DutyCycle","qualname":"::pwm_input::Configuration::DutyCycle","value":"Configuration::DutyCycle(T)","parent":{"krate":0,"index":755},"children":[],"decl_id":null,"docs":" In this mode an algorithm calculates the optimal value for the autoreload register and the\n prescaler register in order to sample the duty cycle with a high resolution.\n This will limit the frequency range where the timer can operate.","sig":null,"attributes":[{"value":"/ In this mode an algorithm calculates the optimal value for the autoreload register and the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":143990,"byte_end":144084,"line_start":69,"line_end":69,"column_start":5,"column_end":99}},{"value":"/ prescaler register in order to sample the duty cycle with a high resolution.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":144089,"byte_end":144169,"line_start":70,"line_end":70,"column_start":5,"column_end":85}},{"value":"/ This will limit the frequency range where the timer can operate.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":144174,"byte_end":144242,"line_start":71,"line_end":71,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":144247,"byte_end":144250,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ The minimum frequency that can be sampled is 90% the provided frequency","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":144255,"byte_end":144330,"line_start":73,"line_end":73,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":763},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":144617,"byte_end":144629,"line_start":79,"line_end":79,"column_start":5,"column_end":17},"name":"RawFrequency","qualname":"::pwm_input::Configuration::RawFrequency","value":"Configuration::RawFrequency(T)","parent":{"krate":0,"index":755},"children":[],"decl_id":null,"docs":" In this mode an algorithm calculates the optimal value for the autoreload register and the\n prescaler register in order to be able to sample signal with a frequency higher than the\n provided value : there is no margin for lower frequencies.\n","sig":null,"attributes":[{"value":"/ In this mode an algorithm calculates the optimal value for the autoreload register and the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":144354,"byte_end":144448,"line_start":76,"line_end":76,"column_start":5,"column_end":99}},{"value":"/ prescaler register in order to be able to sample signal with a frequency higher than the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":144453,"byte_end":144545,"line_start":77,"line_end":77,"column_start":5,"column_end":97}},{"value":"/ provided value : there is no margin for lower frequencies.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":144550,"byte_end":144612,"line_start":78,"line_end":78,"column_start":5,"column_end":67}}]},{"kind":"StructVariant","id":{"krate":0,"index":766},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":144729,"byte_end":144738,"line_start":82,"line_end":82,"column_start":5,"column_end":14},"name":"RawValues","qualname":"::pwm_input::Configuration::RawValues","value":"Configuration::RawValues { arr, presc }","parent":{"krate":0,"index":755},"children":[],"decl_id":null,"docs":" In this mode, the provided arr and presc are directly programmed in the register.\n","sig":null,"attributes":[{"value":"/ In this mode, the provided arr and presc are directly programmed in the register.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":144639,"byte_end":144724,"line_start":81,"line_end":81,"column_start":5,"column_end":90}}]},{"kind":"Enum","id":{"krate":0,"index":755},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":143547,"byte_end":143560,"line_start":56,"line_end":56,"column_start":10,"column_end":23},"name":"Configuration","qualname":"::pwm_input::Configuration","value":"pub enum Configuration<T> where T: Into<Hertz> {\n\n    /// In this mode an algorithm calculates the optimal value for the autoreload register and the\n    /// prescaler register in order to be able to sample a wide range of frequency, at the expense\n    /// of resolution.\n    ///\n    /// The minimum frequency that can be sampled is 20% the provided frequency.\n    ///\n    /// Use this mode if you do not know what to choose.\n    Frequency(T),\n\n    /// In this mode an algorithm calculates the optimal value for the autoreload register and the\n    /// prescaler register in order to sample the duty cycle with a high resolution.\n    /// This will limit the frequency range where the timer can operate.\n    ///\n    /// The minimum frequency that can be sampled is 90% the provided frequency\n    DutyCycle(T),\n\n    /// In this mode an algorithm calculates the optimal value for the autoreload register and the\n    /// prescaler register in order to be able to sample signal with a frequency higher than the\n    /// provided value : there is no margin for lower frequencies.\n    RawFrequency(T),\n\n    /// In this mode, the provided arr and presc are directly programmed in the register.\n    RawValues {\n        arr: u16,\n        presc: u16,\n    },\n}","parent":null,"children":[{"krate":0,"index":757},{"krate":0,"index":760},{"krate":0,"index":763},{"krate":0,"index":766}],"decl_id":null,"docs":" Which frequency the timer will try to sample\n","sig":null,"attributes":[{"value":"/ Which frequency the timer will try to sample","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":143489,"byte_end":143537,"line_start":55,"line_end":55,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":770},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":144883,"byte_end":144892,"line_start":87,"line_end":87,"column_start":12,"column_end":21},"name":"pwm_input","qualname":"<Timer<TIM1>>::pwm_input","value":"pub fn pwm_input<REMAP, PINS,\n                 T>(Self, PINS, &mut MAPR, &mut DBG, Configuration<T>)\n-> PwmInput<TIM1, REMAP, PINS> where REMAP: Remap<Periph = TIM1>,\nPINS: Pins<REMAP>, T: Into<Hertz>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":776},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":145400,"byte_end":145409,"line_start":107,"line_end":107,"column_start":12,"column_end":21},"name":"pwm_input","qualname":"<Timer<TIM2>>::pwm_input","value":"pub fn pwm_input<REMAP, PINS,\n                 T>(Self, PINS, &mut MAPR, &mut DBG, Configuration<T>)\n-> PwmInput<TIM2, REMAP, PINS> where REMAP: Remap<Periph = TIM2>,\nPINS: Pins<REMAP>, T: Into<Hertz>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":782},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":145917,"byte_end":145926,"line_start":127,"line_end":127,"column_start":12,"column_end":21},"name":"pwm_input","qualname":"<Timer<TIM3>>::pwm_input","value":"pub fn pwm_input<REMAP, PINS,\n                 T>(Self, PINS, &mut MAPR, &mut DBG, Configuration<T>)\n-> PwmInput<TIM3, REMAP, PINS> where REMAP: Remap<Periph = TIM3>,\nPINS: Pins<REMAP>, T: Into<Hertz>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":146461,"byte_end":146470,"line_start":148,"line_end":148,"column_start":12,"column_end":21},"name":"pwm_input","qualname":"<Timer<TIM4>>::pwm_input","value":"pub fn pwm_input<REMAP, PINS,\n                 T>(Self, PINS, &mut MAPR, &mut DBG, Configuration<T>)\n-> PwmInput<TIM4, REMAP, PINS> where REMAP: Remap<Periph = TIM4>,\nPINS: Pins<REMAP>, T: Into<Hertz>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":795},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/qei.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"qei","qualname":"::qei","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/qei.rs","parent":null,"children":[{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":18345},{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":16487},{"krate":0,"index":16510},{"krate":0,"index":16508},{"krate":0,"index":16506},{"krate":0,"index":16511},{"krate":0,"index":16518},{"krate":0,"index":16516},{"krate":0,"index":16514},{"krate":0,"index":811},{"krate":0,"index":813},{"krate":0,"index":820},{"krate":0,"index":825},{"krate":0,"index":830},{"krate":0,"index":835},{"krate":0,"index":16519},{"krate":0,"index":16529},{"krate":0,"index":16535},{"krate":0,"index":16545},{"krate":0,"index":16551},{"krate":0,"index":16561},{"krate":0,"index":16567},{"krate":0,"index":16577}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":5089,"byte_end":5124,"line_start":165,"line_end":165,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":16488},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/qei.rs","byte_start":154238,"byte_end":154250,"line_start":27,"line_end":27,"column_start":5,"column_end":17},"name":"EncoderMode1","qualname":"::qei::SlaveMode::EncoderMode1","value":"SlaveMode::EncoderMode1","parent":{"krate":0,"index":16487},"children":[],"decl_id":null,"docs":" Counter counts up/down on TI2FP1 edge depending on TI1FP2 level.\n","sig":null,"attributes":[{"value":"/ Counter counts up/down on TI2FP1 edge depending on TI1FP2 level.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/qei.rs","byte_start":154165,"byte_end":154233,"line_start":26,"line_end":26,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":16491},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/qei.rs","byte_start":154354,"byte_end":154366,"line_start":29,"line_end":29,"column_start":5,"column_end":17},"name":"EncoderMode2","qualname":"::qei::SlaveMode::EncoderMode2","value":"SlaveMode::EncoderMode2","parent":{"krate":0,"index":16487},"children":[],"decl_id":null,"docs":" Encoder mode 2 - Counter counts up/down on TI1FP2 edge depending on TI2FP1 level.\n","sig":null,"attributes":[{"value":"/ Encoder mode 2 - Counter counts up/down on TI1FP2 edge depending on TI2FP1 level.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/qei.rs","byte_start":154264,"byte_end":154349,"line_start":28,"line_end":28,"column_start":5,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":16494},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/qei.rs","byte_start":154511,"byte_end":154523,"line_start":32,"line_end":32,"column_start":5,"column_end":17},"name":"EncoderMode3","qualname":"::qei::SlaveMode::EncoderMode3","value":"SlaveMode::EncoderMode3","parent":{"krate":0,"index":16487},"children":[],"decl_id":null,"docs":" Encoder mode 3 - Counter counts up/down on both TI1FP1 and TI2FP2 edges depending on the\n level of the other input.\n","sig":null,"attributes":[{"value":"/ Encoder mode 3 - Counter counts up/down on both TI1FP1 and TI2FP2 edges depending on the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/qei.rs","byte_start":154380,"byte_end":154472,"line_start":30,"line_end":30,"column_start":5,"column_end":97}},{"value":"/ level of the other input.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/qei.rs","byte_start":154477,"byte_end":154506,"line_start":31,"line_end":31,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":16497},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/qei.rs","byte_start":154683,"byte_end":154692,"line_start":35,"line_end":35,"column_start":5,"column_end":14},"name":"ResetMode","qualname":"::qei::SlaveMode::ResetMode","value":"SlaveMode::ResetMode","parent":{"krate":0,"index":16487},"children":[],"decl_id":null,"docs":" Reset Mode - Rising edge of the selected trigger input (TRGI) reinitializes the counter and\n generates an update of the registers.\n","sig":null,"attributes":[{"value":"/ Reset Mode - Rising edge of the selected trigger input (TRGI) reinitializes the counter and","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/qei.rs","byte_start":154537,"byte_end":154632,"line_start":33,"line_end":33,"column_start":5,"column_end":100}},{"value":"/ generates an update of the registers.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/qei.rs","byte_start":154637,"byte_end":154678,"line_start":34,"line_end":34,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":16500},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/qei.rs","byte_start":154861,"byte_end":154872,"line_start":38,"line_end":38,"column_start":5,"column_end":16},"name":"TriggerMode","qualname":"::qei::SlaveMode::TriggerMode","value":"SlaveMode::TriggerMode","parent":{"krate":0,"index":16487},"children":[],"decl_id":null,"docs":" Trigger Mode - The counter starts at a rising edge of the trigger TRGI (but it is not\n reset). Only the start of the counter is controlled.\n","sig":null,"attributes":[{"value":"/ Trigger Mode - The counter starts at a rising edge of the trigger TRGI (but it is not","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/qei.rs","byte_start":154706,"byte_end":154795,"line_start":36,"line_end":36,"column_start":5,"column_end":94}},{"value":"/ reset). Only the start of the counter is controlled.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/qei.rs","byte_start":154800,"byte_end":154856,"line_start":37,"line_end":37,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":16503},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/qei.rs","byte_start":154981,"byte_end":154999,"line_start":40,"line_end":40,"column_start":5,"column_end":23},"name":"ExternalClockMode1","qualname":"::qei::SlaveMode::ExternalClockMode1","value":"SlaveMode::ExternalClockMode1","parent":{"krate":0,"index":16487},"children":[],"decl_id":null,"docs":" External Clock Mode 1 - Rising edges of the selected trigger (TRGI) clock the counter.\n","sig":null,"attributes":[{"value":"/ External Clock Mode 1 - Rising edges of the selected trigger (TRGI) clock the counter.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/qei.rs","byte_start":154886,"byte_end":154976,"line_start":39,"line_end":39,"column_start":5,"column_end":95}}]},{"kind":"Enum","id":{"krate":0,"index":16487},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/qei.rs","byte_start":154149,"byte_end":154158,"line_start":25,"line_end":25,"column_start":10,"column_end":19},"name":"SlaveMode","qualname":"::qei::SlaveMode","value":"pub enum SlaveMode {\n\n    /// Counter counts up/down on TI2FP1 edge depending on TI1FP2 level.\n    EncoderMode1 = ,\n\n    /// Encoder mode 2 - Counter counts up/down on TI1FP2 edge depending on TI2FP1 level.\n    EncoderMode2 = ,\n\n    /// Encoder mode 3 - Counter counts up/down on both TI1FP1 and TI2FP2 edges depending on the\n    /// level of the other input.\n    EncoderMode3 = ,\n\n    /// Reset Mode - Rising edge of the selected trigger input (TRGI) reinitializes the counter and\n    /// generates an update of the registers.\n    ResetMode = ,\n\n    /// Trigger Mode - The counter starts at a rising edge of the trigger TRGI (but it is not\n    /// reset). Only the start of the counter is controlled.\n    TriggerMode = ,\n\n    /// External Clock Mode 1 - Rising edges of the selected trigger (TRGI) clock the counter.\n    ExternalClockMode1 = ,\n}","parent":null,"children":[{"krate":0,"index":16488},{"krate":0,"index":16491},{"krate":0,"index":16494},{"krate":0,"index":16497},{"krate":0,"index":16500},{"krate":0,"index":16503}],"decl_id":null,"docs":" SMS (Slave Mode Selection) register\n","sig":null,"attributes":[{"value":"/ SMS (Slave Mode Selection) register","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/qei.rs","byte_start":154070,"byte_end":154109,"line_start":23,"line_end":23,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":16511},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/qei.rs","byte_start":155254,"byte_end":155264,"line_start":48,"line_end":48,"column_start":12,"column_end":22},"name":"QeiOptions","qualname":"::qei::QeiOptions","value":"QeiOptions { slave_mode, auto_reload_value }","parent":null,"children":[{"krate":0,"index":16512},{"krate":0,"index":16513}],"decl_id":null,"docs":" Quadrature Encoder Interface (QEI) options","sig":null,"attributes":[{"value":"/ Quadrature Encoder Interface (QEI) options","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/qei.rs","byte_start":155012,"byte_end":155058,"line_start":43,"line_end":43,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/qei.rs","byte_start":155059,"byte_end":155062,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ The `Default` implementation provides a configuration for a 4-count pulse which counts from","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/qei.rs","byte_start":155063,"byte_end":155158,"line_start":45,"line_end":45,"column_start":1,"column_end":96}},{"value":"/ 0-65535. The counter wraps back to 0 on overflow.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/qei.rs","byte_start":155159,"byte_end":155212,"line_start":46,"line_end":46,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":16512},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/qei.rs","byte_start":155302,"byte_end":155312,"line_start":50,"line_end":50,"column_start":9,"column_end":19},"name":"slave_mode","qualname":"::qei::QeiOptions::slave_mode","value":"qei::SlaveMode","parent":{"krate":0,"index":16511},"children":[],"decl_id":null,"docs":" Encoder slave mode\n","sig":null,"attributes":[{"value":"/ Encoder slave mode","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/qei.rs","byte_start":155271,"byte_end":155293,"line_start":49,"line_end":49,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":16513},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/qei.rs","byte_start":155511,"byte_end":155528,"line_start":56,"line_end":56,"column_start":9,"column_end":26},"name":"auto_reload_value","qualname":"::qei::QeiOptions::auto_reload_value","value":"u16","parent":{"krate":0,"index":16511},"children":[],"decl_id":null,"docs":" Autoreload value","sig":null,"attributes":[{"value":"/ Autoreload value","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/qei.rs","byte_start":155330,"byte_end":155350,"line_start":52,"line_end":52,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/qei.rs","byte_start":155355,"byte_end":155358,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ This value allows the maximum count to be configured, up to 65535. Setting a lower value","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/qei.rs","byte_start":155363,"byte_end":155455,"line_start":54,"line_end":54,"column_start":5,"column_end":97}},{"value":"/ will overflow the counter to 0 sooner.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/qei.rs","byte_start":155460,"byte_end":155502,"line_start":55,"line_end":55,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":813},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/qei.rs","byte_start":155730,"byte_end":155733,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"Qei","qualname":"::qei::Qei","value":"Qei {  }","parent":null,"children":[{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":819}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":821},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/qei.rs","byte_start":155934,"byte_end":155937,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"qei","qualname":"<Timer<TIM1>>::qei","value":"pub fn qei<REMAP, PINS>(Self, PINS, &mut MAPR, QeiOptions)\n-> Qei<TIM1, REMAP, PINS> where REMAP: Remap<Periph = TIM1>, PINS: Pins<REMAP>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/qei.rs","byte_start":156351,"byte_end":156354,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"qei","qualname":"<Timer<TIM2>>::qei","value":"pub fn qei<REMAP, PINS>(Self, PINS, &mut MAPR, QeiOptions)\n-> Qei<TIM2, REMAP, PINS> where REMAP: Remap<Periph = TIM2>, PINS: Pins<REMAP>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":831},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/qei.rs","byte_start":156768,"byte_end":156771,"line_start":112,"line_end":112,"column_start":12,"column_end":15},"name":"qei","qualname":"<Timer<TIM3>>::qei","value":"pub fn qei<REMAP, PINS>(Self, PINS, &mut MAPR, QeiOptions)\n-> Qei<TIM3, REMAP, PINS> where REMAP: Remap<Periph = TIM3>, PINS: Pins<REMAP>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":836},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/qei.rs","byte_start":157212,"byte_end":157215,"line_start":131,"line_end":131,"column_start":12,"column_end":15},"name":"qei","qualname":"<Timer<TIM4>>::qei","value":"pub fn qei<REMAP, PINS>(Self, PINS, &mut MAPR, QeiOptions)\n-> Qei<TIM4, REMAP, PINS> where REMAP: Remap<Periph = TIM4>, PINS: Pins<REMAP>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":841},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rcc","qualname":"::rcc","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","parent":null,"children":[{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":18379},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":853},{"krate":0,"index":855},{"krate":0,"index":861},{"krate":0,"index":863},{"krate":0,"index":865},{"krate":0,"index":867},{"krate":0,"index":870},{"krate":0,"index":873},{"krate":0,"index":875},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":886},{"krate":0,"index":909},{"krate":0,"index":911},{"krate":0,"index":16583},{"krate":0,"index":16593},{"krate":0,"index":16592},{"krate":0,"index":915},{"krate":0,"index":926},{"krate":0,"index":929},{"krate":0,"index":931},{"krate":0,"index":934},{"krate":0,"index":937},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":944},{"krate":0,"index":16595},{"krate":0,"index":16597},{"krate":0,"index":16602},{"krate":0,"index":16606},{"krate":0,"index":16608},{"krate":0,"index":16613},{"krate":0,"index":16617},{"krate":0,"index":16619},{"krate":0,"index":16624},{"krate":0,"index":16628},{"krate":0,"index":16630},{"krate":0,"index":16635},{"krate":0,"index":16639},{"krate":0,"index":16641},{"krate":0,"index":16646},{"krate":0,"index":16650},{"krate":0,"index":16652},{"krate":0,"index":16657},{"krate":0,"index":16661},{"krate":0,"index":16663},{"krate":0,"index":16668},{"krate":0,"index":16672},{"krate":0,"index":16674},{"krate":0,"index":16679},{"krate":0,"index":16683},{"krate":0,"index":16685},{"krate":0,"index":16690},{"krate":0,"index":16694},{"krate":0,"index":16696},{"krate":0,"index":16701},{"krate":0,"index":16705},{"krate":0,"index":16707},{"krate":0,"index":16712},{"krate":0,"index":16716},{"krate":0,"index":16718},{"krate":0,"index":16723},{"krate":0,"index":16727},{"krate":0,"index":16729},{"krate":0,"index":16734},{"krate":0,"index":16738},{"krate":0,"index":16740},{"krate":0,"index":16745},{"krate":0,"index":16749},{"krate":0,"index":16751},{"krate":0,"index":16756},{"krate":0,"index":16760},{"krate":0,"index":16762},{"krate":0,"index":16767},{"krate":0,"index":16771},{"krate":0,"index":16773},{"krate":0,"index":16778},{"krate":0,"index":16782},{"krate":0,"index":16784},{"krate":0,"index":16789},{"krate":0,"index":16791},{"krate":0,"index":16796},{"krate":0,"index":16798},{"krate":0,"index":16803},{"krate":0,"index":16805},{"krate":0,"index":16810},{"krate":0,"index":16814},{"krate":0,"index":16816},{"krate":0,"index":16821},{"krate":0,"index":16825},{"krate":0,"index":16827},{"krate":0,"index":16832},{"krate":0,"index":16836},{"krate":0,"index":16838},{"krate":0,"index":16843},{"krate":0,"index":16847},{"krate":0,"index":16849},{"krate":0,"index":16854}],"decl_id":null,"docs":" # Reset & Control Clock\n","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":5138,"byte_end":5173,"line_start":167,"line_end":167,"column_start":1,"column_end":36}},{"value":"/ # Reset & Control Clock","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":159717,"byte_end":159744,"line_start":1,"line_end":1,"column_start":1,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":851},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":159967,"byte_end":159973,"line_start":14,"line_end":14,"column_start":11,"column_end":17},"name":"RccExt","qualname":"::rcc::RccExt","value":"RccExt","parent":null,"children":[{"krate":0,"index":852}],"decl_id":null,"docs":" Extension trait that constrains the `RCC` peripheral\n","sig":null,"attributes":[{"value":"/ Extension trait that constrains the `RCC` peripheral","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":159900,"byte_end":159956,"line_start":13,"line_end":13,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":160070,"byte_end":160079,"line_start":16,"line_end":16,"column_start":8,"column_end":17},"name":"constrain","qualname":"::rcc::RccExt::constrain","value":"pub fn constrain(Self) -> Rcc","parent":{"krate":0,"index":851},"children":[],"decl_id":null,"docs":" Constrains the `RCC` peripheral so it plays nicely with the other abstractions\n","sig":null,"attributes":[{"value":"/ Constrains the `RCC` peripheral so it plays nicely with the other abstractions","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":159980,"byte_end":160062,"line_start":15,"line_end":15,"column_start":5,"column_end":87}}]},{"kind":"Struct","id":{"krate":0,"index":855},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":160575,"byte_end":160578,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"Rcc","qualname":"::rcc::Rcc","value":"Rcc { ahb, apb1, apb2, cfgr, bkp }","parent":null,"children":[{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860}],"decl_id":null,"docs":" Constrained RCC peripheral\n","sig":null,"attributes":[{"value":"/ Constrained RCC peripheral","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":160533,"byte_end":160563,"line_start":38,"line_end":38,"column_start":1,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":856},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":160639,"byte_end":160642,"line_start":41,"line_end":41,"column_start":9,"column_end":12},"name":"ahb","qualname":"::rcc::Rcc::ahb","value":"rcc::AHB","parent":{"krate":0,"index":855},"children":[],"decl_id":null,"docs":" AMBA High-performance Bus (AHB) registers\n","sig":null,"attributes":[{"value":"/ AMBA High-performance Bus (AHB) registers","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":160585,"byte_end":160630,"line_start":40,"line_end":40,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":857},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":160708,"byte_end":160712,"line_start":43,"line_end":43,"column_start":9,"column_end":13},"name":"apb1","qualname":"::rcc::Rcc::apb1","value":"rcc::APB1","parent":{"krate":0,"index":855},"children":[],"decl_id":null,"docs":" Advanced Peripheral Bus 1 (APB1) registers\n","sig":null,"attributes":[{"value":"/ Advanced Peripheral Bus 1 (APB1) registers","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":160653,"byte_end":160699,"line_start":42,"line_end":42,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":858},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":160779,"byte_end":160783,"line_start":45,"line_end":45,"column_start":9,"column_end":13},"name":"apb2","qualname":"::rcc::Rcc::apb2","value":"rcc::APB2","parent":{"krate":0,"index":855},"children":[],"decl_id":null,"docs":" Advanced Peripheral Bus 2 (APB2) registers\n","sig":null,"attributes":[{"value":"/ Advanced Peripheral Bus 2 (APB2) registers","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":160724,"byte_end":160770,"line_start":44,"line_end":44,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":859},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":160799,"byte_end":160803,"line_start":46,"line_end":46,"column_start":9,"column_end":13},"name":"cfgr","qualname":"::rcc::Rcc::cfgr","value":"rcc::CFGR","parent":{"krate":0,"index":855},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":860},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":160819,"byte_end":160822,"line_start":47,"line_end":47,"column_start":9,"column_end":12},"name":"bkp","qualname":"::rcc::Rcc::bkp","value":"rcc::BKP","parent":{"krate":0,"index":855},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":861},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":161085,"byte_end":161088,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"AHB","qualname":"::rcc::AHB","value":"AHB {  }","parent":null,"children":[{"krate":0,"index":862}],"decl_id":null,"docs":" AMBA High-performance Bus (AHB) registers","sig":null,"attributes":[{"value":"/ AMBA High-performance Bus (AHB) registers","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":160832,"byte_end":160877,"line_start":50,"line_end":50,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":160878,"byte_end":160881,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Aquired through the `Rcc` registers:","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":160882,"byte_end":160922,"line_start":52,"line_end":52,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":160923,"byte_end":160926,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":160927,"byte_end":160938,"line_start":54,"line_end":54,"column_start":1,"column_end":12}},{"value":"/ let dp = pac::Peripherals::take().unwrap();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":160939,"byte_end":160986,"line_start":55,"line_end":55,"column_start":1,"column_end":48}},{"value":"/ let mut rcc = dp.RCC.constrain();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":160987,"byte_end":161024,"line_start":56,"line_end":56,"column_start":1,"column_end":38}},{"value":"/ function_that_uses_ahb(&mut rcc.ahb)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":161025,"byte_end":161065,"line_start":57,"line_end":57,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":161066,"byte_end":161073,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":865},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":161601,"byte_end":161605,"line_start":81,"line_end":81,"column_start":12,"column_end":16},"name":"APB1","qualname":"::rcc::APB1","value":"APB1 {  }","parent":null,"children":[{"krate":0,"index":866}],"decl_id":null,"docs":" Advanced Peripheral Bus 1 (APB1) registers","sig":null,"attributes":[{"value":"/ Advanced Peripheral Bus 1 (APB1) registers","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":161345,"byte_end":161391,"line_start":72,"line_end":72,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":161392,"byte_end":161395,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ Aquired through the `Rcc` registers:","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":161396,"byte_end":161436,"line_start":74,"line_end":74,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":161437,"byte_end":161440,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":161441,"byte_end":161452,"line_start":76,"line_end":76,"column_start":1,"column_end":12}},{"value":"/ let dp = pac::Peripherals::take().unwrap();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":161453,"byte_end":161500,"line_start":77,"line_end":77,"column_start":1,"column_end":48}},{"value":"/ let mut rcc = dp.RCC.constrain();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":161501,"byte_end":161538,"line_start":78,"line_end":78,"column_start":1,"column_end":38}},{"value":"/ function_that_uses_apb1(&mut rcc.apb1)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":161539,"byte_end":161581,"line_start":79,"line_end":79,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":161582,"byte_end":161589,"line_start":80,"line_end":80,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":871},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":162078,"byte_end":162087,"line_start":99,"line_end":99,"column_start":12,"column_end":21},"name":"set_pwren","qualname":"<APB1>::set_pwren","value":"pub fn set_pwren(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Set power interface clock (PWREN) bit in RCC_APB1ENR\n","sig":null,"attributes":[{"value":"/ Set power interface clock (PWREN) bit in RCC_APB1ENR","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":162010,"byte_end":162066,"line_start":98,"line_end":98,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":873},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":162422,"byte_end":162426,"line_start":113,"line_end":113,"column_start":12,"column_end":16},"name":"APB2","qualname":"::rcc::APB2","value":"APB2 {  }","parent":null,"children":[{"krate":0,"index":874}],"decl_id":null,"docs":" Advanced Peripheral Bus 2 (APB2) registers","sig":null,"attributes":[{"value":"/ Advanced Peripheral Bus 2 (APB2) registers","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":162165,"byte_end":162211,"line_start":104,"line_end":104,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":162212,"byte_end":162215,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ Aquired through the `Rcc` registers:","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":162216,"byte_end":162256,"line_start":106,"line_end":106,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":162257,"byte_end":162260,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":162261,"byte_end":162272,"line_start":108,"line_end":108,"column_start":1,"column_end":12}},{"value":"/ let dp = pac::Peripherals::take().unwrap();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":162273,"byte_end":162320,"line_start":109,"line_end":109,"column_start":1,"column_end":48}},{"value":"/ let mut rcc = dp.RCC.constrain();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":162321,"byte_end":162358,"line_start":110,"line_end":110,"column_start":1,"column_end":38}},{"value":"/ function_that_uses_apb2(&mut rcc.apb2);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":162359,"byte_end":162402,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":162403,"byte_end":162410,"line_start":112,"line_end":112,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":879},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":163231,"byte_end":163235,"line_start":140,"line_end":140,"column_start":12,"column_end":16},"name":"CFGR","qualname":"::rcc::CFGR","value":"CFGR {  }","parent":null,"children":[{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885}],"decl_id":null,"docs":" Clock configuration register (CFGR)","sig":null,"attributes":[{"value":"/ Clock configuration register (CFGR)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":162850,"byte_end":162889,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":162890,"byte_end":162893,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ Used to configure the frequencies of the clocks present in the processor.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":162894,"byte_end":162971,"line_start":133,"line_end":133,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":162972,"byte_end":162975,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ After setting all frequencies, call the [freeze](#method.freeze) function to","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":162976,"byte_end":163056,"line_start":135,"line_end":135,"column_start":1,"column_end":81}},{"value":"/ apply the configuration.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":163057,"byte_end":163085,"line_start":136,"line_end":136,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":163086,"byte_end":163089,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ **NOTE**: Currently, it is not guaranteed that the exact frequencies selected will be","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":163090,"byte_end":163179,"line_start":138,"line_end":138,"column_start":1,"column_end":90}},{"value":"/ used, only frequencies close to it.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":163180,"byte_end":163219,"line_start":139,"line_end":139,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":163683,"byte_end":163690,"line_start":153,"line_end":153,"column_start":12,"column_end":19},"name":"use_hse","qualname":"<CFGR>::use_hse","value":"pub fn use_hse<F>(Self, F) -> Self where F: Into<Hertz>","parent":null,"children":[],"decl_id":null,"docs":" Uses HSE (external oscillator) instead of HSI (internal RC oscillator) as the clock source.\n Will result in a hang if an external oscillator is not connected or it fails to start.\n The frequency specified must be the frequency of the external oscillator\n","sig":null,"attributes":[{"value":"/ Uses HSE (external oscillator) instead of HSI (internal RC oscillator) as the clock source.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":163400,"byte_end":163495,"line_start":150,"line_end":150,"column_start":5,"column_end":100}},{"value":"/ Will result in a hang if an external oscillator is not connected or it fails to start.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":163500,"byte_end":163590,"line_start":151,"line_end":151,"column_start":5,"column_end":95}},{"value":"/ The frequency specified must be the frequency of the external oscillator","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":163595,"byte_end":163671,"line_start":152,"line_end":152,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":163886,"byte_end":163890,"line_start":162,"line_end":162,"column_start":12,"column_end":16},"name":"hclk","qualname":"<CFGR>::hclk","value":"pub fn hclk<F>(Self, F) -> Self where F: Into<Hertz>","parent":null,"children":[],"decl_id":null,"docs":" Sets the desired frequency for the HCLK clock\n","sig":null,"attributes":[{"value":"/ Sets the desired frequency for the HCLK clock","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":163825,"byte_end":163874,"line_start":161,"line_end":161,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":164088,"byte_end":164093,"line_start":171,"line_end":171,"column_start":12,"column_end":17},"name":"pclk1","qualname":"<CFGR>::pclk1","value":"pub fn pclk1<F>(Self, F) -> Self where F: Into<Hertz>","parent":null,"children":[],"decl_id":null,"docs":" Sets the desired frequency for the PCKL1 clock\n","sig":null,"attributes":[{"value":"/ Sets the desired frequency for the PCKL1 clock","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":164026,"byte_end":164076,"line_start":170,"line_end":170,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":164292,"byte_end":164297,"line_start":180,"line_end":180,"column_start":12,"column_end":17},"name":"pclk2","qualname":"<CFGR>::pclk2","value":"pub fn pclk2<F>(Self, F) -> Self where F: Into<Hertz>","parent":null,"children":[],"decl_id":null,"docs":" Sets the desired frequency for the PCLK2 clock\n","sig":null,"attributes":[{"value":"/ Sets the desired frequency for the PCLK2 clock","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":164230,"byte_end":164280,"line_start":179,"line_end":179,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":895},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":164497,"byte_end":164503,"line_start":189,"line_end":189,"column_start":12,"column_end":18},"name":"sysclk","qualname":"<CFGR>::sysclk","value":"pub fn sysclk<F>(Self, F) -> Self where F: Into<Hertz>","parent":null,"children":[],"decl_id":null,"docs":" Sets the desired frequency for the SYSCLK clock\n","sig":null,"attributes":[{"value":"/ Sets the desired frequency for the SYSCLK clock","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":164434,"byte_end":164485,"line_start":188,"line_end":188,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":897},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":164704,"byte_end":164710,"line_start":198,"line_end":198,"column_start":12,"column_end":18},"name":"adcclk","qualname":"<CFGR>::adcclk","value":"pub fn adcclk<F>(Self, F) -> Self where F: Into<Hertz>","parent":null,"children":[],"decl_id":null,"docs":" Sets the desired frequency for the ADCCLK clock\n","sig":null,"attributes":[{"value":"/ Sets the desired frequency for the ADCCLK clock","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":164641,"byte_end":164692,"line_start":197,"line_end":197,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":899},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":165330,"byte_end":165336,"line_start":219,"line_end":219,"column_start":12,"column_end":18},"name":"freeze","qualname":"<CFGR>::freeze","value":"pub fn freeze(Self, &mut ACR) -> Clocks","parent":null,"children":[],"decl_id":null,"docs":" Applies the clock configuration and returns a `Clocks` struct that signifies that the\n clocks are frozen, and contains the frequencies used. After this function is called,\n the clocks can not change","sig":null,"attributes":[{"value":"/ Applies the clock configuration and returns a `Clocks` struct that signifies that the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":164848,"byte_end":164937,"line_start":206,"line_end":206,"column_start":5,"column_end":94}},{"value":"/ clocks are frozen, and contains the frequencies used. After this function is called,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":164942,"byte_end":165030,"line_start":207,"line_end":207,"column_start":5,"column_end":93}},{"value":"/ the clocks can not change","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":165035,"byte_end":165064,"line_start":208,"line_end":208,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":165069,"byte_end":165072,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Usage:","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":165077,"byte_end":165087,"line_start":210,"line_end":210,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":165092,"byte_end":165095,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":165100,"byte_end":165111,"line_start":212,"line_end":212,"column_start":5,"column_end":16}},{"value":"/ let dp = pac::Peripherals::take().unwrap();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":165116,"byte_end":165163,"line_start":213,"line_end":213,"column_start":5,"column_end":52}},{"value":"/ let mut flash = dp.FLASH.constrain();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":165168,"byte_end":165209,"line_start":214,"line_end":214,"column_start":5,"column_end":46}},{"value":"/ let mut rcc = dp.RCC.constrain();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":165214,"byte_end":165251,"line_start":215,"line_end":215,"column_start":5,"column_end":42}},{"value":"/ let clocks = rcc.cfgr.freeze(&mut flash.acr);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":165256,"byte_end":165305,"line_start":216,"line_end":216,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":165310,"byte_end":165317,"line_start":217,"line_end":217,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":909},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":171835,"byte_end":171838,"line_start":444,"line_end":444,"column_start":12,"column_end":15},"name":"BKP","qualname":"::rcc::BKP","value":"BKP {  }","parent":null,"children":[{"krate":0,"index":910}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":912},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":171945,"byte_end":171954,"line_start":450,"line_end":450,"column_start":12,"column_end":21},"name":"constrain","qualname":"<BKP>::constrain","value":"pub fn constrain(Self, crate::pac::BKP, &mut APB1, &mut PWR) -> BackupDomain","parent":null,"children":[],"decl_id":null,"docs":" Enables write access to the registers in the backup domain\n","sig":null,"attributes":[{"value":"/ Enables write access to the registers in the backup domain","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":171871,"byte_end":171933,"line_start":449,"line_end":449,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":16583},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":172892,"byte_end":172898,"line_start":477,"line_end":477,"column_start":12,"column_end":18},"name":"Clocks","qualname":"::rcc::Clocks","value":"Clocks {  }","parent":null,"children":[{"krate":0,"index":16584},{"krate":0,"index":16585},{"krate":0,"index":16586},{"krate":0,"index":16587},{"krate":0,"index":16588},{"krate":0,"index":16589},{"krate":0,"index":16590},{"krate":0,"index":16591}],"decl_id":null,"docs":" Frozen clock frequencies","sig":null,"attributes":[{"value":"/ Frozen clock frequencies","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":172332,"byte_end":172360,"line_start":462,"line_end":462,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":172361,"byte_end":172364,"line_start":463,"line_end":463,"column_start":1,"column_end":4}},{"value":"/ The existence of this value indicates that the clock configuration can no longer be changed","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":172365,"byte_end":172460,"line_start":464,"line_end":464,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":172461,"byte_end":172464,"line_start":465,"line_end":465,"column_start":1,"column_end":4}},{"value":"/ To acquire it, use the freeze function on the `rcc.cfgr` register. If desired, you can adjust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":172465,"byte_end":172562,"line_start":466,"line_end":466,"column_start":1,"column_end":98}},{"value":"/ the frequencies using the methods on [cfgr](struct.CFGR.html) before calling freeze.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":172563,"byte_end":172651,"line_start":467,"line_end":467,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":172652,"byte_end":172655,"line_start":468,"line_end":468,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":172656,"byte_end":172667,"line_start":469,"line_end":469,"column_start":1,"column_end":12}},{"value":"/ let dp = pac::Peripherals::take().unwrap();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":172668,"byte_end":172715,"line_start":470,"line_end":470,"column_start":1,"column_end":48}},{"value":"/ let mut rcc = dp.RCC.constrain();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":172716,"byte_end":172753,"line_start":471,"line_end":471,"column_start":1,"column_end":38}},{"value":"/ let mut flash = dp.FLASH.constrain();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":172754,"byte_end":172795,"line_start":472,"line_end":472,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":172796,"byte_end":172799,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ let clocks = rcc.cfgr.freeze(&mut flash.acr);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":172800,"byte_end":172849,"line_start":474,"line_end":474,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":172850,"byte_end":172857,"line_start":475,"line_end":475,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":173115,"byte_end":173119,"line_start":490,"line_end":490,"column_start":12,"column_end":16},"name":"hclk","qualname":"<Clocks>::hclk","value":"pub fn hclk(&Self) -> Hertz","parent":null,"children":[],"decl_id":null,"docs":" Returns the frequency of the AHB\n","sig":null,"attributes":[{"value":"/ Returns the frequency of the AHB","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":173067,"byte_end":173103,"line_start":489,"line_end":489,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":917},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":173216,"byte_end":173221,"line_start":495,"line_end":495,"column_start":12,"column_end":17},"name":"pclk1","qualname":"<Clocks>::pclk1","value":"pub fn pclk1(&Self) -> Hertz","parent":null,"children":[],"decl_id":null,"docs":" Returns the frequency of the APB1\n","sig":null,"attributes":[{"value":"/ Returns the frequency of the APB1","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":173167,"byte_end":173204,"line_start":494,"line_end":494,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":918},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":173319,"byte_end":173324,"line_start":500,"line_end":500,"column_start":12,"column_end":17},"name":"pclk2","qualname":"<Clocks>::pclk2","value":"pub fn pclk2(&Self) -> Hertz","parent":null,"children":[],"decl_id":null,"docs":" Returns the frequency of the APB2\n","sig":null,"attributes":[{"value":"/ Returns the frequency of the APB2","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":173270,"byte_end":173307,"line_start":499,"line_end":499,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":919},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":173429,"byte_end":173438,"line_start":505,"line_end":505,"column_start":12,"column_end":21},"name":"pclk1_tim","qualname":"<Clocks>::pclk1_tim","value":"pub fn pclk1_tim(&Self) -> Hertz","parent":null,"children":[],"decl_id":null,"docs":" Returns the frequency of the APB1 Timers\n","sig":null,"attributes":[{"value":"/ Returns the frequency of the APB1 Timers","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":173373,"byte_end":173417,"line_start":504,"line_end":504,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":920},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":173592,"byte_end":173601,"line_start":510,"line_end":510,"column_start":12,"column_end":21},"name":"pclk2_tim","qualname":"<Clocks>::pclk2_tim","value":"pub fn pclk2_tim(&Self) -> Hertz","parent":null,"children":[],"decl_id":null,"docs":" Returns the frequency of the APB2 Timers\n","sig":null,"attributes":[{"value":"/ Returns the frequency of the APB2 Timers","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":173536,"byte_end":173580,"line_start":509,"line_end":509,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":923},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":173931,"byte_end":173937,"line_start":525,"line_end":525,"column_start":12,"column_end":18},"name":"sysclk","qualname":"<Clocks>::sysclk","value":"pub fn sysclk(&Self) -> Hertz","parent":null,"children":[],"decl_id":null,"docs":" Returns the system (core) frequency\n","sig":null,"attributes":[{"value":"/ Returns the system (core) frequency","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":173880,"byte_end":173919,"line_start":524,"line_end":524,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":924},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":174034,"byte_end":174040,"line_start":530,"line_end":530,"column_start":12,"column_end":18},"name":"adcclk","qualname":"<Clocks>::adcclk","value":"pub fn adcclk(&Self) -> Hertz","parent":null,"children":[],"decl_id":null,"docs":" Returns the adc clock frequency\n","sig":null,"attributes":[{"value":"/ Returns the adc clock frequency","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":173987,"byte_end":174022,"line_start":529,"line_end":529,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":174180,"byte_end":174192,"line_start":535,"line_end":535,"column_start":12,"column_end":24},"name":"usbclk_valid","qualname":"<Clocks>::usbclk_valid","value":"pub fn usbclk_valid(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the USBCLK clock frequency is valid for the USB peripheral\n","sig":null,"attributes":[{"value":"/ Returns whether the USBCLK clock frequency is valid for the USB peripheral","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":174090,"byte_end":174168,"line_start":534,"line_end":534,"column_start":5,"column_end":83}}]},{"kind":"Trait","id":{"krate":0,"index":926},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":174255,"byte_end":174265,"line_start":540,"line_end":540,"column_start":11,"column_end":21},"name":"GetBusFreq","qualname":"::rcc::GetBusFreq","value":"GetBusFreq","parent":null,"children":[{"krate":0,"index":927},{"krate":0,"index":928}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":174275,"byte_end":174288,"line_start":541,"line_end":541,"column_start":8,"column_end":21},"name":"get_frequency","qualname":"::rcc::GetBusFreq::get_frequency","value":"pub fn get_frequency(&Clocks) -> Hertz","parent":{"krate":0,"index":926},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":174323,"byte_end":174342,"line_start":542,"line_end":542,"column_start":8,"column_end":27},"name":"get_timer_frequency","qualname":"::rcc::GetBusFreq::get_timer_frequency","value":"pub fn get_timer_frequency(&Clocks) -> Hertz","parent":{"krate":0,"index":926},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":938},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":174983,"byte_end":174989,"line_start":573,"line_end":573,"column_start":15,"column_end":21},"name":"RccBus","qualname":"::rcc::sealed::RccBus","value":"RccBus","parent":null,"children":[{"krate":0,"index":939}],"decl_id":null,"docs":" Bus associated to peripheral\n","sig":null,"attributes":[{"value":"/ Bus associated to peripheral","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":174936,"byte_end":174968,"line_start":572,"line_end":572,"column_start":5,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":939},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":175027,"byte_end":175030,"line_start":575,"line_end":575,"column_start":14,"column_end":17},"name":"Bus","qualname":"::rcc::sealed::RccBus::Bus","value":"type Bus;","parent":{"krate":0,"index":938},"children":[],"decl_id":null,"docs":" Bus type;\n","sig":null,"attributes":[{"value":"/ Bus type;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":175000,"byte_end":175013,"line_start":574,"line_end":574,"column_start":9,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":941},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":175101,"byte_end":175107,"line_start":581,"line_end":581,"column_start":11,"column_end":17},"name":"Enable","qualname":"::rcc::Enable","value":"Enable: RccBus","parent":null,"children":[{"krate":0,"index":942},{"krate":0,"index":943}],"decl_id":null,"docs":" Enable/disable peripheral\n","sig":null,"attributes":[{"value":"/ Enable/disable peripheral","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":175061,"byte_end":175090,"line_start":580,"line_end":580,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":175125,"byte_end":175131,"line_start":582,"line_end":582,"column_start":8,"column_end":14},"name":"enable","qualname":"::rcc::Enable::enable","value":"pub fn enable(&mut Self::Bus)","parent":{"krate":0,"index":941},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":943},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":175161,"byte_end":175168,"line_start":583,"line_end":583,"column_start":8,"column_end":15},"name":"disable","qualname":"::rcc::Enable::disable","value":"pub fn disable(&mut Self::Bus)","parent":{"krate":0,"index":941},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":944},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":175225,"byte_end":175230,"line_start":587,"line_end":587,"column_start":11,"column_end":16},"name":"Reset","qualname":"::rcc::Reset","value":"Reset: RccBus","parent":null,"children":[{"krate":0,"index":945}],"decl_id":null,"docs":" Reset peripheral\n","sig":null,"attributes":[{"value":"/ Reset peripheral","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":175194,"byte_end":175214,"line_start":586,"line_end":586,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":945},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":175248,"byte_end":175253,"line_start":588,"line_end":588,"column_start":8,"column_end":13},"name":"reset","qualname":"::rcc::Reset::reset","value":"pub fn reset(&mut Self::Bus)","parent":{"krate":0,"index":944},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":948},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rtc.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rtc","qualname":"::rtc","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rtc.rs","parent":null,"children":[{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":18391},{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":958}],"decl_id":null,"docs":"  Real time clock","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":5187,"byte_end":5222,"line_start":169,"line_end":169,"column_start":1,"column_end":36}},{"value":"*\n  Real time clock\n\n  A continuously running clock that counts seconds. It is part of the backup domain which means\n  that the counter is not affected by system resets or standby mode. If Vbat is connected, it is\n  not reset even if the rest of the device is powered off. This allows it to be used to wake the\n  CPU when it is in low power mode.\n\n  Since it is part of the backup domain, write access to it must be enabled before the RTC can be\n  used. See `backup_domain` for more details.\n\n  See examples/rtc.rs and examples/blinky_rtc.rs for usage examples.\n*/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rtc.rs","byte_start":179260,"byte_end":179826,"line_start":1,"line_end":13,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":956},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rtc.rs","byte_start":180111,"byte_end":180114,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"Rtc","qualname":"::rtc::Rtc","value":"Rtc {  }","parent":null,"children":[{"krate":0,"index":957}],"decl_id":null,"docs":"  Interface to the real time clock\n","sig":null,"attributes":[{"value":"*\n  Interface to the real time clock\n*/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rtc.rs","byte_start":180058,"byte_end":180099,"line_start":25,"line_end":27,"column_start":1,"column_end":3}}]},{"kind":"Method","id":{"krate":0,"index":959},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rtc.rs","byte_start":180268,"byte_end":180271,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"rtc","qualname":"<Rtc>::rtc","value":"pub fn rtc(RTC, &mut BackupDomain) -> Self","parent":null,"children":[],"decl_id":null,"docs":"      Initialises the RTC. The `BackupDomain` struct is created by\n      `Rcc.bkp.constrain()`.\n","sig":null,"attributes":[{"value":"*\n      Initialises the RTC. The `BackupDomain` struct is created by\n      `Rcc.bkp.constrain()`.\n    */","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rtc.rs","byte_start":180150,"byte_end":180256,"line_start":33,"line_end":36,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":965},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rtc.rs","byte_start":181461,"byte_end":181477,"line_start":74,"line_end":74,"column_start":12,"column_end":28},"name":"select_frequency","qualname":"<Rtc>::select_frequency","value":"pub fn select_frequency<impl Into<Hertz>: Into<Hertz>>(&mut Self,\n                                                       impl Into<Hertz>)","parent":null,"children":[],"decl_id":null,"docs":" Selects the frequency of the RTC Timer\n NOTE: Maximum frequency of 16384 Hz using the internal LSE\n","sig":null,"attributes":[{"value":"/ Selects the frequency of the RTC Timer","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rtc.rs","byte_start":181340,"byte_end":181382,"line_start":72,"line_end":72,"column_start":5,"column_end":47}},{"value":"/ NOTE: Maximum frequency of 16384 Hz using the internal LSE","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rtc.rs","byte_start":181387,"byte_end":181449,"line_start":73,"line_end":73,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":970},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rtc.rs","byte_start":182121,"byte_end":182129,"line_start":91,"line_end":91,"column_start":12,"column_end":20},"name":"set_time","qualname":"<Rtc>::set_time","value":"pub fn set_time(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Set the current RTC counter value to the specified amount\n","sig":null,"attributes":[{"value":"/ Set the current RTC counter value to the specified amount","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rtc.rs","byte_start":182048,"byte_end":182109,"line_start":90,"line_end":90,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":974},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rtc.rs","byte_start":182575,"byte_end":182584,"line_start":107,"line_end":107,"column_start":12,"column_end":21},"name":"set_alarm","qualname":"<Rtc>::set_alarm","value":"pub fn set_alarm(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":"      Sets the time at which an alarm will be triggered","sig":null,"attributes":[{"value":"*\n      Sets the time at which an alarm will be triggered\n\n      This also clears the alarm flag if it is set\n    */","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rtc.rs","byte_start":182445,"byte_end":182563,"line_start":102,"line_end":106,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rtc.rs","byte_start":183225,"byte_end":183237,"line_start":127,"line_end":127,"column_start":12,"column_end":24},"name":"listen_alarm","qualname":"<Rtc>::listen_alarm","value":"pub fn listen_alarm(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Enables the RTCALARM interrupt\n","sig":null,"attributes":[{"value":"/ Enables the RTCALARM interrupt","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rtc.rs","byte_start":183179,"byte_end":183213,"line_start":126,"line_end":126,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":981},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rtc.rs","byte_start":183446,"byte_end":183460,"line_start":135,"line_end":135,"column_start":12,"column_end":26},"name":"unlisten_alarm","qualname":"<Rtc>::unlisten_alarm","value":"pub fn unlisten_alarm(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Disables the RTCALARM interrupt\n","sig":null,"attributes":[{"value":"/ Disables the RTCALARM interrupt","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rtc.rs","byte_start":183399,"byte_end":183434,"line_start":134,"line_end":134,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":984},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rtc.rs","byte_start":183666,"byte_end":183678,"line_start":143,"line_end":143,"column_start":12,"column_end":24},"name":"current_time","qualname":"<Rtc>::current_time","value":"pub fn current_time(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Reads the current counter\n","sig":null,"attributes":[{"value":"/ Reads the current counter","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rtc.rs","byte_start":183625,"byte_end":183654,"line_start":142,"line_end":142,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":985},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rtc.rs","byte_start":183931,"byte_end":183945,"line_start":151,"line_end":151,"column_start":12,"column_end":26},"name":"listen_seconds","qualname":"<Rtc>::listen_seconds","value":"pub fn listen_seconds(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Enables the RTC second interrupt\n","sig":null,"attributes":[{"value":"/ Enables the RTC second interrupt","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rtc.rs","byte_start":183883,"byte_end":183919,"line_start":150,"line_end":150,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rtc.rs","byte_start":184097,"byte_end":184113,"line_start":156,"line_end":156,"column_start":12,"column_end":28},"name":"unlisten_seconds","qualname":"<Rtc>::unlisten_seconds","value":"pub fn unlisten_seconds(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Disables the RTC second interrupt\n","sig":null,"attributes":[{"value":"/ Disables the RTC second interrupt","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rtc.rs","byte_start":184048,"byte_end":184085,"line_start":155,"line_end":155,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rtc.rs","byte_start":184270,"byte_end":184287,"line_start":161,"line_end":161,"column_start":12,"column_end":29},"name":"clear_second_flag","qualname":"<Rtc>::clear_second_flag","value":"pub fn clear_second_flag(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the RTC second interrupt flag\n","sig":null,"attributes":[{"value":"/ Clears the RTC second interrupt flag","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rtc.rs","byte_start":184218,"byte_end":184258,"line_start":160,"line_end":160,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":994},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rtc.rs","byte_start":184442,"byte_end":184458,"line_start":166,"line_end":166,"column_start":12,"column_end":28},"name":"clear_alarm_flag","qualname":"<Rtc>::clear_alarm_flag","value":"pub fn clear_alarm_flag(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the RTC alarm interrupt flag\n","sig":null,"attributes":[{"value":"/ Clears the RTC alarm interrupt flag","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rtc.rs","byte_start":184391,"byte_end":184430,"line_start":165,"line_end":165,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":997},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rtc.rs","byte_start":184861,"byte_end":184871,"line_start":181,"line_end":181,"column_start":12,"column_end":22},"name":"wait_alarm","qualname":"<Rtc>::wait_alarm","value":"pub fn wait_alarm(&mut Self) -> nb::Result<(), Infallible>","parent":null,"children":[],"decl_id":null,"docs":"      Return `Ok(())` if the alarm flag is set, `Err(nb::WouldBlock)` otherwise.","sig":null,"attributes":[{"value":"*\n      Return `Ok(())` if the alarm flag is set, `Err(nb::WouldBlock)` otherwise.\n\n      ```rust\n      use nb::block;\n\n      rtc.set_alarm(rtc.read_counts() + 5);\n      // NOTE: Safe unwrap because Infallible can't be returned\n      block!(rtc.wait_alarm()).unwrap();\n      ```\n    */","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rtc.rs","byte_start":184562,"byte_end":184849,"line_start":170,"line_end":180,"column_start":5,"column_end":7}}]},{"kind":"Mod","id":{"krate":0,"index":1003},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"serial","qualname":"::serial","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","parent":null,"children":[{"krate":0,"index":1004},{"krate":0,"index":18395},{"krate":0,"index":1005},{"krate":0,"index":1006},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":18429},{"krate":0,"index":1025},{"krate":0,"index":18431},{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":18463},{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":18467},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1053},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":18483},{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":16858},{"krate":0,"index":16869},{"krate":0,"index":1065},{"krate":0,"index":1068},{"krate":0,"index":1070},{"krate":0,"index":1072},{"krate":0,"index":1074},{"krate":0,"index":1076},{"krate":0,"index":1078},{"krate":0,"index":1080},{"krate":0,"index":1082},{"krate":0,"index":1089},{"krate":0,"index":1098},{"krate":0,"index":1102},{"krate":0,"index":1108},{"krate":0,"index":1110},{"krate":0,"index":1115},{"krate":0,"index":1118},{"krate":0,"index":1121},{"krate":0,"index":1125},{"krate":0,"index":1127},{"krate":0,"index":16871},{"krate":0,"index":16889},{"krate":0,"index":16894},{"krate":0,"index":16899},{"krate":0,"index":16902},{"krate":0,"index":16906},{"krate":0,"index":16910},{"krate":0,"index":16915},{"krate":0,"index":16933},{"krate":0,"index":16938},{"krate":0,"index":16943},{"krate":0,"index":16946},{"krate":0,"index":16950},{"krate":0,"index":16954},{"krate":0,"index":16959},{"krate":0,"index":16977},{"krate":0,"index":16982},{"krate":0,"index":16987},{"krate":0,"index":16990},{"krate":0,"index":16994},{"krate":0,"index":16998},{"krate":0,"index":1132},{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1135},{"krate":0,"index":1136},{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1139},{"krate":0,"index":1140},{"krate":0,"index":1141},{"krate":0,"index":17003},{"krate":0,"index":17004},{"krate":0,"index":17005},{"krate":0,"index":17008},{"krate":0,"index":17011},{"krate":0,"index":17014},{"krate":0,"index":17017},{"krate":0,"index":17019},{"krate":0,"index":17021},{"krate":0,"index":17023},{"krate":0,"index":17025},{"krate":0,"index":17030},{"krate":0,"index":17034},{"krate":0,"index":17039},{"krate":0,"index":17040},{"krate":0,"index":17041},{"krate":0,"index":17044},{"krate":0,"index":17047},{"krate":0,"index":17050},{"krate":0,"index":17053},{"krate":0,"index":17055},{"krate":0,"index":17057},{"krate":0,"index":17059},{"krate":0,"index":17061},{"krate":0,"index":17066},{"krate":0,"index":17070},{"krate":0,"index":17075},{"krate":0,"index":17076},{"krate":0,"index":17077},{"krate":0,"index":17080},{"krate":0,"index":17083},{"krate":0,"index":17086},{"krate":0,"index":17089},{"krate":0,"index":17091},{"krate":0,"index":17093},{"krate":0,"index":17095},{"krate":0,"index":17097},{"krate":0,"index":17102},{"krate":0,"index":17106}],"decl_id":null,"docs":" # Serial Communication (USART)","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":5236,"byte_end":5271,"line_start":171,"line_end":171,"column_start":1,"column_end":36}},{"value":"/ # Serial Communication (USART)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":185860,"byte_end":185894,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":185895,"byte_end":185898,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains the functions to utilize the USART (Universal","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":185899,"byte_end":185969,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ synchronous asynchronous receiver transmitter)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":185970,"byte_end":186020,"line_start":4,"line_end":4,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":186021,"byte_end":186024,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ ## Example usage:","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":186025,"byte_end":186046,"line_start":6,"line_end":6,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":186047,"byte_end":186050,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/  ```rust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":186051,"byte_end":186063,"line_start":8,"line_end":8,"column_start":1,"column_end":13}},{"value":"/ // prelude: create handles to the peripherals and registers","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":186064,"byte_end":186127,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ let p = crate::pac::Peripherals::take().unwrap();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":186128,"byte_end":186181,"line_start":10,"line_end":10,"column_start":1,"column_end":54}},{"value":"/ let cp = cortex_m::Peripherals::take().unwrap();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":186182,"byte_end":186234,"line_start":11,"line_end":11,"column_start":1,"column_end":53}},{"value":"/ let mut flash = p.FLASH.constrain();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":186235,"byte_end":186275,"line_start":12,"line_end":12,"column_start":1,"column_end":41}},{"value":"/ let mut rcc = p.RCC.constrain();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":186276,"byte_end":186312,"line_start":13,"line_end":13,"column_start":1,"column_end":37}},{"value":"/ let clocks = rcc.cfgr.freeze(&mut flash.acr);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":186313,"byte_end":186362,"line_start":14,"line_end":14,"column_start":1,"column_end":50}},{"value":"/ let mut afio = p.AFIO.constrain(&mut rcc.apb2);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":186363,"byte_end":186414,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/ let mut gpioa = p.GPIOA.split(&mut rcc.apb2);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":186415,"byte_end":186464,"line_start":16,"line_end":16,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":186465,"byte_end":186468,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ // USART1 on Pins A9 and A10","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":186469,"byte_end":186501,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/ let pin_tx = gpioa.pa9.into_alternate_push_pull(&mut gpioa.crh);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":186502,"byte_end":186570,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/ let pin_rx = gpioa.pa10;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":186571,"byte_end":186599,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ // Create an interface struct for USART1 with 9600 Baud","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":186600,"byte_end":186659,"line_start":21,"line_end":21,"column_start":1,"column_end":60}},{"value":"/ let serial = Serial::usart1(","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":186660,"byte_end":186692,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/     p.USART1,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":186693,"byte_end":186710,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/     (pin_tx, pin_rx),","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":186711,"byte_end":186736,"line_start":24,"line_end":24,"column_start":1,"column_end":26}},{"value":"/     &mut afio.mapr,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":186737,"byte_end":186760,"line_start":25,"line_end":25,"column_start":1,"column_end":24}},{"value":"/     Config::default().baudrate(9_600.bps()),","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":186761,"byte_end":186809,"line_start":26,"line_end":26,"column_start":1,"column_end":49}},{"value":"/     clocks,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":186810,"byte_end":186825,"line_start":27,"line_end":27,"column_start":1,"column_end":16}},{"value":"/     &mut rcc.apb2,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":186826,"byte_end":186848,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"/ );","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":186849,"byte_end":186855,"line_start":29,"line_end":29,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":186856,"byte_end":186859,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ // separate into tx and rx channels","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":186860,"byte_end":186899,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"/ let (mut tx, mut rx) = serial.split();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":186900,"byte_end":186942,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":186943,"byte_end":186946,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ // Write 'R' to the USART","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":186947,"byte_end":186976,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/ block!(tx.write(b'R')).ok();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":186977,"byte_end":187009,"line_start":35,"line_end":35,"column_start":1,"column_end":33}},{"value":"/ // Receive a byte from the USART and store it in \"received\"","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":187010,"byte_end":187073,"line_start":36,"line_end":36,"column_start":1,"column_end":64}},{"value":"/ let received = block!(rx.read()).unwrap();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":187074,"byte_end":187120,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/  ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":187121,"byte_end":187129,"line_start":38,"line_end":38,"column_start":1,"column_end":9}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1061},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":187872,"byte_end":187876,"line_start":62,"line_end":62,"column_start":5,"column_end":9},"name":"Rxne","qualname":"::serial::Event::Rxne","value":"Event::Rxne","parent":{"krate":0,"index":1060},"children":[],"decl_id":null,"docs":" New data has been received\n","sig":null,"attributes":[{"value":"/ New data has been received","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":187837,"byte_end":187867,"line_start":61,"line_end":61,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1063},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":187911,"byte_end":187914,"line_start":64,"line_end":64,"column_start":5,"column_end":8},"name":"Txe","qualname":"::serial::Event::Txe","value":"Event::Txe","parent":{"krate":0,"index":1060},"children":[],"decl_id":null,"docs":" New data can be sent\n","sig":null,"attributes":[{"value":"/ New data can be sent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":187882,"byte_end":187906,"line_start":63,"line_end":63,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":1060},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":187825,"byte_end":187830,"line_start":60,"line_end":60,"column_start":10,"column_end":15},"name":"Event","qualname":"::serial::Event","value":"pub enum Event {\n\n    /// New data has been received\n    Rxne,\n\n    /// New data can be sent\n    Txe,\n}","parent":null,"children":[{"krate":0,"index":1061},{"krate":0,"index":1063}],"decl_id":null,"docs":" Interrupt event\n","sig":null,"attributes":[{"value":"/ Interrupt event","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":187796,"byte_end":187815,"line_start":59,"line_end":59,"column_start":1,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":16859},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":187996,"byte_end":188003,"line_start":71,"line_end":71,"column_start":5,"column_end":12},"name":"Framing","qualname":"::serial::Error::Framing","value":"Error::Framing","parent":{"krate":0,"index":16858},"children":[],"decl_id":null,"docs":" Framing error\n","sig":null,"attributes":[{"value":"/ Framing error","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":187974,"byte_end":187991,"line_start":70,"line_end":70,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":16861},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":188029,"byte_end":188034,"line_start":73,"line_end":73,"column_start":5,"column_end":10},"name":"Noise","qualname":"::serial::Error::Noise","value":"Error::Noise","parent":{"krate":0,"index":16858},"children":[],"decl_id":null,"docs":" Noise error\n","sig":null,"attributes":[{"value":"/ Noise error","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":188009,"byte_end":188024,"line_start":72,"line_end":72,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":16863},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":188066,"byte_end":188073,"line_start":75,"line_end":75,"column_start":5,"column_end":12},"name":"Overrun","qualname":"::serial::Error::Overrun","value":"Error::Overrun","parent":{"krate":0,"index":16858},"children":[],"decl_id":null,"docs":" RX buffer overrun\n","sig":null,"attributes":[{"value":"/ RX buffer overrun","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":188040,"byte_end":188061,"line_start":74,"line_end":74,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":16865},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":188106,"byte_end":188112,"line_start":77,"line_end":77,"column_start":5,"column_end":11},"name":"Parity","qualname":"::serial::Error::Parity","value":"Error::Parity","parent":{"krate":0,"index":16858},"children":[],"decl_id":null,"docs":" Parity check error\n","sig":null,"attributes":[{"value":"/ Parity check error","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":188079,"byte_end":188101,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":16867},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":188137,"byte_end":188148,"line_start":79,"line_end":79,"column_start":5,"column_end":16},"name":"_Extensible","qualname":"::serial::Error::_Extensible","value":"Error::_Extensible","parent":{"krate":0,"index":16858},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":16858},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":187962,"byte_end":187967,"line_start":69,"line_end":69,"column_start":10,"column_end":15},"name":"Error","qualname":"::serial::Error","value":"pub enum Error {\n\n    /// Framing error\n    Framing,\n\n    /// Noise error\n    Noise,\n\n    /// RX buffer overrun\n    Overrun,\n\n    /// Parity check error\n    Parity,\n\n    #[doc(hidden)]\n    _Extensible,\n}","parent":null,"children":[{"krate":0,"index":16859},{"krate":0,"index":16861},{"krate":0,"index":16863},{"krate":0,"index":16865},{"krate":0,"index":16867}],"decl_id":null,"docs":" Serial error\n","sig":null,"attributes":[{"value":"/ Serial error","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":187919,"byte_end":187935,"line_start":67,"line_end":67,"column_start":1,"column_end":17}}]},{"kind":"Trait","id":{"krate":0,"index":1065},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":188384,"byte_end":188388,"line_start":84,"line_end":84,"column_start":11,"column_end":15},"name":"Pins","qualname":"::serial::Pins","value":"Pins<USART>","parent":null,"children":[{"krate":0,"index":1067}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1067},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":188408,"byte_end":188413,"line_start":85,"line_end":85,"column_start":11,"column_end":16},"name":"REMAP","qualname":"::serial::Pins::REMAP","value":"u8","parent":{"krate":0,"index":1065},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1083},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":189159,"byte_end":189169,"line_start":117,"line_end":117,"column_start":5,"column_end":15},"name":"ParityNone","qualname":"::serial::Parity::ParityNone","value":"Parity::ParityNone","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1085},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":189175,"byte_end":189185,"line_start":118,"line_end":118,"column_start":5,"column_end":15},"name":"ParityEven","qualname":"::serial::Parity::ParityEven","value":"Parity::ParityEven","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1087},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":189191,"byte_end":189200,"line_start":119,"line_end":119,"column_start":5,"column_end":14},"name":"ParityOdd","qualname":"::serial::Parity::ParityOdd","value":"Parity::ParityOdd","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1082},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":189146,"byte_end":189152,"line_start":116,"line_end":116,"column_start":10,"column_end":16},"name":"Parity","qualname":"::serial::Parity","value":"pub enum Parity { ParityNone, ParityEven, ParityOdd, }","parent":null,"children":[{"krate":0,"index":1083},{"krate":0,"index":1085},{"krate":0,"index":1087}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1090},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":189255,"byte_end":189260,"line_start":124,"line_end":124,"column_start":5,"column_end":10},"name":"STOP1","qualname":"::serial::StopBits::STOP1","value":"StopBits::STOP1","parent":{"krate":0,"index":1089},"children":[],"decl_id":null,"docs":"1 stop bit\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1092},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":189295,"byte_end":189302,"line_start":126,"line_end":126,"column_start":5,"column_end":12},"name":"STOP0P5","qualname":"::serial::StopBits::STOP0P5","value":"StopBits::STOP0P5","parent":{"krate":0,"index":1089},"children":[],"decl_id":null,"docs":"0.5 stop bits\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1094},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":189335,"byte_end":189340,"line_start":128,"line_end":128,"column_start":5,"column_end":10},"name":"STOP2","qualname":"::serial::StopBits::STOP2","value":"StopBits::STOP2","parent":{"krate":0,"index":1089},"children":[],"decl_id":null,"docs":"2 stop bits\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1096},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":189375,"byte_end":189382,"line_start":130,"line_end":130,"column_start":5,"column_end":12},"name":"STOP1P5","qualname":"::serial::StopBits::STOP1P5","value":"StopBits::STOP1P5","parent":{"krate":0,"index":1089},"children":[],"decl_id":null,"docs":"1.5 stop bits\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1089},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":189214,"byte_end":189222,"line_start":122,"line_end":122,"column_start":10,"column_end":18},"name":"StopBits","qualname":"::serial::StopBits","value":"pub enum StopBits {\n\n    #[doc = \"1 stop bit\"]\n    STOP1,\n\n    #[doc = \"0.5 stop bits\"]\n    STOP0P5,\n\n    #[doc = \"2 stop bits\"]\n    STOP2,\n\n    #[doc = \"1.5 stop bits\"]\n    STOP1P5,\n}","parent":null,"children":[{"krate":0,"index":1090},{"krate":0,"index":1092},{"krate":0,"index":1094},{"krate":0,"index":1096}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1098},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":189398,"byte_end":189404,"line_start":133,"line_end":133,"column_start":12,"column_end":18},"name":"Config","qualname":"::serial::Config","value":"Config { baudrate, parity, stopbits }","parent":null,"children":[{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1101}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1099},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":189415,"byte_end":189423,"line_start":134,"line_end":134,"column_start":9,"column_end":17},"name":"baudrate","qualname":"::serial::Config::baudrate","value":"time::Bps","parent":{"krate":0,"index":1098},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1100},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":189438,"byte_end":189444,"line_start":135,"line_end":135,"column_start":9,"column_end":15},"name":"parity","qualname":"::serial::Config::parity","value":"serial::Parity","parent":{"krate":0,"index":1098},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1101},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":189462,"byte_end":189470,"line_start":136,"line_end":136,"column_start":9,"column_end":17},"name":"stopbits","qualname":"::serial::Config::stopbits","value":"serial::StopBits","parent":{"krate":0,"index":1098},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1103},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":189510,"byte_end":189518,"line_start":140,"line_end":140,"column_start":12,"column_end":20},"name":"baudrate","qualname":"<Config>::baudrate","value":"pub fn baudrate(Self, Bps) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1104},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":189619,"byte_end":189630,"line_start":145,"line_end":145,"column_start":12,"column_end":23},"name":"parity_none","qualname":"<Config>::parity_none","value":"pub fn parity_none(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1105},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":189724,"byte_end":189735,"line_start":150,"line_end":150,"column_start":12,"column_end":23},"name":"parity_even","qualname":"<Config>::parity_even","value":"pub fn parity_even(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1106},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":189829,"byte_end":189839,"line_start":155,"line_end":155,"column_start":12,"column_end":22},"name":"parity_odd","qualname":"<Config>::parity_odd","value":"pub fn parity_odd(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1107},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":189932,"byte_end":189940,"line_start":160,"line_end":160,"column_start":12,"column_end":20},"name":"stopbits","qualname":"<Config>::stopbits","value":"pub fn stopbits(Self, StopBits) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1110},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":190305,"byte_end":190311,"line_start":178,"line_end":178,"column_start":12,"column_end":18},"name":"Serial","qualname":"::serial::Serial","value":"Serial {  }","parent":null,"children":[{"krate":0,"index":1113},{"krate":0,"index":1114}],"decl_id":null,"docs":" Serial abstraction\n","sig":null,"attributes":[{"value":"/ Serial abstraction","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":190271,"byte_end":190293,"line_start":177,"line_end":177,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1115},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":190395,"byte_end":190397,"line_start":184,"line_end":184,"column_start":12,"column_end":14},"name":"Rx","qualname":"::serial::Rx","value":"Rx {  }","parent":null,"children":[{"krate":0,"index":1117}],"decl_id":null,"docs":" Serial receiver\n","sig":null,"attributes":[{"value":"/ Serial receiver","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":190364,"byte_end":190383,"line_start":183,"line_end":183,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1118},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":190476,"byte_end":190478,"line_start":189,"line_end":189,"column_start":12,"column_end":14},"name":"Tx","qualname":"::serial::Tx","value":"Tx {  }","parent":null,"children":[{"krate":0,"index":1120}],"decl_id":null,"docs":" Serial transmitter\n","sig":null,"attributes":[{"value":"/ Serial transmitter","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":190442,"byte_end":190464,"line_start":188,"line_end":188,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":16873},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":201076,"byte_end":201082,"line_start":473,"line_end":473,"column_start":9,"column_end":15},"name":"usart1","qualname":"<Serial<USART1, PINS>>::usart1","value":"pub fn usart1(USART1, PINS, &mut MAPR, Config, Clocks, &mut APB2) -> Self\nwhere PINS: Pins<USART1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the serial interface and creates the interface\n struct.","sig":null,"attributes":[{"value":"/ Configures the serial interface and creates the interface","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":193225,"byte_end":193286,"line_start":275,"line_end":275,"column_start":17,"column_end":78}},{"value":"/ struct.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":193303,"byte_end":193314,"line_start":276,"line_end":276,"column_start":17,"column_end":28}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":193331,"byte_end":193334,"line_start":277,"line_end":277,"column_start":17,"column_end":20}},{"value":"/ `Bps` is the baud rate of the interface.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":193351,"byte_end":193395,"line_start":278,"line_end":278,"column_start":17,"column_end":61}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":193412,"byte_end":193415,"line_start":279,"line_end":279,"column_start":17,"column_end":20}},{"value":"/ `Clocks` passes information about the current frequencies of","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":193432,"byte_end":193496,"line_start":280,"line_end":280,"column_start":17,"column_end":81}},{"value":"/ the clocks.  The existence of the struct ensures that the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":193513,"byte_end":193574,"line_start":281,"line_end":281,"column_start":17,"column_end":78}},{"value":"/ clock settings are fixed.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":193591,"byte_end":193620,"line_start":282,"line_end":282,"column_start":17,"column_end":46}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":193637,"byte_end":193640,"line_start":283,"line_end":283,"column_start":17,"column_end":20}},{"value":"/ The `serial` struct takes ownership over the `USARTX` device","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":193657,"byte_end":193721,"line_start":284,"line_end":284,"column_start":17,"column_end":81}},{"value":"/ registers and the specified `PINS`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":193738,"byte_end":193776,"line_start":285,"line_end":285,"column_start":17,"column_end":55}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":193793,"byte_end":193796,"line_start":286,"line_end":286,"column_start":17,"column_end":20}},{"value":"/ `MAPR` and `APBX` are register handles which are passed for","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":193813,"byte_end":193876,"line_start":287,"line_end":287,"column_start":17,"column_end":80}},{"value":"/ configuration. (`MAPR` is used to map the USART to the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":193893,"byte_end":193951,"line_start":288,"line_end":288,"column_start":17,"column_end":75}},{"value":"/ corresponding pins. `APBX` is used to reset the USART.)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":193968,"byte_end":194027,"line_start":289,"line_end":289,"column_start":17,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":16917},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":201217,"byte_end":201223,"line_start":481,"line_end":481,"column_start":9,"column_end":15},"name":"usart2","qualname":"<Serial<USART2, PINS>>::usart2","value":"pub fn usart2(USART2, PINS, &mut MAPR, Config, Clocks, &mut APB1) -> Self\nwhere PINS: Pins<USART2>","parent":null,"children":[],"decl_id":null,"docs":" Configures the serial interface and creates the interface\n struct.","sig":null,"attributes":[{"value":"/ Configures the serial interface and creates the interface","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":193225,"byte_end":193286,"line_start":275,"line_end":275,"column_start":17,"column_end":78}},{"value":"/ struct.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":193303,"byte_end":193314,"line_start":276,"line_end":276,"column_start":17,"column_end":28}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":193331,"byte_end":193334,"line_start":277,"line_end":277,"column_start":17,"column_end":20}},{"value":"/ `Bps` is the baud rate of the interface.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":193351,"byte_end":193395,"line_start":278,"line_end":278,"column_start":17,"column_end":61}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":193412,"byte_end":193415,"line_start":279,"line_end":279,"column_start":17,"column_end":20}},{"value":"/ `Clocks` passes information about the current frequencies of","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":193432,"byte_end":193496,"line_start":280,"line_end":280,"column_start":17,"column_end":81}},{"value":"/ the clocks.  The existence of the struct ensures that the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":193513,"byte_end":193574,"line_start":281,"line_end":281,"column_start":17,"column_end":78}},{"value":"/ clock settings are fixed.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":193591,"byte_end":193620,"line_start":282,"line_end":282,"column_start":17,"column_end":46}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":193637,"byte_end":193640,"line_start":283,"line_end":283,"column_start":17,"column_end":20}},{"value":"/ The `serial` struct takes ownership over the `USARTX` device","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":193657,"byte_end":193721,"line_start":284,"line_end":284,"column_start":17,"column_end":81}},{"value":"/ registers and the specified `PINS`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":193738,"byte_end":193776,"line_start":285,"line_end":285,"column_start":17,"column_end":55}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":193793,"byte_end":193796,"line_start":286,"line_end":286,"column_start":17,"column_end":20}},{"value":"/ `MAPR` and `APBX` are register handles which are passed for","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":193813,"byte_end":193876,"line_start":287,"line_end":287,"column_start":17,"column_end":80}},{"value":"/ configuration. (`MAPR` is used to map the USART to the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":193893,"byte_end":193951,"line_start":288,"line_end":288,"column_start":17,"column_end":75}},{"value":"/ corresponding pins. `APBX` is used to reset the USART.)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":193968,"byte_end":194027,"line_start":289,"line_end":289,"column_start":17,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":16961},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":201358,"byte_end":201364,"line_start":489,"line_end":489,"column_start":9,"column_end":15},"name":"usart3","qualname":"<Serial<USART3, PINS>>::usart3","value":"pub fn usart3(USART3, PINS, &mut MAPR, Config, Clocks, &mut APB1) -> Self\nwhere PINS: Pins<USART3>","parent":null,"children":[],"decl_id":null,"docs":" Configures the serial interface and creates the interface\n struct.","sig":null,"attributes":[{"value":"/ Configures the serial interface and creates the interface","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":193225,"byte_end":193286,"line_start":275,"line_end":275,"column_start":17,"column_end":78}},{"value":"/ struct.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":193303,"byte_end":193314,"line_start":276,"line_end":276,"column_start":17,"column_end":28}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":193331,"byte_end":193334,"line_start":277,"line_end":277,"column_start":17,"column_end":20}},{"value":"/ `Bps` is the baud rate of the interface.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":193351,"byte_end":193395,"line_start":278,"line_end":278,"column_start":17,"column_end":61}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":193412,"byte_end":193415,"line_start":279,"line_end":279,"column_start":17,"column_end":20}},{"value":"/ `Clocks` passes information about the current frequencies of","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":193432,"byte_end":193496,"line_start":280,"line_end":280,"column_start":17,"column_end":81}},{"value":"/ the clocks.  The existence of the struct ensures that the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":193513,"byte_end":193574,"line_start":281,"line_end":281,"column_start":17,"column_end":78}},{"value":"/ clock settings are fixed.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":193591,"byte_end":193620,"line_start":282,"line_end":282,"column_start":17,"column_end":46}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":193637,"byte_end":193640,"line_start":283,"line_end":283,"column_start":17,"column_end":20}},{"value":"/ The `serial` struct takes ownership over the `USARTX` device","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":193657,"byte_end":193721,"line_start":284,"line_end":284,"column_start":17,"column_end":81}},{"value":"/ registers and the specified `PINS`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":193738,"byte_end":193776,"line_start":285,"line_end":285,"column_start":17,"column_end":55}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":193793,"byte_end":193796,"line_start":286,"line_end":286,"column_start":17,"column_end":20}},{"value":"/ `MAPR` and `APBX` are register handles which are passed for","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":193813,"byte_end":193876,"line_start":287,"line_end":287,"column_start":17,"column_end":80}},{"value":"/ configuration. (`MAPR` is used to map the USART to the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":193893,"byte_end":193951,"line_start":288,"line_end":288,"column_start":17,"column_end":75}},{"value":"/ corresponding pins. `APBX` is used to reset the USART.)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":193968,"byte_end":194027,"line_start":289,"line_end":289,"column_start":17,"column_end":76}}]},{"kind":"Type","id":{"krate":0,"index":1132},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":201458,"byte_end":201461,"line_start":497,"line_end":497,"column_start":10,"column_end":13},"name":"Rx1","qualname":"::serial::Rx1","value":"Rx<USART1>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1133},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":201485,"byte_end":201488,"line_start":498,"line_end":498,"column_start":10,"column_end":13},"name":"Tx1","qualname":"::serial::Tx1","value":"Tx<USART1>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1134},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":201512,"byte_end":201515,"line_start":499,"line_end":499,"column_start":10,"column_end":13},"name":"Rx2","qualname":"::serial::Rx2","value":"Rx<USART2>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1135},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":201539,"byte_end":201542,"line_start":500,"line_end":500,"column_start":10,"column_end":13},"name":"Tx2","qualname":"::serial::Tx2","value":"Tx<USART2>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1136},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":201566,"byte_end":201569,"line_start":501,"line_end":501,"column_start":10,"column_end":13},"name":"Rx3","qualname":"::serial::Rx3","value":"Rx<USART3>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1137},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":201593,"byte_end":201596,"line_start":502,"line_end":502,"column_start":10,"column_end":13},"name":"Tx3","qualname":"::serial::Tx3","value":"Tx<USART3>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":17003},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":207492,"byte_end":207498,"line_start":674,"line_end":674,"column_start":9,"column_end":15},"name":"RxDma1","qualname":"::serial::RxDma1","value":"RxDma<Rx<USART1>, dma1::C5>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":17004},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":207508,"byte_end":207514,"line_start":675,"line_end":675,"column_start":9,"column_end":15},"name":"TxDma1","qualname":"::serial::TxDma1","value":"TxDma<Tx<USART1>, dma1::C4>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":17039},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":207581,"byte_end":207587,"line_start":680,"line_end":680,"column_start":9,"column_end":15},"name":"RxDma2","qualname":"::serial::RxDma2","value":"RxDma<Rx<USART2>, dma1::C6>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":17040},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":207597,"byte_end":207603,"line_start":681,"line_end":681,"column_start":9,"column_end":15},"name":"TxDma2","qualname":"::serial::TxDma2","value":"TxDma<Tx<USART2>, dma1::C7>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":17075},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":207670,"byte_end":207676,"line_start":686,"line_end":686,"column_start":9,"column_end":15},"name":"RxDma3","qualname":"::serial::RxDma3","value":"RxDma<Rx<USART3>, dma1::C3>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":17076},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":207686,"byte_end":207692,"line_start":687,"line_end":687,"column_start":9,"column_end":15},"name":"TxDma3","qualname":"::serial::TxDma3","value":"TxDma<Tx<USART3>, dma1::C2>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1143},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"spi","qualname":"::spi","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","parent":null,"children":[{"krate":0,"index":1144},{"krate":0,"index":1145},{"krate":0,"index":1146},{"krate":0,"index":1147},{"krate":0,"index":1148},{"krate":0,"index":1149},{"krate":0,"index":1150},{"krate":0,"index":1151},{"krate":0,"index":1152},{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1155},{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1160},{"krate":0,"index":1161},{"krate":0,"index":1162},{"krate":0,"index":1163},{"krate":0,"index":1164},{"krate":0,"index":18525},{"krate":0,"index":1165},{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1172},{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1176},{"krate":0,"index":1177},{"krate":0,"index":1178},{"krate":0,"index":18547},{"krate":0,"index":1179},{"krate":0,"index":1180},{"krate":0,"index":18551},{"krate":0,"index":1181},{"krate":0,"index":1182},{"krate":0,"index":1183},{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1186},{"krate":0,"index":1187},{"krate":0,"index":1188},{"krate":0,"index":18565},{"krate":0,"index":1189},{"krate":0,"index":1190},{"krate":0,"index":1191},{"krate":0,"index":1192},{"krate":0,"index":17111},{"krate":0,"index":17120},{"krate":0,"index":1193},{"krate":0,"index":18573},{"krate":0,"index":1194},{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1213},{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":17122},{"krate":0,"index":17128},{"krate":0,"index":17134},{"krate":0,"index":17140},{"krate":0,"index":17146},{"krate":0,"index":17152},{"krate":0,"index":1220},{"krate":0,"index":1227},{"krate":0,"index":1229},{"krate":0,"index":1231},{"krate":0,"index":1233},{"krate":0,"index":1235},{"krate":0,"index":1237},{"krate":0,"index":17158},{"krate":0,"index":17160},{"krate":0,"index":17163},{"krate":0,"index":17164},{"krate":0,"index":17165},{"krate":0,"index":17166},{"krate":0,"index":17168},{"krate":0,"index":17171},{"krate":0,"index":17172},{"krate":0,"index":17173},{"krate":0,"index":17174},{"krate":0,"index":17176},{"krate":0,"index":17179},{"krate":0,"index":17180},{"krate":0,"index":17181},{"krate":0,"index":1240},{"krate":0,"index":1247},{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1263},{"krate":0,"index":1270},{"krate":0,"index":1274},{"krate":0,"index":1280},{"krate":0,"index":1285},{"krate":0,"index":17182},{"krate":0,"index":17187},{"krate":0,"index":17191},{"krate":0,"index":17198},{"krate":0,"index":17205},{"krate":0,"index":17210},{"krate":0,"index":17214},{"krate":0,"index":17221}],"decl_id":null,"docs":"  # Serial Peripheral Interface\n  To construct the SPI instances, use the `Spi::spiX` functions.","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":5288,"byte_end":5323,"line_start":173,"line_end":173,"column_start":1,"column_end":36}},{"value":"*\n  # Serial Peripheral Interface\n  To construct the SPI instances, use the `Spi::spiX` functions.\n\n  The pin parameter is a tuple containing `(sck, miso, mosi)` which should be configured as `(Alternate<PushPull>, Input<Floating>, Alternate<PushPull>)`.\n\n  You can also use `NoSck`, `NoMiso` or `NoMosi` if you don't want to use the pins\n\n  - `SPI1` can use `(PA5, PA6, PA7)` or `(PB3, PB4, PB5)`.\n  - `SPI2` can use `(PB13, PB14, PB15)`\n  - `SPI3` can use `(PB3, PB4, PB5)` or `(PC10, PC11, PC12)`\n\n\n  ## Initialisation example\n\n  ```rust\n    // Acquire the GPIOB peripheral\n    let mut gpiob = dp.GPIOB.split(&mut rcc.apb2);\n\n    let pins = (\n        gpiob.pb13.into_alternate_push_pull(&mut gpiob.crh),\n        gpiob.pb14.into_floating_input(&mut gpiob.crh),\n        gpiob.pb15.into_alternate_push_pull(&mut gpiob.crh),\n    );\n\n    let spi_mode = Mode {\n        polarity: Polarity::IdleLow,\n        phase: Phase::CaptureOnFirstTransition,\n    };\n    let spi = Spi::spi2(dp.SPI2, pins, spi_mode, 100.khz(), clocks, &mut rcc.apb1);\n  ```\n*/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":207740,"byte_end":208784,"line_start":1,"line_end":32,"column_start":1,"column_end":3}}]},{"kind":"TupleVariant","id":{"krate":0,"index":17112},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":209591,"byte_end":209598,"line_start":61,"line_end":61,"column_start":5,"column_end":12},"name":"Overrun","qualname":"::spi::Error::Overrun","value":"Error::Overrun","parent":{"krate":0,"index":17111},"children":[],"decl_id":null,"docs":" Overrun occurred\n","sig":null,"attributes":[{"value":"/ Overrun occurred","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":209566,"byte_end":209586,"line_start":60,"line_end":60,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":17114},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":209632,"byte_end":209641,"line_start":63,"line_end":63,"column_start":5,"column_end":14},"name":"ModeFault","qualname":"::spi::Error::ModeFault","value":"Error::ModeFault","parent":{"krate":0,"index":17111},"children":[],"decl_id":null,"docs":" Mode fault occurred\n","sig":null,"attributes":[{"value":"/ Mode fault occurred","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":209604,"byte_end":209627,"line_start":62,"line_end":62,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":17116},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":209665,"byte_end":209668,"line_start":65,"line_end":65,"column_start":5,"column_end":8},"name":"Crc","qualname":"::spi::Error::Crc","value":"Error::Crc","parent":{"krate":0,"index":17111},"children":[],"decl_id":null,"docs":" CRC error\n","sig":null,"attributes":[{"value":"/ CRC error","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":209647,"byte_end":209660,"line_start":64,"line_end":64,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":17118},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":209693,"byte_end":209704,"line_start":67,"line_end":67,"column_start":5,"column_end":16},"name":"_Extensible","qualname":"::spi::Error::_Extensible","value":"Error::_Extensible","parent":{"krate":0,"index":17111},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":17111},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":209554,"byte_end":209559,"line_start":59,"line_end":59,"column_start":10,"column_end":15},"name":"Error","qualname":"::spi::Error","value":"pub enum Error {\n\n    /// Overrun occurred\n    Overrun,\n\n    /// Mode fault occurred\n    ModeFault,\n\n    /// CRC error\n    Crc,\n\n    #[doc(hidden)]\n    _Extensible,\n}","parent":null,"children":[{"krate":0,"index":17112},{"krate":0,"index":17114},{"krate":0,"index":17116},{"krate":0,"index":17118}],"decl_id":null,"docs":" SPI error\n","sig":null,"attributes":[{"value":"/ SPI error","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":209514,"byte_end":209527,"line_start":57,"line_end":57,"column_start":1,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":1195},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":209768,"byte_end":209773,"line_start":73,"line_end":73,"column_start":15,"column_end":20},"name":"Remap","qualname":"::spi::sealed::Remap","value":"Remap","parent":null,"children":[{"krate":0,"index":1196},{"krate":0,"index":1197}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1196},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":209789,"byte_end":209795,"line_start":74,"line_end":74,"column_start":14,"column_end":20},"name":"Periph","qualname":"::spi::sealed::Remap::Periph","value":"type Periph;","parent":{"krate":0,"index":1195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1197},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":209811,"byte_end":209816,"line_start":75,"line_end":75,"column_start":15,"column_end":20},"name":"REMAP","qualname":"::spi::sealed::Remap::REMAP","value":"bool","parent":{"krate":0,"index":1195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1198},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":209844,"byte_end":209847,"line_start":77,"line_end":77,"column_start":15,"column_end":18},"name":"Sck","qualname":"::spi::sealed::Sck","value":"Sck<REMAP>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1200},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":209872,"byte_end":209876,"line_start":78,"line_end":78,"column_start":15,"column_end":19},"name":"Miso","qualname":"::spi::sealed::Miso","value":"Miso<REMAP>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1202},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":209901,"byte_end":209905,"line_start":79,"line_end":79,"column_start":15,"column_end":19},"name":"Mosi","qualname":"::spi::sealed::Mosi","value":"Mosi<REMAP>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1204},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":209931,"byte_end":209935,"line_start":80,"line_end":80,"column_start":16,"column_end":20},"name":"_Sck","qualname":"::spi::sealed::_Sck","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1206},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":209952,"byte_end":209957,"line_start":81,"line_end":81,"column_start":16,"column_end":21},"name":"_Miso","qualname":"::spi::sealed::_Miso","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1208},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":209974,"byte_end":209979,"line_start":82,"line_end":82,"column_start":16,"column_end":21},"name":"_Mosi","qualname":"::spi::sealed::_Mosi","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1215},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":210032,"byte_end":210036,"line_start":86,"line_end":86,"column_start":11,"column_end":15},"name":"Pins","qualname":"::spi::Pins","value":"Pins<REMAP, P>","parent":null,"children":[{"krate":0,"index":1218}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1218},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":210058,"byte_end":210062,"line_start":87,"line_end":87,"column_start":10,"column_end":14},"name":"_Pos","qualname":"::spi::Pins::_Pos","value":"type _Pos;","parent":{"krate":0,"index":1215},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1220},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":210878,"byte_end":210881,"line_start":112,"line_end":112,"column_start":12,"column_end":15},"name":"Spi","qualname":"::spi::Spi","value":"Spi {  }","parent":null,"children":[{"krate":0,"index":1224},{"krate":0,"index":1225},{"krate":0,"index":1226}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1227},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":211032,"byte_end":211037,"line_start":119,"line_end":119,"column_start":12,"column_end":17},"name":"NoSck","qualname":"::spi::NoSck","value":"","parent":null,"children":[],"decl_id":null,"docs":" A filler type for when the SCK pin is unnecessary\n","sig":null,"attributes":[{"value":"/ A filler type for when the SCK pin is unnecessary","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":210967,"byte_end":211020,"line_start":118,"line_end":118,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1229},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":211105,"byte_end":211111,"line_start":121,"line_end":121,"column_start":12,"column_end":18},"name":"NoMiso","qualname":"::spi::NoMiso","value":"","parent":null,"children":[],"decl_id":null,"docs":" A filler type for when the Miso pin is unnecessary\n","sig":null,"attributes":[{"value":"/ A filler type for when the Miso pin is unnecessary","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":211039,"byte_end":211093,"line_start":120,"line_end":120,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":1231},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":211179,"byte_end":211185,"line_start":123,"line_end":123,"column_start":12,"column_end":18},"name":"NoMosi","qualname":"::spi::NoMosi","value":"","parent":null,"children":[],"decl_id":null,"docs":" A filler type for when the Mosi pin is unnecessary\n","sig":null,"attributes":[{"value":"/ A filler type for when the Mosi pin is unnecessary","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":211113,"byte_end":211167,"line_start":122,"line_end":122,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":17158},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":211740,"byte_end":211751,"line_start":142,"line_end":142,"column_start":8,"column_end":19},"name":"Spi1NoRemap","qualname":"::spi::Spi1NoRemap","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17166},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":211789,"byte_end":211798,"line_start":143,"line_end":143,"column_start":8,"column_end":17},"name":"Spi1Remap","qualname":"::spi::Spi1Remap","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17174},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":211835,"byte_end":211846,"line_start":144,"line_end":144,"column_start":8,"column_end":19},"name":"Spi2NoRemap","qualname":"::spi::Spi2NoRemap","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1243},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":212414,"byte_end":212418,"line_start":158,"line_end":158,"column_start":12,"column_end":16},"name":"spi1","qualname":"<Spi<SPI1, REMAP, PINS>>::spi1","value":"pub fn spi1<F, POS>(SPI1, PINS, &mut MAPR, Mode, F, Clocks, &mut APB2) -> Self\nwhere F: Into<Hertz>, REMAP: Remap<Periph = SPI1>, PINS: Pins<REMAP, POS>","parent":null,"children":[],"decl_id":null,"docs":"      Constructs an SPI instance using SPI1.","sig":null,"attributes":[{"value":"*\n      Constructs an SPI instance using SPI1.\n\n      The pin parameter tuple (sck, miso, mosi) should be `(PA5, PA6, PA7)` or `(PB3, PB4, PB5)` configured as `(Alternate<PushPull>, Input<Floating>, Alternate<PushPull>)`.\n\n      You can also use `NoSck`, `NoMiso` or `NoMosi` if you don't want to use the pins\n    */","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":212084,"byte_end":212402,"line_start":151,"line_end":157,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":1250},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":213210,"byte_end":213214,"line_start":185,"line_end":185,"column_start":12,"column_end":16},"name":"spi2","qualname":"<Spi<SPI2, REMAP, PINS>>::spi2","value":"pub fn spi2<F, POS>(SPI2, PINS, Mode, F, Clocks, &mut APB1) -> Self where\nF: Into<Hertz>, REMAP: Remap<Periph = SPI2>, PINS: Pins<REMAP, POS>","parent":null,"children":[],"decl_id":null,"docs":"      Constructs an SPI instance using SPI1.","sig":null,"attributes":[{"value":"*\n      Constructs an SPI instance using SPI1.\n\n      The pin parameter tuple (sck, miso, mosi) should be `(PB13, PB14, PB15)` configured as `(Alternate<PushPull>, Input<Floating>, Alternate<PushPull>)`.\n\n      You can also use `NoSck`, `NoMiso` or `NoMosi` if you don't want to use the pins\n    */","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":212898,"byte_end":213198,"line_start":178,"line_end":184,"column_start":5,"column_end":7}}]},{"kind":"Type","id":{"krate":0,"index":1253},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":214345,"byte_end":214361,"line_start":228,"line_end":228,"column_start":10,"column_end":26},"name":"SpiRegisterBlock","qualname":"::spi::SpiRegisterBlock","value":"crate::pac::spi1::RegisterBlock","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1261},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":216605,"byte_end":216609,"line_start":307,"line_end":307,"column_start":12,"column_end":16},"name":"free","qualname":"<Spi<SPI, REMAP, PINS>>::free","value":"pub fn free(Self) -> (SPI, PINS)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.6.0\", note = \"Please use release instead\")","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":216526,"byte_end":216593,"line_start":306,"line_end":306,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1262},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":216673,"byte_end":216680,"line_start":310,"line_end":310,"column_start":12,"column_end":19},"name":"release","qualname":"<Spi<SPI, REMAP, PINS>>::release","value":"pub fn release(Self) -> (SPI, PINS)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1280},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":219972,"byte_end":219982,"line_start":414,"line_end":414,"column_start":12,"column_end":22},"name":"SpiPayload","qualname":"::spi::SpiPayload","value":"SpiPayload {  }","parent":null,"children":[{"krate":0,"index":1284}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1285},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":220047,"byte_end":220055,"line_start":418,"line_end":418,"column_start":10,"column_end":18},"name":"SpiTxDma","qualname":"::spi::SpiTxDma","value":"TxDma<SpiPayload<SPI, REMAP, PINS>, CHANNEL>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1291},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::time","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","parent":null,"children":[{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1294},{"krate":0,"index":17228},{"krate":0,"index":17238},{"krate":0,"index":17237},{"krate":0,"index":17233},{"krate":0,"index":17234},{"krate":0,"index":17231},{"krate":0,"index":17240},{"krate":0,"index":17250},{"krate":0,"index":17249},{"krate":0,"index":17245},{"krate":0,"index":17246},{"krate":0,"index":17243},{"krate":0,"index":17252},{"krate":0,"index":17262},{"krate":0,"index":17261},{"krate":0,"index":17257},{"krate":0,"index":17258},{"krate":0,"index":17255},{"krate":0,"index":17264},{"krate":0,"index":17274},{"krate":0,"index":17273},{"krate":0,"index":17269},{"krate":0,"index":17270},{"krate":0,"index":17267},{"krate":0,"index":17276},{"krate":0,"index":17288},{"krate":0,"index":17289},{"krate":0,"index":17282},{"krate":0,"index":17280},{"krate":0,"index":17279},{"krate":0,"index":17292},{"krate":0,"index":17304},{"krate":0,"index":17305},{"krate":0,"index":17298},{"krate":0,"index":17296},{"krate":0,"index":17295},{"krate":0,"index":1295},{"krate":0,"index":1302},{"krate":0,"index":1309},{"krate":0,"index":1311},{"krate":0,"index":1313},{"krate":0,"index":1315},{"krate":0,"index":1317},{"krate":0,"index":17308},{"krate":0,"index":17311},{"krate":0,"index":17313},{"krate":0,"index":17316},{"krate":0,"index":17319},{"krate":0,"index":17321},{"krate":0,"index":17324},{"krate":0,"index":17326},{"krate":0,"index":17329},{"krate":0,"index":17332},{"krate":0,"index":17334},{"krate":0,"index":17337},{"krate":0,"index":17339},{"krate":0,"index":17342},{"krate":0,"index":17345},{"krate":0,"index":17347},{"krate":0,"index":17350},{"krate":0,"index":17352},{"krate":0,"index":17355},{"krate":0,"index":17358},{"krate":0,"index":17360},{"krate":0,"index":17363},{"krate":0,"index":17362},{"krate":0,"index":1320},{"krate":0,"index":17365},{"krate":0,"index":17368},{"krate":0,"index":17367},{"krate":0,"index":1324}],"decl_id":null,"docs":" Time units","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":5337,"byte_end":5372,"line_start":175,"line_end":175,"column_start":1,"column_end":36}},{"value":"/ Time units","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":222934,"byte_end":222948,"line_start":1,"line_end":1,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":222949,"byte_end":222952,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ See [`Hertz`], [`KiloHertz`] and [`MegaHertz`] for creating increasingly higher frequencies.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":222953,"byte_end":223049,"line_start":3,"line_end":3,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":223050,"byte_end":223053,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ The [`U32Ext`] trait adds various methods like `.hz()`, `.mhz()`, etc to the `u32` primitive type,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":223054,"byte_end":223156,"line_start":5,"line_end":5,"column_start":1,"column_end":103}},{"value":"/ allowing it to be converted into frequencies.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":223157,"byte_end":223206,"line_start":6,"line_end":6,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":223207,"byte_end":223210,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":223211,"byte_end":223225,"line_start":8,"line_end":8,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":223226,"byte_end":223229,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ## Create a 2 MHz frequency","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":223230,"byte_end":223261,"line_start":10,"line_end":10,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":223262,"byte_end":223265,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This example demonstrates various ways of creating a 2 MHz (2_000_000 Hz) frequency. They are","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":223266,"byte_end":223363,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ all equivalent, however the `2.mhz()` variant should be preferred for readability.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":223364,"byte_end":223450,"line_start":13,"line_end":13,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":223451,"byte_end":223454,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":223455,"byte_end":223466,"line_start":15,"line_end":15,"column_start":1,"column_end":12}},{"value":"/ use stm32f1xx_hal::{","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":223467,"byte_end":223491,"line_start":16,"line_end":16,"column_start":1,"column_end":25}},{"value":"/     time::Hertz,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":223492,"byte_end":223512,"line_start":17,"line_end":17,"column_start":1,"column_end":21}},{"value":"/     // Imports U32Ext trait","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":223513,"byte_end":223544,"line_start":18,"line_end":18,"column_start":1,"column_end":32}},{"value":"/     prelude::*,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":223545,"byte_end":223564,"line_start":19,"line_end":19,"column_start":1,"column_end":20}},{"value":"/ };","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":223565,"byte_end":223571,"line_start":20,"line_end":20,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":223572,"byte_end":223575,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let freq_hz = 2_000_000.hz();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":223576,"byte_end":223609,"line_start":22,"line_end":22,"column_start":1,"column_end":34}},{"value":"/ let freq_khz = 2_000.khz();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":223610,"byte_end":223641,"line_start":23,"line_end":23,"column_start":1,"column_end":32}},{"value":"/ let freq_mhz = 2.mhz();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":223642,"byte_end":223669,"line_start":24,"line_end":24,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":223670,"byte_end":223673,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(freq_hz, freq_khz);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":223674,"byte_end":223708,"line_start":26,"line_end":26,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(freq_khz, freq_mhz);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":223709,"byte_end":223744,"line_start":27,"line_end":27,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":223745,"byte_end":223752,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":17228},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":223898,"byte_end":223901,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"Bps","qualname":"::time::Bps","value":"","parent":null,"children":[],"decl_id":null,"docs":" Bits per second\n","sig":null,"attributes":[{"value":"/ Bits per second","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":223826,"byte_end":223845,"line_start":35,"line_end":35,"column_start":1,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":17230},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":223902,"byte_end":223909,"line_start":37,"line_end":37,"column_start":16,"column_end":23},"name":"0","qualname":"::time::Bps::0","value":"u32","parent":{"krate":0,"index":17228},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17240},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":224320,"byte_end":224325,"line_start":56,"line_end":56,"column_start":12,"column_end":17},"name":"Hertz","qualname":"::time::Hertz","value":"","parent":null,"children":[],"decl_id":null,"docs":" Hertz","sig":null,"attributes":[{"value":"/ Hertz","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":223913,"byte_end":223922,"line_start":39,"line_end":39,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":223923,"byte_end":223926,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Create a frequency specified in [Hertz](https://en.wikipedia.org/wiki/Hertz).","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":223927,"byte_end":224008,"line_start":41,"line_end":41,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":224009,"byte_end":224012,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ See also [`KiloHertz`] and [`MegaHertz`] for semantically correct ways of creating higher","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":224013,"byte_end":224106,"line_start":43,"line_end":43,"column_start":1,"column_end":94}},{"value":"/ frequencies.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":224107,"byte_end":224123,"line_start":44,"line_end":44,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":224124,"byte_end":224127,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":224128,"byte_end":224142,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":224143,"byte_end":224146,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ## Create an 60 Hz frequency","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":224147,"byte_end":224179,"line_start":48,"line_end":48,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":224180,"byte_end":224183,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":224184,"byte_end":224195,"line_start":50,"line_end":50,"column_start":1,"column_end":12}},{"value":"/ use stm32f1xx_hal::time::Hertz;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":224196,"byte_end":224231,"line_start":51,"line_end":51,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":224232,"byte_end":224235,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ let freq = 60.hz();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":224236,"byte_end":224259,"line_start":53,"line_end":53,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":224260,"byte_end":224267,"line_start":54,"line_end":54,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":17242},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":224326,"byte_end":224333,"line_start":56,"line_end":56,"column_start":18,"column_end":25},"name":"0","qualname":"::time::Hertz::0","value":"u32","parent":{"krate":0,"index":17240},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17252},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":224841,"byte_end":224850,"line_start":78,"line_end":78,"column_start":12,"column_end":21},"name":"KiloHertz","qualname":"::time::KiloHertz","value":"","parent":null,"children":[],"decl_id":null,"docs":" Kilohertz","sig":null,"attributes":[{"value":"/ Kilohertz","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":224337,"byte_end":224350,"line_start":58,"line_end":58,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":224351,"byte_end":224354,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Create a frequency specified in kilohertz.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":224355,"byte_end":224401,"line_start":60,"line_end":60,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":224402,"byte_end":224405,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ See also [`Hertz`] and [`MegaHertz`] for semantically correct ways of creating lower or higher","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":224406,"byte_end":224504,"line_start":62,"line_end":62,"column_start":1,"column_end":99}},{"value":"/ frequencies.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":224505,"byte_end":224521,"line_start":63,"line_end":63,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":224522,"byte_end":224525,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":224526,"byte_end":224540,"line_start":65,"line_end":65,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":224541,"byte_end":224544,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ## Create a 100 Khz frequency","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":224545,"byte_end":224578,"line_start":67,"line_end":67,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":224579,"byte_end":224582,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ This example creates a 100 KHz frequency. This could be used to set an I2C data rate or PWM","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":224583,"byte_end":224678,"line_start":69,"line_end":69,"column_start":1,"column_end":96}},{"value":"/ frequency, etc.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":224679,"byte_end":224698,"line_start":70,"line_end":70,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":224699,"byte_end":224702,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":224703,"byte_end":224714,"line_start":72,"line_end":72,"column_start":1,"column_end":12}},{"value":"/ use stm32f1xx_hal::time::Hertz;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":224715,"byte_end":224750,"line_start":73,"line_end":73,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":224751,"byte_end":224754,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ let freq = 100.khz();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":224755,"byte_end":224780,"line_start":75,"line_end":75,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":224781,"byte_end":224788,"line_start":76,"line_end":76,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":17254},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":224851,"byte_end":224858,"line_start":78,"line_end":78,"column_start":22,"column_end":29},"name":"0","qualname":"::time::KiloHertz::0","value":"u32","parent":{"krate":0,"index":17252},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17264},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":225339,"byte_end":225348,"line_start":99,"line_end":99,"column_start":12,"column_end":21},"name":"MegaHertz","qualname":"::time::MegaHertz","value":"","parent":null,"children":[],"decl_id":null,"docs":" Megahertz","sig":null,"attributes":[{"value":"/ Megahertz","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":224862,"byte_end":224875,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":224876,"byte_end":224879,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ Create a frequency specified in kilohertz.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":224880,"byte_end":224926,"line_start":82,"line_end":82,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":224927,"byte_end":224930,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ See also [`Hertz`] and [`KiloHertz`] for semantically correct ways of creating lower","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":224931,"byte_end":225019,"line_start":84,"line_end":84,"column_start":1,"column_end":89}},{"value":"/ frequencies.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":225020,"byte_end":225036,"line_start":85,"line_end":85,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":225037,"byte_end":225040,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":225041,"byte_end":225055,"line_start":87,"line_end":87,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":225056,"byte_end":225059,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ## Create a an 8 MHz frequency","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":225060,"byte_end":225094,"line_start":89,"line_end":89,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":225095,"byte_end":225098,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ This example creates an 8 MHz frequency that could be used to configure an SPI peripheral, etc.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":225099,"byte_end":225198,"line_start":91,"line_end":91,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":225199,"byte_end":225202,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":225203,"byte_end":225214,"line_start":93,"line_end":93,"column_start":1,"column_end":12}},{"value":"/ use stm32f1xx_hal::time::Hertz;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":225215,"byte_end":225250,"line_start":94,"line_end":94,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":225251,"byte_end":225254,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ let freq = 8.mhz();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":225255,"byte_end":225278,"line_start":96,"line_end":96,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":225279,"byte_end":225286,"line_start":97,"line_end":97,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":17266},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":225349,"byte_end":225356,"line_start":99,"line_end":99,"column_start":22,"column_end":29},"name":"0","qualname":"::time::MegaHertz::0","value":"u32","parent":{"krate":0,"index":17264},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17276},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":225431,"byte_end":225443,"line_start":103,"line_end":103,"column_start":12,"column_end":24},"name":"MilliSeconds","qualname":"::time::MilliSeconds","value":"","parent":null,"children":[],"decl_id":null,"docs":" Time unit\n","sig":null,"attributes":[{"value":"/ Time unit","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":225360,"byte_end":225373,"line_start":101,"line_end":101,"column_start":1,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":17278},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":225444,"byte_end":225451,"line_start":103,"line_end":103,"column_start":25,"column_end":32},"name":"0","qualname":"::time::MilliSeconds::0","value":"u32","parent":{"krate":0,"index":17276},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17292},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":225512,"byte_end":225524,"line_start":106,"line_end":106,"column_start":12,"column_end":24},"name":"MicroSeconds","qualname":"::time::MicroSeconds","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":17294},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":225525,"byte_end":225532,"line_start":106,"line_end":106,"column_start":25,"column_end":32},"name":"0","qualname":"::time::MicroSeconds::0","value":"u32","parent":{"krate":0,"index":17292},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1295},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":225614,"byte_end":225620,"line_start":109,"line_end":109,"column_start":11,"column_end":17},"name":"U32Ext","qualname":"::time::U32Ext","value":"U32Ext","parent":null,"children":[{"krate":0,"index":1296},{"krate":0,"index":1297},{"krate":0,"index":1298},{"krate":0,"index":1299},{"krate":0,"index":1300},{"krate":0,"index":1301}],"decl_id":null,"docs":" Extension trait that adds convenience methods to the `u32` type\n","sig":null,"attributes":[{"value":"/ Extension trait that adds convenience methods to the `u32` type","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":225536,"byte_end":225603,"line_start":108,"line_end":108,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1296},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":225652,"byte_end":225655,"line_start":111,"line_end":111,"column_start":8,"column_end":11},"name":"bps","qualname":"::time::U32Ext::bps","value":"pub fn bps(Self) -> Bps","parent":{"krate":0,"index":1295},"children":[],"decl_id":null,"docs":" Wrap in `Bps`\n","sig":null,"attributes":[{"value":"/ Wrap in `Bps`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":225627,"byte_end":225644,"line_start":110,"line_end":110,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1297},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":225702,"byte_end":225704,"line_start":114,"line_end":114,"column_start":8,"column_end":10},"name":"hz","qualname":"::time::U32Ext::hz","value":"pub fn hz(Self) -> Hertz","parent":{"krate":0,"index":1295},"children":[],"decl_id":null,"docs":" Wrap in `Hertz`\n","sig":null,"attributes":[{"value":"/ Wrap in `Hertz`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":225675,"byte_end":225694,"line_start":113,"line_end":113,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1298},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":225757,"byte_end":225760,"line_start":117,"line_end":117,"column_start":8,"column_end":11},"name":"khz","qualname":"::time::U32Ext::khz","value":"pub fn khz(Self) -> KiloHertz","parent":{"krate":0,"index":1295},"children":[],"decl_id":null,"docs":" Wrap in `KiloHertz`\n","sig":null,"attributes":[{"value":"/ Wrap in `KiloHertz`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":225726,"byte_end":225749,"line_start":116,"line_end":116,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1299},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":225817,"byte_end":225820,"line_start":120,"line_end":120,"column_start":8,"column_end":11},"name":"mhz","qualname":"::time::U32Ext::mhz","value":"pub fn mhz(Self) -> MegaHertz","parent":{"krate":0,"index":1295},"children":[],"decl_id":null,"docs":" Wrap in `MegaHertz`\n","sig":null,"attributes":[{"value":"/ Wrap in `MegaHertz`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":225786,"byte_end":225809,"line_start":119,"line_end":119,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1300},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":225880,"byte_end":225882,"line_start":123,"line_end":123,"column_start":8,"column_end":10},"name":"ms","qualname":"::time::U32Ext::ms","value":"pub fn ms(Self) -> MilliSeconds","parent":{"krate":0,"index":1295},"children":[],"decl_id":null,"docs":" Wrap in `MilliSeconds`\n","sig":null,"attributes":[{"value":"/ Wrap in `MilliSeconds`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":225846,"byte_end":225872,"line_start":122,"line_end":122,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1301},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":225945,"byte_end":225947,"line_start":126,"line_end":126,"column_start":8,"column_end":10},"name":"us","qualname":"::time::U32Ext::us","value":"pub fn us(Self) -> MicroSeconds","parent":{"krate":0,"index":1295},"children":[],"decl_id":null,"docs":" Wrap in `MicroSeconds`\n","sig":null,"attributes":[{"value":"/ Wrap in `MicroSeconds`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":225911,"byte_end":225937,"line_start":125,"line_end":125,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":17360},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":228180,"byte_end":228189,"line_start":231,"line_end":231,"column_start":12,"column_end":21},"name":"MonoTimer","qualname":"::time::MonoTimer","value":"MonoTimer {  }","parent":null,"children":[{"krate":0,"index":17361}],"decl_id":null,"docs":" A monotonic non-decreasing timer\n","sig":null,"attributes":[{"value":"/ A monotonic non-decreasing timer","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":228109,"byte_end":228145,"line_start":229,"line_end":229,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1321},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":228285,"byte_end":228288,"line_start":237,"line_end":237,"column_start":12,"column_end":15},"name":"new","qualname":"<MonoTimer>::new","value":"pub fn new(DWT, Clocks) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Monotonic` timer\n","sig":null,"attributes":[{"value":"/ Creates a new `Monotonic` timer","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":228238,"byte_end":228273,"line_start":236,"line_end":236,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1322},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":228607,"byte_end":228616,"line_start":249,"line_end":249,"column_start":12,"column_end":21},"name":"frequency","qualname":"<MonoTimer>::frequency","value":"pub fn frequency(Self) -> Hertz","parent":null,"children":[],"decl_id":null,"docs":" Returns the frequency at which the monotonic timer is operating at\n","sig":null,"attributes":[{"value":"/ Returns the frequency at which the monotonic timer is operating at","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":228525,"byte_end":228595,"line_start":248,"line_end":248,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1323},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":228727,"byte_end":228730,"line_start":254,"line_end":254,"column_start":12,"column_end":15},"name":"now","qualname":"<MonoTimer>::now","value":"pub fn now(Self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns an `Instant` corresponding to \"now\"\n","sig":null,"attributes":[{"value":"/ Returns an `Instant` corresponding to \"now\"","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":228668,"byte_end":228715,"line_start":253,"line_end":253,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":17365},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":228920,"byte_end":228927,"line_start":263,"line_end":263,"column_start":12,"column_end":19},"name":"Instant","qualname":"::time::Instant","value":"Instant {  }","parent":null,"children":[{"krate":0,"index":17366}],"decl_id":null,"docs":" A measurement of a monotonically non-decreasing clock\n","sig":null,"attributes":[{"value":"/ A measurement of a monotonically non-decreasing clock","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":228828,"byte_end":228885,"line_start":261,"line_end":261,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1325},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":229027,"byte_end":229034,"line_start":269,"line_end":269,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Instant>::elapsed","value":"pub fn elapsed(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Ticks elapsed since the `Instant` was created\n","sig":null,"attributes":[{"value":"/ Ticks elapsed since the `Instant` was created","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":228966,"byte_end":229015,"line_start":268,"line_end":268,"column_start":5,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":1326},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"timer","qualname":"::timer","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","parent":null,"children":[{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1330},{"krate":0,"index":1331},{"krate":0,"index":1332},{"krate":0,"index":1333},{"krate":0,"index":1334},{"krate":0,"index":1335},{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1338},{"krate":0,"index":1339},{"krate":0,"index":1340},{"krate":0,"index":1341},{"krate":0,"index":1342},{"krate":0,"index":1343},{"krate":0,"index":1344},{"krate":0,"index":1345},{"krate":0,"index":1346},{"krate":0,"index":1347},{"krate":0,"index":1348},{"krate":0,"index":1349},{"krate":0,"index":1350},{"krate":0,"index":1351},{"krate":0,"index":18629},{"krate":0,"index":1352},{"krate":0,"index":1355},{"krate":0,"index":1359},{"krate":0,"index":1363},{"krate":0,"index":1376},{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1379},{"krate":0,"index":1380},{"krate":0,"index":1381},{"krate":0,"index":1382},{"krate":0,"index":1383},{"krate":0,"index":1384},{"krate":0,"index":1385},{"krate":0,"index":1386},{"krate":0,"index":1387},{"krate":0,"index":1388},{"krate":0,"index":1389},{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1392},{"krate":0,"index":1393},{"krate":0,"index":1394},{"krate":0,"index":1395},{"krate":0,"index":1396},{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1401},{"krate":0,"index":1402},{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1405},{"krate":0,"index":1406},{"krate":0,"index":1407},{"krate":0,"index":17370},{"krate":0,"index":17372},{"krate":0,"index":17375},{"krate":0,"index":17377},{"krate":0,"index":17379},{"krate":0,"index":17381},{"krate":0,"index":17383},{"krate":0,"index":17385},{"krate":0,"index":17388},{"krate":0,"index":17390},{"krate":0,"index":17392},{"krate":0,"index":17394},{"krate":0,"index":17396},{"krate":0,"index":17398},{"krate":0,"index":17401},{"krate":0,"index":17403},{"krate":0,"index":17405},{"krate":0,"index":17407},{"krate":0,"index":17409},{"krate":0,"index":17411},{"krate":0,"index":17414},{"krate":0,"index":17416},{"krate":0,"index":17418},{"krate":0,"index":17420},{"krate":0,"index":17422},{"krate":0,"index":17424},{"krate":0,"index":17427},{"krate":0,"index":17429},{"krate":0,"index":17431},{"krate":0,"index":17433},{"krate":0,"index":17435},{"krate":0,"index":17437},{"krate":0,"index":17440},{"krate":0,"index":17442},{"krate":0,"index":17444},{"krate":0,"index":17446},{"krate":0,"index":17448},{"krate":0,"index":17450},{"krate":0,"index":17453},{"krate":0,"index":17455},{"krate":0,"index":17457},{"krate":0,"index":17459},{"krate":0,"index":17461},{"krate":0,"index":17463},{"krate":0,"index":17466},{"krate":0,"index":17468},{"krate":0,"index":17470},{"krate":0,"index":17472},{"krate":0,"index":17474},{"krate":0,"index":17476},{"krate":0,"index":17479},{"krate":0,"index":17481},{"krate":0,"index":17483},{"krate":0,"index":17485},{"krate":0,"index":1408},{"krate":0,"index":1409},{"krate":0,"index":1410},{"krate":0,"index":1411},{"krate":0,"index":1412},{"krate":0,"index":1413},{"krate":0,"index":1414},{"krate":0,"index":1415},{"krate":0,"index":1416},{"krate":0,"index":1417},{"krate":0,"index":1418},{"krate":0,"index":17487},{"krate":0,"index":17489},{"krate":0,"index":17492},{"krate":0,"index":17494},{"krate":0,"index":17496},{"krate":0,"index":17498},{"krate":0,"index":17500},{"krate":0,"index":17502},{"krate":0,"index":17505},{"krate":0,"index":17507},{"krate":0,"index":17509},{"krate":0,"index":17511},{"krate":0,"index":1419},{"krate":0,"index":1424},{"krate":0,"index":1431},{"krate":0,"index":1436},{"krate":0,"index":1438},{"krate":0,"index":17513},{"krate":0,"index":17524},{"krate":0,"index":17539},{"krate":0,"index":17548},{"krate":0,"index":17549},{"krate":0,"index":17560},{"krate":0,"index":17575},{"krate":0,"index":17584},{"krate":0,"index":17585},{"krate":0,"index":17596},{"krate":0,"index":17611},{"krate":0,"index":17620},{"krate":0,"index":17621},{"krate":0,"index":17632},{"krate":0,"index":17647},{"krate":0,"index":17656}],"decl_id":null,"docs":"  # Timer","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":5387,"byte_end":5422,"line_start":177,"line_end":177,"column_start":1,"column_end":36}},{"value":"*\n  # Timer\n\n  ## Alternate function remapping\n\n  This is a list of the remap settings you can use to assign pins to PWM channels\n  and the QEI peripherals\n\n  ### TIM1\n\n  Not available on STM32F101.\n\n  | Channel | Tim1NoRemap | Tim1FullRemap |\n  |:---:|:-----------:|:-------------:|\n  | CH1 |     PA8     |       PE9     |\n  | CH2 |     PA9     |       PE11    |\n  | CH3 |     PA10    |       PE13    |\n  | CH4 |     PA11    |       PE14    |\n\n  ### TIM2\n\n  | Channel | Tim2NoRemap | Tim2PartialRemap1 | Tim2PartialRemap2 | Tim2FullRemap |\n  |:---:|:-----------:|:-----------------:|:-----------------:|:-------------:|\n  | CH1 |     PA0     |        PA15       |        PA0        |      PA15     |\n  | CH2 |     PA1     |        PB3        |        PA1        |      PB3      |\n  | CH3 |     PA2     |        PA2        |        PB10       |      PB10     |\n  | CH4 |     PA3     |        PA3        |        PB11       |      PB11     |\n\n  ### TIM3\n\n  | Channel | Tim3NoRemap | Tim3PartialRemap | Tim3FullRemap |\n  |:---:|:-----------:|:----------------:|:-------------:|\n  | CH1 |     PA6     |        PB4       |      PC6      |\n  | CH2 |     PA7     |        PB5       |      PC7      |\n  | CH3 |     PB0     |        PB0       |      PC8      |\n  | CH4 |     PB1     |        PB1       |      PC9      |\n\n  ### TIM4\n\n  Not available on low density devices.\n\n  | Channel | Tim4NoRemap | Tim4Remap |\n  |:---:|:-----------:|:---------:|\n  | CH1 |     PB6     |    PD12   |\n  | CH2 |     PB7     |    PD13   |\n  | CH3 |     PB8     |    PD14   |\n  | CH4 |     PB9     |    PD15   |\n*/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":229113,"byte_end":230703,"line_start":1,"line_end":48,"column_start":1,"column_end":3}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1353},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":231818,"byte_end":231824,"line_start":83,"line_end":83,"column_start":5,"column_end":11},"name":"Update","qualname":"::timer::Event::Update","value":"Event::Update","parent":{"krate":0,"index":1352},"children":[],"decl_id":null,"docs":" Timer timed out / count down ended\n","sig":null,"attributes":[{"value":"/ Timer timed out / count down ended","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":231775,"byte_end":231813,"line_start":82,"line_end":82,"column_start":5,"column_end":43}}]},{"kind":"Enum","id":{"krate":0,"index":1352},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":231763,"byte_end":231768,"line_start":81,"line_end":81,"column_start":10,"column_end":15},"name":"Event","qualname":"::timer::Event","value":"pub enum Event {\n\n    /// Timer timed out / count down ended\n    Update,\n}","parent":null,"children":[{"krate":0,"index":1353}],"decl_id":null,"docs":" Interrupt events\n","sig":null,"attributes":[{"value":"/ Interrupt events","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":231733,"byte_end":231753,"line_start":80,"line_end":80,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":1355},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":231840,"byte_end":231845,"line_start":86,"line_end":86,"column_start":12,"column_end":17},"name":"Timer","qualname":"::timer::Timer","value":"Timer {  }","parent":null,"children":[{"krate":0,"index":1357},{"krate":0,"index":1358}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1359},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":231919,"byte_end":231933,"line_start":91,"line_end":91,"column_start":12,"column_end":26},"name":"CountDownTimer","qualname":"::timer::CountDownTimer","value":"CountDownTimer {  }","parent":null,"children":[{"krate":0,"index":1361},{"krate":0,"index":1362}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1364},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":232012,"byte_end":232017,"line_start":97,"line_end":97,"column_start":15,"column_end":20},"name":"Remap","qualname":"::timer::sealed::Remap","value":"Remap","parent":null,"children":[{"krate":0,"index":1365},{"krate":0,"index":1366}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1365},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":232033,"byte_end":232039,"line_start":98,"line_end":98,"column_start":14,"column_end":20},"name":"Periph","qualname":"::timer::sealed::Remap::Periph","value":"type Periph;","parent":{"krate":0,"index":1364},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1366},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":232055,"byte_end":232060,"line_start":99,"line_end":99,"column_start":15,"column_end":20},"name":"REMAP","qualname":"::timer::sealed::Remap::REMAP","value":"u8","parent":{"krate":0,"index":1364},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1367},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":232086,"byte_end":232089,"line_start":101,"line_end":101,"column_start":15,"column_end":18},"name":"Ch1","qualname":"::timer::sealed::Ch1","value":"Ch1<REMAP>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1369},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":232114,"byte_end":232117,"line_start":102,"line_end":102,"column_start":15,"column_end":18},"name":"Ch2","qualname":"::timer::sealed::Ch2","value":"Ch2<REMAP>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1371},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":232142,"byte_end":232145,"line_start":103,"line_end":103,"column_start":15,"column_end":18},"name":"Ch3","qualname":"::timer::sealed::Ch3","value":"Ch3<REMAP>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1373},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":232170,"byte_end":232173,"line_start":104,"line_end":104,"column_start":15,"column_end":18},"name":"Ch4","qualname":"::timer::sealed::Ch4","value":"Ch4<REMAP>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17370},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":233191,"byte_end":233202,"line_start":134,"line_end":134,"column_start":5,"column_end":16},"name":"Tim1NoRemap","qualname":"::timer::Tim1NoRemap","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17383},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":233304,"byte_end":233317,"line_start":136,"line_end":136,"column_start":5,"column_end":18},"name":"Tim1FullRemap","qualname":"::timer::Tim1FullRemap","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17396},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":233372,"byte_end":233383,"line_start":140,"line_end":140,"column_start":5,"column_end":16},"name":"Tim2NoRemap","qualname":"::timer::Tim2NoRemap","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17409},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":233423,"byte_end":233440,"line_start":141,"line_end":141,"column_start":5,"column_end":22},"name":"Tim2PartialRemap1","qualname":"::timer::Tim2PartialRemap1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17422},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":233481,"byte_end":233498,"line_start":142,"line_end":142,"column_start":5,"column_end":22},"name":"Tim2PartialRemap2","qualname":"::timer::Tim2PartialRemap2","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17435},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":233540,"byte_end":233553,"line_start":143,"line_end":143,"column_start":5,"column_end":18},"name":"Tim2FullRemap","qualname":"::timer::Tim2FullRemap","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17448},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":233597,"byte_end":233608,"line_start":145,"line_end":145,"column_start":5,"column_end":16},"name":"Tim3NoRemap","qualname":"::timer::Tim3NoRemap","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17461},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":233648,"byte_end":233664,"line_start":146,"line_end":146,"column_start":5,"column_end":21},"name":"Tim3PartialRemap","qualname":"::timer::Tim3PartialRemap","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17474},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":233704,"byte_end":233717,"line_start":147,"line_end":147,"column_start":5,"column_end":18},"name":"Tim3FullRemap","qualname":"::timer::Tim3FullRemap","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17487},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":233915,"byte_end":233926,"line_start":157,"line_end":157,"column_start":5,"column_end":16},"name":"Tim4NoRemap","qualname":"::timer::Tim4NoRemap","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17500},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":233966,"byte_end":233975,"line_start":158,"line_end":158,"column_start":5,"column_end":14},"name":"Tim4Remap","qualname":"::timer::Tim4Remap","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1420},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":234049,"byte_end":234053,"line_start":162,"line_end":162,"column_start":12,"column_end":16},"name":"syst","qualname":"<Timer<SYST>>::syst","value":"pub fn syst(SYST, &Clocks) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1421},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":234247,"byte_end":234263,"line_start":170,"line_end":170,"column_start":12,"column_end":28},"name":"start_count_down","qualname":"<Timer<SYST>>::start_count_down","value":"pub fn start_count_down<T>(Self, T) -> CountDownTimer<SYST> where\nT: Into<Hertz>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1423},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":234502,"byte_end":234509,"line_start":180,"line_end":180,"column_start":12,"column_end":19},"name":"release","qualname":"<Timer<SYST>>::release","value":"pub fn release(Self) -> SYST","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1425},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":234631,"byte_end":234637,"line_start":187,"line_end":187,"column_start":12,"column_end":18},"name":"listen","qualname":"<CountDownTimer<SYST>>::listen","value":"pub fn listen(&mut Self, Event)","parent":null,"children":[],"decl_id":null,"docs":" Starts listening for an `event`\n","sig":null,"attributes":[{"value":"/ Starts listening for an `event`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":234584,"byte_end":234619,"line_start":186,"line_end":186,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1426},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":234812,"byte_end":234820,"line_start":194,"line_end":194,"column_start":12,"column_end":20},"name":"unlisten","qualname":"<CountDownTimer<SYST>>::unlisten","value":"pub fn unlisten(&mut Self, Event)","parent":null,"children":[],"decl_id":null,"docs":" Stops listening for an `event`\n","sig":null,"attributes":[{"value":"/ Stops listening for an `event`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":234766,"byte_end":234800,"line_start":193,"line_end":193,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1427},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":234984,"byte_end":234989,"line_start":201,"line_end":201,"column_start":12,"column_end":17},"name":"reset","qualname":"<CountDownTimer<SYST>>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resets the counter\n","sig":null,"attributes":[{"value":"/ Resets the counter","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":234950,"byte_end":234972,"line_start":200,"line_end":200,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1428},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":235456,"byte_end":235468,"line_start":210,"line_end":210,"column_start":12,"column_end":24},"name":"micros_since","qualname":"<CountDownTimer<SYST>>::micros_since","value":"pub fn micros_since(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of microseconds since the last update event.\n *NOTE:* This method is not a very good candidate to keep track of time, because\n it is very easy to lose an update event.\n","sig":null,"attributes":[{"value":"/ Returns the number of microseconds since the last update event.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":235240,"byte_end":235307,"line_start":207,"line_end":207,"column_start":5,"column_end":72}},{"value":"/ *NOTE:* This method is not a very good candidate to keep track of time, because","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":235312,"byte_end":235395,"line_start":208,"line_end":208,"column_start":5,"column_end":88}},{"value":"/ it is very easy to lose an update event.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":235400,"byte_end":235444,"line_start":209,"line_end":209,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1429},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":235934,"byte_end":235938,"line_start":221,"line_end":221,"column_start":12,"column_end":16},"name":"stop","qualname":"<CountDownTimer<SYST>>::stop","value":"pub fn stop(Self) -> Timer<SYST>","parent":null,"children":[],"decl_id":null,"docs":" Stops the timer\n","sig":null,"attributes":[{"value":"/ Stops the timer","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":235903,"byte_end":235922,"line_start":220,"line_end":220,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1430},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":236111,"byte_end":236118,"line_start":228,"line_end":228,"column_start":12,"column_end":19},"name":"release","qualname":"<CountDownTimer<SYST>>::release","value":"pub fn release(Self) -> SYST","parent":null,"children":[],"decl_id":null,"docs":" Releases the SYST\n","sig":null,"attributes":[{"value":"/ Releases the SYST","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":236078,"byte_end":236099,"line_start":227,"line_end":227,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":17514},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":243274,"byte_end":243278,"line_start":424,"line_end":424,"column_start":12,"column_end":16},"name":"tim2","qualname":"<Timer<TIM2>>::tim2","value":"pub fn tim2(TIM2, &Clocks, &mut APB1) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Initialize timer\n","sig":null,"attributes":[{"value":"/ Initialize timer","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":236922,"byte_end":236942,"line_start":264,"line_end":264,"column_start":17,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":17550},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":243319,"byte_end":243323,"line_start":425,"line_end":425,"column_start":12,"column_end":16},"name":"tim3","qualname":"<Timer<TIM3>>::tim3","value":"pub fn tim3(TIM3, &Clocks, &mut APB1) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Initialize timer\n","sig":null,"attributes":[{"value":"/ Initialize timer","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":236922,"byte_end":236942,"line_start":264,"line_end":264,"column_start":17,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":17586},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":243459,"byte_end":243463,"line_start":430,"line_end":430,"column_start":12,"column_end":16},"name":"tim1","qualname":"<Timer<TIM1>>::tim1","value":"pub fn tim1(TIM1, &Clocks, &mut APB2) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Initialize timer\n","sig":null,"attributes":[{"value":"/ Initialize timer","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":236922,"byte_end":236942,"line_start":264,"line_end":264,"column_start":17,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":17622},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":244050,"byte_end":244054,"line_start":455,"line_end":455,"column_start":12,"column_end":16},"name":"tim4","qualname":"<Timer<TIM4>>::tim4","value":"pub fn tim4(TIM4, &Clocks, &mut APB1) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Initialize timer\n","sig":null,"attributes":[{"value":"/ Initialize timer","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":236922,"byte_end":236942,"line_start":264,"line_end":264,"column_start":17,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":1439},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/watchdog.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"watchdog","qualname":"::watchdog","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/watchdog.rs","parent":null,"children":[{"krate":0,"index":1440},{"krate":0,"index":1441},{"krate":0,"index":1442},{"krate":0,"index":1443},{"krate":0,"index":1444},{"krate":0,"index":1445},{"krate":0,"index":1446},{"krate":0,"index":1447},{"krate":0,"index":18707},{"krate":0,"index":1448},{"krate":0,"index":1450},{"krate":0,"index":1451},{"krate":0,"index":1452},{"krate":0,"index":1453},{"krate":0,"index":1454},{"krate":0,"index":1455},{"krate":0,"index":1456},{"krate":0,"index":1472},{"krate":0,"index":1477}],"decl_id":null,"docs":" Watchdog peripherals\n","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":5548,"byte_end":5583,"line_start":184,"line_end":184,"column_start":1,"column_end":36}},{"value":"/ Watchdog peripherals","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/watchdog.rs","byte_start":244857,"byte_end":244881,"line_start":1,"line_end":1,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":1448},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/watchdog.rs","byte_start":245067,"byte_end":245086,"line_start":10,"line_end":10,"column_start":12,"column_end":31},"name":"IndependentWatchdog","qualname":"::watchdog::IndependentWatchdog","value":"IndependentWatchdog {  }","parent":null,"children":[{"krate":0,"index":1449}],"decl_id":null,"docs":" Wraps the Independent Watchdog (IWDG) peripheral\n","sig":null,"attributes":[{"value":"/ Wraps the Independent Watchdog (IWDG) peripheral","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/watchdog.rs","byte_start":245003,"byte_end":245055,"line_start":9,"line_end":9,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1457},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/watchdog.rs","byte_start":245349,"byte_end":245352,"line_start":23,"line_end":23,"column_start":12,"column_end":15},"name":"new","qualname":"<IndependentWatchdog>::new","value":"pub fn new(IWDG) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wrap and start the watchdog\n","sig":null,"attributes":[{"value":"/ Wrap and start the watchdog","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/watchdog.rs","byte_start":245306,"byte_end":245337,"line_start":22,"line_end":22,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1458},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/watchdog.rs","byte_start":245493,"byte_end":245506,"line_start":28,"line_end":28,"column_start":12,"column_end":25},"name":"stop_on_debug","qualname":"<IndependentWatchdog>::stop_on_debug","value":"pub fn stop_on_debug(&Self, &DBG, bool)","parent":null,"children":[],"decl_id":null,"docs":" Debug independent watchdog stopped when core is halted\n","sig":null,"attributes":[{"value":"/ Debug independent watchdog stopped when core is halted","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/watchdog.rs","byte_start":245423,"byte_end":245481,"line_start":27,"line_end":27,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1465},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/watchdog.rs","byte_start":246244,"byte_end":246252,"line_start":53,"line_end":53,"column_start":12,"column_end":20},"name":"interval","qualname":"<IndependentWatchdog>::interval","value":"pub fn interval(&Self) -> MilliSeconds","parent":null,"children":[],"decl_id":null,"docs":" Returns the interval in ms\n","sig":null,"attributes":[{"value":"/ Returns the interval in ms","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/watchdog.rs","byte_start":246202,"byte_end":246232,"line_start":52,"line_end":52,"column_start":5,"column_end":35}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":6904,"byte_end":6914,"line_start":56,"line_end":56,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":7565,"byte_end":7570,"line_start":88,"line_end":88,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":20704,"byte_end":20707,"line_start":419,"line_end":419,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":25644,"byte_end":25650,"line_start":553,"line_end":553,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":25756,"byte_end":25762,"line_start":558,"line_end":558,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":26142,"byte_end":26148,"line_start":570,"line_end":570,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":26360,"byte_end":26363,"line_start":580,"line_end":580,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":27946,"byte_end":27952,"line_start":639,"line_end":639,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":28323,"byte_end":28329,"line_start":654,"line_end":654,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":28803,"byte_end":28809,"line_start":670,"line_end":670,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":29931,"byte_end":29937,"line_start":708,"line_end":708,"column_start":53,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":31224,"byte_end":31228,"line_start":16,"line_end":16,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":32251,"byte_end":32255,"line_start":59,"line_end":59,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":32737,"byte_end":32741,"line_start":80,"line_end":80,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":33774,"byte_end":33781,"line_start":118,"line_end":118,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":33927,"byte_end":33934,"line_start":128,"line_end":128,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":34080,"byte_end":34087,"line_start":138,"line_end":138,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":34233,"byte_end":34240,"line_start":148,"line_end":148,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":34384,"byte_end":34389,"line_start":158,"line_end":158,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/backup_domain.rs","byte_start":35553,"byte_end":35565,"line_start":38,"line_end":38,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/crc.rs","byte_start":38160,"byte_end":38163,"line_start":12,"line_end":12,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/crc.rs","byte_start":38338,"byte_end":38341,"line_start":24,"line_end":24,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/delay.rs","byte_start":39083,"byte_end":39088,"line_start":16,"line_end":16,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/delay.rs","byte_start":39439,"byte_end":39444,"line_start":30,"line_end":30,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/delay.rs","byte_start":39551,"byte_end":39556,"line_start":36,"line_end":36,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/delay.rs","byte_start":39659,"byte_end":39664,"line_start":42,"line_end":42,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/delay.rs","byte_start":39767,"byte_end":39772,"line_start":48,"line_end":48,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/delay.rs","byte_start":40552,"byte_end":40557,"line_start":76,"line_end":76,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/delay.rs","byte_start":40659,"byte_end":40664,"line_start":82,"line_end":82,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":41262,"byte_end":41272,"line_start":36,"line_end":36,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":42048,"byte_end":42056,"line_start":79,"line_end":79,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":42276,"byte_end":42284,"line_start":89,"line_end":89,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":42519,"byte_end":42527,"line_start":99,"line_end":99,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/flash.rs","byte_start":57104,"byte_end":57109,"line_start":11,"line_end":11,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/flash.rs","byte_start":57396,"byte_end":57399,"line_start":31,"line_end":31,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":61957,"byte_end":61962,"line_start":99,"line_end":99,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":62303,"byte_end":62309,"line_start":114,"line_end":114,"column_start":23,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":62497,"byte_end":62503,"line_start":123,"line_end":123,"column_start":17,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":62614,"byte_end":62623,"line_start":129,"line_end":129,"column_start":23,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":63447,"byte_end":63454,"line_start":165,"line_end":165,"column_start":17,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":63538,"byte_end":63545,"line_start":172,"line_end":172,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":437},{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":64256,"byte_end":64261,"line_start":196,"line_end":196,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":64355,"byte_end":64361,"line_start":201,"line_end":201,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":64455,"byte_end":64464,"line_start":206,"line_end":206,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":64552,"byte_end":64560,"line_start":211,"line_end":211,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":108839,"byte_end":108843,"line_start":53,"line_end":53,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":492},{"krate":0,"index":494},{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":110201,"byte_end":110204,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":110656,"byte_end":110667,"line_start":127,"line_end":127,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":527}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":111462,"byte_end":111465,"line_start":159,"line_end":159,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":111796,"byte_end":111807,"line_start":169,"line_end":169,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":114188,"byte_end":114191,"line_start":265,"line_end":265,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":114780,"byte_end":114783,"line_start":290,"line_end":290,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":549},{"krate":0,"index":557},{"krate":0,"index":559},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":565},{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":118010,"byte_end":118021,"line_start":386,"line_end":386,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":118639,"byte_end":118650,"line_start":413,"line_end":413,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":575},{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":120257,"byte_end":120268,"line_start":456,"line_end":456,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":582},{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":120640,"byte_end":120651,"line_start":471,"line_end":471,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":587},{"krate":0,"index":588}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":123585,"byte_end":123596,"line_start":544,"line_end":544,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":600},{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm.rs","byte_start":129346,"byte_end":129351,"line_start":139,"line_end":139,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm.rs","byte_start":129999,"byte_end":130004,"line_start":162,"line_end":162,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm.rs","byte_start":130442,"byte_end":130447,"line_start":181,"line_end":181,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm.rs","byte_start":130912,"byte_end":130917,"line_start":201,"line_end":201,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":679}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm.rs","byte_start":131537,"byte_end":131540,"line_start":229,"line_end":229,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":144858,"byte_end":144863,"line_start":86,"line_end":86,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":145375,"byte_end":145380,"line_start":106,"line_end":106,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":145892,"byte_end":145897,"line_start":126,"line_end":126,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":146436,"byte_end":146441,"line_start":147,"line_end":147,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/qei.rs","byte_start":155555,"byte_end":155565,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/qei.rs","byte_start":155909,"byte_end":155914,"line_start":75,"line_end":75,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/qei.rs","byte_start":156326,"byte_end":156331,"line_start":93,"line_end":93,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/qei.rs","byte_start":156743,"byte_end":156748,"line_start":111,"line_end":111,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":831}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/qei.rs","byte_start":157187,"byte_end":157192,"line_start":130,"line_end":130,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":160113,"byte_end":160116,"line_start":19,"line_end":19,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":161111,"byte_end":161114,"line_start":63,"line_end":63,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":864}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":161628,"byte_end":161632,"line_start":85,"line_end":85,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":868},{"krate":0,"index":869}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":161999,"byte_end":162003,"line_start":97,"line_end":97,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":871}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":162449,"byte_end":162453,"line_start":117,"line_end":117,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":876},{"krate":0,"index":877}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":163389,"byte_end":163393,"line_start":149,"line_end":149,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":887},{"krate":0,"index":889},{"krate":0,"index":891},{"krate":0,"index":893},{"krate":0,"index":895},{"krate":0,"index":897},{"krate":0,"index":899}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":171861,"byte_end":171864,"line_start":448,"line_end":448,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":912}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":173054,"byte_end":173060,"line_start":488,"line_end":488,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":920},{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":174436,"byte_end":174439,"line_start":547,"line_end":547,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":174540,"byte_end":174544,"line_start":553,"line_end":553,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":932},{"krate":0,"index":933}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":174734,"byte_end":174738,"line_start":562,"line_end":562,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":935},{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rtc.rs","byte_start":180140,"byte_end":180143,"line_start":32,"line_end":32,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":959},{"krate":0,"index":963},{"krate":0,"index":965},{"krate":0,"index":970},{"krate":0,"index":974},{"krate":0,"index":978},{"krate":0,"index":981},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":988},{"krate":0,"index":991},{"krate":0,"index":994},{"krate":0,"index":997},{"krate":0,"index":999}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":189490,"byte_end":189496,"line_start":139,"line_end":139,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1107}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":190054,"byte_end":190060,"line_start":166,"line_end":166,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1109}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":200743,"byte_end":200745,"line_start":458,"line_end":458,"column_start":34,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1129}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":211215,"byte_end":211220,"line_start":125,"line_end":125,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":211252,"byte_end":211258,"line_start":126,"line_end":126,"column_start":29,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":211290,"byte_end":211296,"line_start":127,"line_end":127,"column_start":29,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":212055,"byte_end":212058,"line_start":150,"line_end":150,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1243}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":212869,"byte_end":212872,"line_start":177,"line_end":177,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1250}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":214421,"byte_end":214424,"line_start":230,"line_end":230,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1258},{"krate":0,"index":1261},{"krate":0,"index":1262}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":216802,"byte_end":216805,"line_start":315,"line_end":315,"column_start":60,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1267},{"krate":0,"index":1268},{"krate":0,"index":1269}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":218282,"byte_end":218285,"line_start":358,"line_end":358,"column_start":77,"column_end":80},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":218421,"byte_end":218424,"line_start":363,"line_end":363,"column_start":65,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":1278},{"krate":0,"index":1279}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":226390,"byte_end":226395,"line_start":155,"line_end":155,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1310}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":226498,"byte_end":226503,"line_start":161,"line_end":161,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1312}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":226610,"byte_end":226619,"line_start":167,"line_end":167,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1314}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":226718,"byte_end":226730,"line_start":173,"line_end":173,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1316}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":226822,"byte_end":226834,"line_start":179,"line_end":179,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1318}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":228222,"byte_end":228231,"line_start":235,"line_end":235,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1321},{"krate":0,"index":1322},{"krate":0,"index":1323}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":228952,"byte_end":228959,"line_start":267,"line_end":267,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1325}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":234024,"byte_end":234029,"line_start":161,"line_end":161,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1420},{"krate":0,"index":1421},{"krate":0,"index":1423}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":234557,"byte_end":234571,"line_start":185,"line_end":185,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1425},{"krate":0,"index":1426},{"krate":0,"index":1427},{"krate":0,"index":1428},{"krate":0,"index":1429},{"krate":0,"index":1430}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":236193,"byte_end":236207,"line_start":233,"line_end":233,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1432},{"krate":0,"index":1433},{"krate":0,"index":1435}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":236715,"byte_end":236729,"line_start":258,"line_end":258,"column_start":19,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/watchdog.rs","byte_start":245280,"byte_end":245299,"line_start":21,"line_end":21,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1460},{"krate":0,"index":1464},{"krate":0,"index":1465},{"krate":0,"index":1466},{"krate":0,"index":1467}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/watchdog.rs","byte_start":247346,"byte_end":247365,"line_start":91,"line_end":91,"column_start":25,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1473},{"krate":0,"index":1474}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/watchdog.rs","byte_start":247589,"byte_end":247608,"line_start":101,"line_end":101,"column_start":19,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1478}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":4471,"byte_end":4474,"line_start":140,"line_end":140,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":8}},{"kind":"Mod","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":4520,"byte_end":4524,"line_start":142,"line_end":142,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":135}},{"kind":"Mod","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":4570,"byte_end":4583,"line_start":144,"line_end":144,"column_start":9,"column_end":22},"ref_id":{"krate":0,"index":198}},{"kind":"Mod","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":4629,"byte_end":4631,"line_start":146,"line_end":146,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":207}},{"kind":"Mod","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":4677,"byte_end":4680,"line_start":148,"line_end":148,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":215}},{"kind":"Mod","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":4726,"byte_end":4731,"line_start":150,"line_end":150,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":232}},{"kind":"Mod","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":4777,"byte_end":4780,"line_start":152,"line_end":152,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":259}},{"kind":"Mod","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":4826,"byte_end":4831,"line_start":154,"line_end":154,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":357}},{"kind":"Mod","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":4877,"byte_end":4881,"line_start":156,"line_end":156,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":371}},{"kind":"Mod","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":4927,"byte_end":4930,"line_start":158,"line_end":158,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":457}},{"kind":"Mod","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":4976,"byte_end":4983,"line_start":160,"line_end":160,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":602}},{"kind":"Mod","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":5029,"byte_end":5032,"line_start":162,"line_end":162,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":618}},{"kind":"Mod","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":5078,"byte_end":5087,"line_start":164,"line_end":164,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":712}},{"kind":"Mod","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":5133,"byte_end":5136,"line_start":166,"line_end":166,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":795}},{"kind":"Mod","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":5182,"byte_end":5185,"line_start":168,"line_end":168,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":841}},{"kind":"Mod","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":5231,"byte_end":5234,"line_start":170,"line_end":170,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":948}},{"kind":"Mod","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":5280,"byte_end":5286,"line_start":172,"line_end":172,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1003}},{"kind":"Mod","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":5332,"byte_end":5335,"line_start":174,"line_end":174,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1143}},{"kind":"Mod","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":5381,"byte_end":5385,"line_start":176,"line_end":176,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1291}},{"kind":"Mod","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":5431,"byte_end":5436,"line_start":178,"line_end":178,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1326}},{"kind":"Mod","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/lib.rs","byte_start":5592,"byte_end":5600,"line_start":185,"line_end":185,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1439}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":6904,"byte_end":6914,"line_start":56,"line_end":56,"column_start":18,"column_end":28},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1480},"to":{"krate":1,"index":2059}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":7565,"byte_end":7570,"line_start":88,"line_end":88,"column_start":18,"column_end":23},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1505},"to":{"krate":1,"index":2059}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":20704,"byte_end":20707,"line_start":419,"line_end":419,"column_start":6,"column_end":9},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":41},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":25461,"byte_end":25480,"line_start":546,"line_end":546,"column_start":30,"column_end":49},"kind":"SuperTrait","from":{"krate":0,"index":72},"to":{"krate":0,"index":75}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":25644,"byte_end":25650,"line_start":553,"line_end":553,"column_start":30,"column_end":36},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":79},"to":{"krate":0,"index":337}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":25756,"byte_end":25762,"line_start":558,"line_end":558,"column_start":32,"column_end":38},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":79},"to":{"krate":0,"index":292}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":26142,"byte_end":26148,"line_start":570,"line_end":570,"column_start":32,"column_end":38},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":79},"to":{"krate":0,"index":292}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":26360,"byte_end":26363,"line_start":580,"line_end":580,"column_start":6,"column_end":9},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":41},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":27946,"byte_end":27952,"line_start":639,"line_end":639,"column_start":12,"column_end":18},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":79},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":28323,"byte_end":28329,"line_start":654,"line_end":654,"column_start":12,"column_end":18},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":79},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":28803,"byte_end":28809,"line_start":670,"line_end":670,"column_start":57,"column_end":63},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":79},"to":{"krate":0,"index":343}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/adc.rs","byte_start":29931,"byte_end":29937,"line_start":708,"line_end":708,"column_start":53,"column_end":59},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":79},"to":{"krate":0,"index":348}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":31224,"byte_end":31228,"line_start":16,"line_end":16,"column_start":18,"column_end":22},"kind":{"Impl":{"id":45}},"from":{"krate":8,"index":6131},"to":{"krate":0,"index":151}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":32251,"byte_end":32255,"line_start":59,"line_end":59,"column_start":6,"column_end":10},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":163},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":32737,"byte_end":32741,"line_start":80,"line_end":80,"column_start":6,"column_end":10},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":167},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":33774,"byte_end":33781,"line_start":118,"line_end":118,"column_start":6,"column_end":13},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":178},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":33927,"byte_end":33934,"line_start":128,"line_end":128,"column_start":6,"column_end":13},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":34080,"byte_end":34087,"line_start":138,"line_end":138,"column_start":6,"column_end":13},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":34233,"byte_end":34240,"line_start":148,"line_end":148,"column_start":6,"column_end":13},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/afio.rs","byte_start":34384,"byte_end":34389,"line_start":158,"line_end":158,"column_start":6,"column_end":11},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/backup_domain.rs","byte_start":35553,"byte_end":35565,"line_start":38,"line_end":38,"column_start":6,"column_end":18},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":200},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/crc.rs","byte_start":38160,"byte_end":38163,"line_start":12,"line_end":12,"column_start":17,"column_end":20},"kind":{"Impl":{"id":54}},"from":{"krate":8,"index":25732},"to":{"krate":0,"index":220}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/crc.rs","byte_start":38338,"byte_end":38341,"line_start":24,"line_end":24,"column_start":6,"column_end":9},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/delay.rs","byte_start":39083,"byte_end":39088,"line_start":16,"line_end":16,"column_start":6,"column_end":11},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":240},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/delay.rs","byte_start":39439,"byte_end":39444,"line_start":30,"line_end":30,"column_start":23,"column_end":28},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":240},"to":{"krate":4,"index":20}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/delay.rs","byte_start":39551,"byte_end":39556,"line_start":36,"line_end":36,"column_start":23,"column_end":28},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":240},"to":{"krate":4,"index":20}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/delay.rs","byte_start":39659,"byte_end":39664,"line_start":42,"line_end":42,"column_start":22,"column_end":27},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":240},"to":{"krate":4,"index":20}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/delay.rs","byte_start":39767,"byte_end":39772,"line_start":48,"line_end":48,"column_start":23,"column_end":28},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":240},"to":{"krate":4,"index":23}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/delay.rs","byte_start":40552,"byte_end":40557,"line_start":76,"line_end":76,"column_start":23,"column_end":28},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":240},"to":{"krate":4,"index":23}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/delay.rs","byte_start":40659,"byte_end":40664,"line_start":82,"line_end":82,"column_start":22,"column_end":27},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":240},"to":{"krate":4,"index":23}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":41262,"byte_end":41272,"line_start":36,"line_end":36,"column_start":23,"column_end":33},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":268},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":42048,"byte_end":42056,"line_start":79,"line_end":79,"column_start":23,"column_end":31},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":295},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":42276,"byte_end":42284,"line_start":89,"line_end":89,"column_start":23,"column_end":31},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":295},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":42519,"byte_end":42527,"line_start":99,"line_end":99,"column_start":38,"column_end":46},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":295},"to":{"krate":1,"index":2271}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":56279,"byte_end":56286,"line_start":483,"line_end":483,"column_start":31,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":337},"to":{"krate":0,"index":343}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":56474,"byte_end":56481,"line_start":491,"line_end":491,"column_start":27,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":337},"to":{"krate":0,"index":348}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/dma.rs","byte_start":56677,"byte_end":56685,"line_start":499,"line_end":499,"column_start":31,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":340},"to":{"krate":0,"index":352}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/flash.rs","byte_start":57104,"byte_end":57109,"line_start":11,"line_end":11,"column_start":19,"column_end":24},"kind":{"Impl":{"id":67}},"from":{"krate":8,"index":25812},"to":{"krate":0,"index":361}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/flash.rs","byte_start":57396,"byte_end":57399,"line_start":31,"line_end":31,"column_start":6,"column_end":9},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":367},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":61957,"byte_end":61962,"line_start":99,"line_end":99,"column_start":23,"column_end":28},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":382},"to":{"krate":0,"index":381}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":62303,"byte_end":62309,"line_start":114,"line_end":114,"column_start":23,"column_end":29},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":395},"to":{"krate":0,"index":381}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":62497,"byte_end":62503,"line_start":123,"line_end":123,"column_start":17,"column_end":23},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":404},"to":{"krate":0,"index":381}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":62614,"byte_end":62623,"line_start":129,"line_end":129,"column_start":23,"column_end":32},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":407},"to":{"krate":0,"index":381}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":63447,"byte_end":63454,"line_start":165,"line_end":165,"column_start":17,"column_end":24},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":424},"to":{"krate":0,"index":381}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":63538,"byte_end":63545,"line_start":172,"line_end":172,"column_start":6,"column_end":13},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":424},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":64256,"byte_end":64261,"line_start":196,"line_end":196,"column_start":12,"column_end":17},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":382},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":64355,"byte_end":64361,"line_start":201,"line_end":201,"column_start":12,"column_end":18},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":395},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":64455,"byte_end":64464,"line_start":206,"line_end":206,"column_start":12,"column_end":21},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":407},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/gpio.rs","byte_start":64552,"byte_end":64560,"line_start":211,"line_end":211,"column_start":6,"column_end":14},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":387},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":108839,"byte_end":108843,"line_start":53,"line_end":53,"column_start":6,"column_end":10},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":15959},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":110201,"byte_end":110204,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":506},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":110656,"byte_end":110667,"line_start":127,"line_end":127,"column_start":12,"column_end":23},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":111462,"byte_end":111465,"line_start":159,"line_end":159,"column_start":12,"column_end":15},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":506},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":111796,"byte_end":111807,"line_start":169,"line_end":169,"column_start":12,"column_end":23},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":114188,"byte_end":114191,"line_start":265,"line_end":265,"column_start":17,"column_end":20},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":506},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":114780,"byte_end":114783,"line_start":290,"line_end":290,"column_start":17,"column_end":20},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":506},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":118010,"byte_end":118021,"line_start":386,"line_end":386,"column_start":17,"column_end":28},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":118639,"byte_end":118650,"line_start":413,"line_end":413,"column_start":17,"column_end":28},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":120257,"byte_end":120268,"line_start":456,"line_end":456,"column_start":27,"column_end":38},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":513},"to":{"krate":4,"index":30}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":120640,"byte_end":120651,"line_start":471,"line_end":471,"column_start":26,"column_end":37},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":513},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/i2c.rs","byte_start":123585,"byte_end":123596,"line_start":544,"line_end":544,"column_start":31,"column_end":42},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":513},"to":{"krate":4,"index":37}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm.rs","byte_start":129346,"byte_end":129351,"line_start":139,"line_end":139,"column_start":6,"column_end":11},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1355},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm.rs","byte_start":129999,"byte_end":130004,"line_start":162,"line_end":162,"column_start":6,"column_end":11},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1355},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm.rs","byte_start":130442,"byte_end":130447,"line_start":181,"line_end":181,"column_start":6,"column_end":11},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1355},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm.rs","byte_start":130912,"byte_end":130917,"line_start":201,"line_end":201,"column_start":6,"column_end":11},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1355},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm.rs","byte_start":131537,"byte_end":131540,"line_start":229,"line_end":229,"column_start":27,"column_end":30},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":685},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":144858,"byte_end":144863,"line_start":86,"line_end":86,"column_start":6,"column_end":11},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1355},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":145375,"byte_end":145380,"line_start":106,"line_end":106,"column_start":6,"column_end":11},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1355},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":145892,"byte_end":145897,"line_start":126,"line_end":126,"column_start":6,"column_end":11},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1355},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/pwm_input.rs","byte_start":146436,"byte_end":146441,"line_start":147,"line_end":147,"column_start":6,"column_end":11},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1355},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/qei.rs","byte_start":155555,"byte_end":155565,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":16511},"to":{"krate":1,"index":2059}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/qei.rs","byte_start":155909,"byte_end":155914,"line_start":75,"line_end":75,"column_start":6,"column_end":11},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1355},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/qei.rs","byte_start":156326,"byte_end":156331,"line_start":93,"line_end":93,"column_start":6,"column_end":11},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1355},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/qei.rs","byte_start":156743,"byte_end":156748,"line_start":111,"line_end":111,"column_start":6,"column_end":11},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1355},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/qei.rs","byte_start":157187,"byte_end":157192,"line_start":130,"line_end":130,"column_start":6,"column_end":11},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1355},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":160113,"byte_end":160116,"line_start":19,"line_end":19,"column_start":17,"column_end":20},"kind":{"Impl":{"id":105}},"from":{"krate":8,"index":2040},"to":{"krate":0,"index":851}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":161111,"byte_end":161114,"line_start":63,"line_end":63,"column_start":6,"column_end":9},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":861},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":161628,"byte_end":161632,"line_start":85,"line_end":85,"column_start":6,"column_end":10},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":865},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":161999,"byte_end":162003,"line_start":97,"line_end":97,"column_start":6,"column_end":10},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":865},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":162449,"byte_end":162453,"line_start":117,"line_end":117,"column_start":6,"column_end":10},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":873},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":163389,"byte_end":163393,"line_start":149,"line_end":149,"column_start":6,"column_end":10},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":879},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":171861,"byte_end":171864,"line_start":448,"line_end":448,"column_start":6,"column_end":9},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":909},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":173054,"byte_end":173060,"line_start":488,"line_end":488,"column_start":6,"column_end":12},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":16583},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":174436,"byte_end":174439,"line_start":547,"line_end":547,"column_start":21,"column_end":24},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":861},"to":{"krate":0,"index":926}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":174540,"byte_end":174544,"line_start":553,"line_end":553,"column_start":21,"column_end":25},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":865},"to":{"krate":0,"index":926}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":174734,"byte_end":174738,"line_start":562,"line_end":562,"column_start":21,"column_end":25},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":873},"to":{"krate":0,"index":926}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":175109,"byte_end":175115,"line_start":581,"line_end":581,"column_start":19,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":938},"to":{"krate":0,"index":941}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rcc.rs","byte_start":175232,"byte_end":175238,"line_start":587,"line_end":587,"column_start":18,"column_end":24},"kind":"SuperTrait","from":{"krate":0,"index":938},"to":{"krate":0,"index":944}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/rtc.rs","byte_start":180140,"byte_end":180143,"line_start":32,"line_end":32,"column_start":6,"column_end":9},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":956},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":189490,"byte_end":189496,"line_start":139,"line_end":139,"column_start":6,"column_end":12},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1098},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":190054,"byte_end":190060,"line_start":166,"line_end":166,"column_start":18,"column_end":24},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1098},"to":{"krate":1,"index":2059}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":190599,"byte_end":190604,"line_start":194,"line_end":194,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2271},"to":{"krate":0,"index":1121}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/serial.rs","byte_start":200743,"byte_end":200745,"line_start":458,"line_end":458,"column_start":34,"column_end":36},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1118},"to":{"krate":1,"index":6789}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":211215,"byte_end":211220,"line_start":125,"line_end":125,"column_start":28,"column_end":33},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1227},"to":{"krate":0,"index":1198}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":211252,"byte_end":211258,"line_start":126,"line_end":126,"column_start":29,"column_end":35},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1229},"to":{"krate":0,"index":1200}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":211290,"byte_end":211296,"line_start":127,"line_end":127,"column_start":29,"column_end":35},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1231},"to":{"krate":0,"index":1202}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":212055,"byte_end":212058,"line_start":150,"line_end":150,"column_start":19,"column_end":22},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":212869,"byte_end":212872,"line_start":177,"line_end":177,"column_start":19,"column_end":22},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":214421,"byte_end":214424,"line_start":230,"line_end":230,"column_start":24,"column_end":27},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":216802,"byte_end":216805,"line_start":315,"line_end":315,"column_start":60,"column_end":63},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1220},"to":{"krate":4,"index":260}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":218282,"byte_end":218285,"line_start":358,"line_end":358,"column_start":77,"column_end":80},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1220},"to":{"krate":4,"index":79}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/spi.rs","byte_start":218421,"byte_end":218424,"line_start":363,"line_end":363,"column_start":65,"column_end":68},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1220},"to":{"krate":4,"index":69}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":226390,"byte_end":226395,"line_start":155,"line_end":155,"column_start":26,"column_end":31},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":17240},"to":{"krate":1,"index":1989}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":226498,"byte_end":226503,"line_start":161,"line_end":161,"column_start":26,"column_end":31},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":17240},"to":{"krate":1,"index":1989}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":226610,"byte_end":226619,"line_start":167,"line_end":167,"column_start":26,"column_end":35},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":17252},"to":{"krate":1,"index":1989}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":226718,"byte_end":226730,"line_start":173,"line_end":173,"column_start":22,"column_end":34},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":17276},"to":{"krate":1,"index":1986}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":226822,"byte_end":226834,"line_start":179,"line_end":179,"column_start":22,"column_end":34},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":17292},"to":{"krate":1,"index":1986}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":228222,"byte_end":228231,"line_start":235,"line_end":235,"column_start":6,"column_end":15},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":17360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/time.rs","byte_start":228952,"byte_end":228959,"line_start":267,"line_end":267,"column_start":6,"column_end":13},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":17365},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":234024,"byte_end":234029,"line_start":161,"line_end":161,"column_start":6,"column_end":11},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1355},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":234557,"byte_end":234571,"line_start":185,"line_end":185,"column_start":6,"column_end":20},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":236193,"byte_end":236207,"line_start":233,"line_end":233,"column_start":20,"column_end":34},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1359},"to":{"krate":4,"index":272}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/timer.rs","byte_start":236715,"byte_end":236729,"line_start":258,"line_end":258,"column_start":19,"column_end":33},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1359},"to":{"krate":4,"index":277}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/watchdog.rs","byte_start":245280,"byte_end":245299,"line_start":21,"line_end":21,"column_start":6,"column_end":25},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1448},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/watchdog.rs","byte_start":247346,"byte_end":247365,"line_start":91,"line_end":91,"column_start":25,"column_end":44},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1448},"to":{"krate":4,"index":284}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f1xx-hal-0.6.1/src/watchdog.rs","byte_start":247589,"byte_end":247608,"line_start":101,"line_end":101,"column_start":19,"column_end":38},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1448},"to":{"krate":4,"index":282}}]}